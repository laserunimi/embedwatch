
*********CallGraph Stats***************
################ (program : xml-parser-24.rectracker.bc)###############
-------------------------------------------------------
TotalNode           45
TotalCycle          0
NodeInCycle         0
MaxNodeInCycle      0
TotalEdge           152
CalRetPairInCycle   0
#######################################################

*********General Stats***************
################ (program : xml-parser-24.rectracker.bc)###############
TotalPointers       2829
TotalObjects        223
TotalFieldObjects   22
MaxStructSize       4
TotalSVFStmts       2912
TotalPTASVFStmts    1414
FIObjNum            1
FSObjNum            221
AddrsNum            343
LoadsNum            685
StoresNum           333
CopysNum            204
GepsNum             325
CallsNum            413
ReturnsNum          71
FunctionObjs        45
GlobalObjs          2
HeapObjs            1
StackObjs           173
VarStructObj        6
VarArrayObj         6
ConstStructObj      0
ConstArrayObj       0
NonPtrObj           110
ConstantObj         0
IndCallSites        0
TotalCallSite       152
BBWith2Succ         105
BBWith3Succ         7
-------------------------------------------------------
LLVMIRTime          0.006
SymbolTableTime     0.021
SVFIRTime           0.04
#######################################################

*********Constraint Graph Stats***************
################ (program : xml-parser-24.rectracker.bc)###############
-------------------------------------------------------
AvgIn/OutCopyEdge   0.776905
AvgIn/OutLoadEdge   0.336999
AvgIn/OutAddrEdge   0.201885
AvgIn/OutEdge       1.42498
LocalVarInRecur     0
NumOfCGNode         3079
TotalValidNode      1273
TotalValidObjNode   201
NumOfCGEdge         1557
NumOfAddrs          257
NumOfCopys          680
NumOfGeps           309
NumOfLoads          429
NumOfStores         139
MaxInCopyEdge       13
MaxOutCopyEdge      46
MaxInLoadEdge       16
MaxOutLoadEdge      9
MaxInStoreEdge      2
MaxOutStoreEdge     16
AvgIn/OutStoreEdge  0
MaxInAddrEdge       1
MaxOutAddrEdge      59
#######################################################

*********Andersen Pointer Analysis Stats***************
################ (program : xml-parser-24.rectracker.bc)###############
-------------------------------------------------------
CollapseTime        0
TotalTime           0.049
SCCDetectTime       0
SCCMergeTime        0
LoadStoreTime       0
CopyGepTime         0
UpdateCGTime        0
AvgPtsSetSize       0.38566
AvgTopLvlPtsSize    0.995524
TotalPointers       2829
TotalObjects        245
AddrProcessed       280
CopyProcessed       677
GepProcessed        310
LoadProcessed       419
StoreProcessed      127
NumOfSFRs           0
NumOfFieldExpand    0
Pointers            2823
MemObjects          223
DummyFieldPtrs      6
FieldObjs           22
MaxPtsSetSize       1
SolveIterations     3
IndCallSites        0
IndEdgeSolved       0
NumOfSCCDetect      3
TotalCycleNum       11
TotalPWCCycleNum    0
NodesInCycles       98
MaxNodesInSCC       61
NullPointer         0
PointsToConstPtr    1
PointsToBlkPtr      0
#######################################################

****Persistent Points-To Cache Statistics: Andersen's analysis bitvector****
################ (program : xml-parser-24.rectracker.bc)###############
UniquePointsToSets       246
TotalUnions              1369
PropertyUnions           1369
UniqueUnions             0
LookupUnions             0
PreemptiveUnions         0
TotalComplements         9313
PropertyComplements      9309
UniqueComplements        1
LookupComplements        2
PreemptiveComplements    1
TotalIntersections       636
PropertyIntersections    634
UniqueIntersections      0
LookupIntersections      0
PreemptiveIntersections  2
#######################################################

*********Memory SSA Statistics***************
################ (program : xml-parser-24.rectracker.bc)###############
-------------------------------------------------------
TotalMSSATime       0.027
GenRegionTime       0.017
GenMUCHITime        0.005
InsertPHITime       0
SSARenameTime       0.004
AverageRegSize      1.01667
MaxRegSize          3
MemRegions          120
FunEntryChi         144
FunRetMu            144
CSChiNode           2
CSMuNode            64
LoadMuNode          435
StoreChiNode        143
MSSAPhi             78
FunHasEntryChi      24
FunHasRetMu         29
CSHasChi            2
CSHasMu             38
LoadHasMu           435
StoreHasChi         143
BBHasMSSAPhi        31
#######################################################

****SVFG Statistics****

************************
################ (program : xml-parser-24.rectracker.bc)###############
-------------------------------------------------------
TotalTime           0.005
ConnDirEdgeTime     0
ConnIndEdgeTime     0.004
TLNodeTime          0
ATNodeTime          0.001
OptTime             0
AvgWeight           1.01575
MSSAPhi             78
TotalNode           2040
FormalIn            144
FormalOut           144
FormalParam         54
FormalRet           5
ActualIn            64
ActualOut           2
ActualParam         324
ActualRet           18
Addr                280
Copy                15
Gep                 325
Store               143
Load                435
PHI                 8
TotalEdge           2625
DirectEdge          1609
IndirectEdge        1016
IndirectEdgeLabels  1032
IndCallEdge         65
IndRetEdge          3
DirectCallEdge      190
DirectRetEdge       18
AvgInDegree         1
AvgOutDegree        1
MaxInDegree         13
MaxOutDegree        20
AvgIndInDeg         1
AvgIndOutDeg        2
MaxIndInDeg         13
MaxIndOutDeg        14
#######################################################

*********Memory SSA Statistics***************
################ (program : xml-parser-24.rectracker.bc)###############
-------------------------------------------------------
TotalMSSATime       0.052
GenRegionTime       0.035
GenMUCHITime        0.014
InsertPHITime       0.004
SSARenameTime       0.008
AverageRegSize      1.03723
MaxRegSize          4
MemRegions          188
FunEntryChi         311
FunRetMu            311
CSChiNode           163
CSMuNode            309
LoadMuNode          679
StoreChiNode        332
MSSAPhi             256
FunHasEntryChi      29
FunHasRetMu         29
CSHasChi            83
CSHasMu             83
LoadHasMu           685
StoreHasChi         332
BBHasMSSAPhi        50
#######################################################

****SVFG Statistics****

************************
################ (program : xml-parser-24.rectracker.bc)###############
-------------------------------------------------------
TotalTime           0.017
ConnDirEdgeTime     0
ConnIndEdgeTime     0.013
TLNodeTime          0
ATNodeTime          0.004
OptTime             0
AvgWeight           1.01102
MSSAPhi             256
TotalNode           4629
FormalIn            311
FormalOut           311
FormalParam         119
FormalRet           24
ActualIn            309
ActualOut           163
ActualParam         596
ActualRet           111
Addr                343
Copy                204
Gep                 325
Store               333
Load                685
PHI                 38
TotalEdge           6025
DirectEdge          3302
IndirectEdge        2723
IndirectEdgeLabels  2753
IndCallEdge         321
IndRetEdge          163
DirectCallEdge      413
DirectRetEdge       71
AvgInDegree         1
AvgOutDegree        1
MaxInDegree         13
MaxOutDegree        173
AvgIndInDeg         1
AvgIndOutDeg        1
MaxIndInDeg         13
MaxIndOutDeg        14
#######################################################
args PTA type: --pta-dda
Test - update svfg
 Analyzing call to __assert_fail inside print_chartokens_instrumented
 Analyzing call to printf inside print_chartokens_instrumented
 Analyzing call to printf inside print_chartokens_instrumented
 Analyzing call to printf inside print_chartokens_instrumented
 Analyzing call to print_tokenvalue_instrumented inside print_chartokens_instrumented
Function print_tokenvalue_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument buffer of print_chartokens_instrumented
Parameter 0 is aliased with argument buffer
Parameter 1 is a pointer
Checking aliasing of  with argument buffer of print_chartokens_instrumented
Checking aliasing of  with argument tokens of print_chartokens_instrumented
Parameter 1 is aliased with argument tokens
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to memchr inside count_lines_instrumented
 Analyzing call to puts inside print_prettyxml_instrumented
 Analyzing call to print_tokenvalue_instrumented inside print_prettyxml_instrumented
Function print_tokenvalue_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument buffer of print_prettyxml_instrumented
Parameter 0 is aliased with argument buffer
Parameter 1 is a pointer
Checking aliasing of  with argument buffer of print_prettyxml_instrumented
Checking aliasing of  with argument tokens of print_prettyxml_instrumented
Parameter 1 is aliased with argument tokens
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to print_indent inside print_prettyxml_instrumented
 Analyzing call to puts inside print_prettyxml_instrumented
 Analyzing call to print_chartokens_instrumented inside print_prettyxml_instrumented
Function print_chartokens_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument buffer of print_prettyxml_instrumented
Parameter 0 is aliased with argument buffer
Parameter 1 is a pointer
Checking aliasing of arrayidx9_instrumented with argument buffer of print_prettyxml_instrumented
Checking aliasing of arrayidx9_instrumented with argument tokens of print_prettyxml_instrumented
Parameter 1 is aliased with argument tokens
Parameter 2 is not a pointer
Parameter 3 is not a pointer
Parameter 4 is not a pointer
 Analyzing call to printf inside print_prettyxml_instrumented
 Analyzing call to print_tokenvalue_instrumented inside print_prettyxml_instrumented
Function print_tokenvalue_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument buffer of print_prettyxml_instrumented
Parameter 0 is aliased with argument buffer
Parameter 1 is a pointer
Checking aliasing of arrayidx_instrumented with argument buffer of print_prettyxml_instrumented
Checking aliasing of arrayidx_instrumented with argument tokens of print_prettyxml_instrumented
Parameter 1 is aliased with argument tokens
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to print_tokenvalue_instrumented inside print_prettyxml_instrumented
Function print_tokenvalue_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument buffer of print_prettyxml_instrumented
Parameter 0 is aliased with argument buffer
Parameter 1 is a pointer
Checking aliasing of  with argument buffer of print_prettyxml_instrumented
Checking aliasing of  with argument tokens of print_prettyxml_instrumented
Parameter 1 is aliased with argument tokens
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to printf inside print_prettyxml_instrumented
 Analyzing call to NameChar inside str_find_notalnum_instrumented
 Analyzing call to printf inside parse_instruction_instrumented
 Analyzing call to state_setpos_instrumented inside parse_instruction_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1085 LoadStmt: [Var1189 <-- Var1112]	
   %32 = load i8*, i8** %space_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1189
   %32 = load i8*, i8** %space_instrumented, align 4 
On edge 1112-->1189
[SelectDef] On node: ValVar ID: 1112
   %space_instrumented = alloca i8*, align 4 
On edge 1113-->1112
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1112
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1113 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1169-->1112
[SelectDef] On node: ValVar ID: 1169
   %call7_instrumented = call i8* @str_find_notalnum_instrumented(i8* %22, i8* %23, i32 0, i32 0) 
On edge 2327-->1169
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
Node 754 already visited
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
Defs of param 2 are 11
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call7_instrumented = call i8* @str_find_notalnum_instrumented(i8* %22, i8* %23, i32 0, i32 0)
Node:   store i8* %call7_instrumented, i8** %space_instrumented, align 4
Node:   %32 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call7_instrumented = call i8* @str_find_notalnum_instrumented(i8* %22, i8* %23, i32 0, i32 0)
Node:   store i8* %call7_instrumented, i8** %space_instrumented, align 4
Node:   %32 = load i8*, i8** %space_instrumented, align 4
Node:   %32 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 0 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to parse_instruction_instrumented inside sxml_parse_instrumented
Function parse_instruction_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 187 AddrStmt: [Var750 <-- Var751]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 1 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 189 AddrStmt: [Var754 <-- Var755]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 11 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to parse_instruction_instrumented inside sxml_parse_instrumented
Function parse_instruction_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 187 AddrStmt: [Var750 <-- Var751]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 21 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 189 AddrStmt: [Var754 <-- Var755]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 31 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to str_findchr_instrumented inside sxml_parse_instrumented
Function str_findchr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of sxml_parse_instrumented
Checking aliasing of  with argument buffer of sxml_parse_instrumented
Parameter 0 is aliased with argument buffer
Parameter 1 is a pointer
Checking aliasing of  with argument state of sxml_parse_instrumented
Checking aliasing of  with argument buffer of sxml_parse_instrumented
Parameter 1 is aliased with argument buffer
Parameter 2 is not a pointer
Parameter 3 is not a pointer
Parameter 4 is not a pointer
 Analyzing call to llvm.memcpy.p0i8.p0i8.i32 inside sxml_parse_instrumented
 Analyzing call to __assert_fail inside parse_start_instrumented
 Analyzing call to str_findchr_instrumented inside parse_end_instrumented
Function str_findchr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1251 LoadStmt: [Var1796 <-- Var1737]	
   %25 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %24 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2
Node:   store i8* %add.ptr8_instrumented, i8** %start_instrumented, align 4
Node:   %25 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %24 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2
Node:   store i8* %add.ptr8_instrumented, i8** %start_instrumented, align 4
Node:   %25 = load i8*, i8** %start_instrumented, align 4
Node:   %25 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1256 LoadStmt: [Var1797 <-- Var1739]	
   %26 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1797
   %26 = load i8*, i8** %end_instrumented, align 4 
On edge 1739-->1797
[SelectDef] On node: ValVar ID: 1739
   %end_instrumented = alloca i8*, align 4 
On edge 1740-->1739
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1739
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1740 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1757-->1739
[SelectDef] On node: ValVar ID: 1757
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1753-->1757
[SelectDef] On node: ValVar ID: 1753
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1752-->1753
[SelectDef] On node: ValVar ID: 1752
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1751-->1752
[SelectDef] On node: ValVar ID: 1751
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1751
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %26 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %26 = load i8*, i8** %end_instrumented, align 4
Node:   %26 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
Parameter 4 is not a pointer
 Analyzing call to parse_doctype_instrumented inside sxml_parse_instrumented
Function parse_doctype_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 187 AddrStmt: [Var750 <-- Var751]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 41 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 189 AddrStmt: [Var754 <-- Var755]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 51 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to hook_exit inside main
 Analyzing call to __assert_fail inside print_chartokens_instrumented
 Analyzing call to __assert_fail inside main
 Analyzing call to llvm.memcpy.p0i8.p0i8.i32 inside sxml_parse_instrumented
 Analyzing call to parse_start_instrumented inside sxml_parse_instrumented
Function parse_start_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 187 AddrStmt: [Var750 <-- Var751]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 61 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 189 AddrStmt: [Var754 <-- Var755]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 71 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to parse_start_instrumented inside sxml_parse_instrumented
Function parse_start_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 187 AddrStmt: [Var750 <-- Var751]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 81 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 189 AddrStmt: [Var754 <-- Var755]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 91 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to count_lines_instrumented inside main
Function count_lines_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of arraydecay24 with argument argc of main
Checking aliasing of arraydecay24 with argument argv of main
Def of param: GepVFGNode ID: 654 GepStmt: [Var473 <-- Var359]	
   %arraydecay24 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 473
   %arraydecay24 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
On edge 359-->473
[SelectDef] On node: ValVar ID: 359
   %buffer = alloca [8128 x i8], align 1 
On edge 360-->359
[SelectDefs] Adding node: FIObjVar ID: 360 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param 0 are 1
FIObjVar ID: 360 (base object)
   %buffer = alloca [8128 x i8], align 1 
ISSUE: Definition of FIObjVar ID: 360 (base object)
   %buffer = alloca [8128 x i8], align 1  is not present in trace
[DEFBUILDER] Building ADef
Defs of param arraydecay24 number 0 is 101 and has lenght 8128
Parameter 1 is not a pointer
Parameter 2 is not a pointer
 Analyzing call to state_pushtoken_instrumented inside parse_comment_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Checking aliasing of  with argument state_id of parse_comment_instrumented
Checking aliasing of  with argument args_id of parse_comment_instrumented
Def of param: LoadVFGNode ID: 1279 LoadStmt: [Var1913 <-- Var1855]	
   %26 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1913
   %26 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1913
[SelectDef] On node: ValVar ID: 1855
   %start_instrumented = alloca i8*, align 4 
On edge 1856-->1855
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1855
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1867-->1855
On edge 1898-->1855
[SelectDef] On node: ValVar ID: 1898
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4 
On edge 1897-->1898
[SelectDef] On node: ValVar ID: 1897
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1897
Node 1855 already visited
[SelectDef] On node: ValVar ID: 1867
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1863-->1867
[SelectDef] On node: ValVar ID: 1863
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1862-->1863
[SelectDef] On node: ValVar ID: 1862
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1861-->1862
[SelectDef] On node: ValVar ID: 1861
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1861
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 3 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %26 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %26 = load i8*, i8** %start_instrumented, align 4
Node:   %26 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 0 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Checking aliasing of  with argument state_id of parse_comment_instrumented
Checking aliasing of  with argument args_id of parse_comment_instrumented
Def of param: LoadVFGNode ID: 1273 LoadStmt: [Var1914 <-- Var1853]	
   %27 = load i8*, i8** %dash_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1914
   %27 = load i8*, i8** %dash_instrumented, align 4 
On edge 1853-->1914
[SelectDef] On node: ValVar ID: 1853
   %dash_instrumented = alloca i8*, align 4 
On edge 1854-->1853
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1853
	-  %dash_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1854 (base object)
   %dash_instrumented = alloca i8*, align 4 
On edge 1903-->1853
[SelectDef] On node: ValVar ID: 1903
   %call7_instrumented = call i8* @str_findstr_instrumented(i8* %19, i8* %20, i8* %21, i32 0, i32 0, i32 0) 
On edge 2091-->1903
[SelectDef] On node: RetPN ID: 2091 unique return node for function str_findstr_instrumented
On edge 2194-->2091
[SelectDef] On node: ValVar ID: 2194
   %31 = load i8*, i8** %retval_instrumented, align 4 
On edge 2103-->2194
[SelectDef] On node: ValVar ID: 2103
   %retval_instrumented = alloca i8*, align 4 
On edge 2104-->2103
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2103
	-  %retval_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2104 (base object)
   %retval_instrumented = alloca i8*, align 4 
On edge 2183-->2103
On edge 2191-->2103
[SelectDef] On node: ValVar ID: 2191
   %30 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2107-->2191
[SelectDef] On node: ValVar ID: 2107
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2108-->2107
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2107
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2108 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2093-->2107
[SelectDef] On node: ValVar ID: 2093
 i8* %end { 1st arg str_findstr_instrumented  }
On edge 1307-->2093
On edge 1901-->2093
On edge 1996-->2093
[SelectDef] On node: ValVar ID: 1996
   %21 = load i8*, i8** %end_instrumented, align 4 
On edge 1951-->1996
[SelectDef] On node: ValVar ID: 1951
   %end_instrumented = alloca i8*, align 4 
On edge 1952-->1951
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1951
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1952 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1969-->1951
[SelectDef] On node: ValVar ID: 1969
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1965-->1969
[SelectDef] On node: ValVar ID: 1965
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1964-->1965
[SelectDef] On node: ValVar ID: 1964
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1963-->1964
[SelectDef] On node: ValVar ID: 1963
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1963
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1901
   %20 = load i8*, i8** %end_instrumented, align 4 
On edge 1857-->1901
[SelectDef] On node: ValVar ID: 1857
   %end_instrumented = alloca i8*, align 4 
On edge 1858-->1857
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1857
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1858 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1875-->1857
[SelectDef] On node: ValVar ID: 1875
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1871-->1875
[SelectDef] On node: ValVar ID: 1871
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1870-->1871
[SelectDef] On node: ValVar ID: 1870
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1869-->1870
[SelectDef] On node: ValVar ID: 1869
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1869
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
Node 754 already visited
[SelectDef] On node: ValVar ID: 1307
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1264-->1307
[SelectDef] On node: ValVar ID: 1264
   %end_instrumented = alloca i8*, align 4 
On edge 1265-->1264
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1264
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1265 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1282-->1264
[SelectDef] On node: ValVar ID: 1282
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1278-->1282
[SelectDef] On node: ValVar ID: 1278
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1277-->1278
[SelectDef] On node: ValVar ID: 1277
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1276-->1277
[SelectDef] On node: ValVar ID: 1276
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1276
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
Node 754 already visited
[SelectDef] On node: ValVar ID: 2183
   %28 = load i8*, i8** %it_instrumented, align 4 
On edge 2115-->2183
[SelectDef] On node: ValVar ID: 2115
   %it_instrumented = alloca i8*, align 4 
On edge 2116-->2115
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2115
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2116 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2170-->2115
[SelectDef] On node: ValVar ID: 2170
   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7 
On edge 2160-->2170
[SelectDef] On node: ValVar ID: 2160
   %19 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2105-->2160
[SelectDef] On node: ValVar ID: 2105
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2106-->2105
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2105
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2106 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2092-->2105
On edge 2188-->2105
[SelectDef] On node: ValVar ID: 2188
   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1 
On edge 2187-->2188
[SelectDef] On node: ValVar ID: 2187
   %29 = load i8*, i8** %it_instrumented, align 4 
On edge 2115-->2187
Node 2115 already visited
[SelectDef] On node: ValVar ID: 2092
 i8* %start { 0th arg str_findstr_instrumented  }
On edge 1306-->2092
On edge 1900-->2092
On edge 1995-->2092
[SelectDef] On node: ValVar ID: 1995
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1995
[SelectDef] On node: ValVar ID: 1949
   %start_instrumented = alloca i8*, align 4 
On edge 1950-->1949
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1949
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1961-->1949
On edge 1993-->1949
[SelectDef] On node: ValVar ID: 1993
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %19, i32 9 
On edge 1992-->1993
[SelectDef] On node: ValVar ID: 1992
   %19 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1992
Node 1949 already visited
[SelectDef] On node: ValVar ID: 1961
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1957-->1961
[SelectDef] On node: ValVar ID: 1957
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1956-->1957
[SelectDef] On node: ValVar ID: 1956
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1955-->1956
[SelectDef] On node: ValVar ID: 1955
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1955
Node 1945 already visited
[SelectDef] On node: ValVar ID: 1900
   %19 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1900
[SelectDef] On node: ValVar ID: 1855
   %start_instrumented = alloca i8*, align 4 
On edge 1856-->1855
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1855
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1867-->1855
On edge 1898-->1855
[SelectDef] On node: ValVar ID: 1898
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4 
On edge 1897-->1898
[SelectDef] On node: ValVar ID: 1897
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1897
Node 1855 already visited
[SelectDef] On node: ValVar ID: 1867
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1863-->1867
[SelectDef] On node: ValVar ID: 1863
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1862-->1863
[SelectDef] On node: ValVar ID: 1862
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1861-->1862
[SelectDef] On node: ValVar ID: 1861
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1861
Node 1851 already visited
[SelectDef] On node: ValVar ID: 1306
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1306
[SelectDef] On node: ValVar ID: 1262
   %start_instrumented = alloca i8*, align 4 
On edge 1263-->1262
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1262
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1274-->1262
On edge 1304-->1262
[SelectDef] On node: ValVar ID: 1304
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1303-->1304
[SelectDef] On node: ValVar ID: 1303
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1303
Node 1262 already visited
[SelectDef] On node: ValVar ID: 1274
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1270-->1274
[SelectDef] On node: ValVar ID: 1270
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1269-->1270
[SelectDef] On node: ValVar ID: 1269
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1268-->1269
[SelectDef] On node: ValVar ID: 1268
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1268
Node 1258 already visited
Defs of param 4 are 15
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call7_instrumented = call i8* @str_findstr_instrumented(i8* %19, i8* %20, i8* %21, i32 0, i32 0, i32 0)
Node:   store i8* %call7_instrumented, i8** %dash_instrumented, align 4
Node:   %27 = load i8*, i8** %dash_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call7_instrumented = call i8* @str_findstr_instrumented(i8* %19, i8* %20, i8* %21, i32 0, i32 0, i32 0)
Node:   store i8* %call7_instrumented, i8** %dash_instrumented, align 4
Node:   %27 = load i8*, i8** %dash_instrumented, align 4
Node:   %27 = load i8*, i8** %dash_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 0 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to parse_characters_instrumented inside sxml_parse_instrumented
Function parse_characters_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 187 AddrStmt: [Var750 <-- Var751]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 102 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 189 AddrStmt: [Var754 <-- Var755]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 112 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of sxml_parse_instrumented
Checking aliasing of  with argument buffer of sxml_parse_instrumented
Checking aliasing of  with argument bufferlen of sxml_parse_instrumented
Checking aliasing of  with argument tokens of sxml_parse_instrumented
Checking aliasing of  with argument num_tokens of sxml_parse_instrumented
Checking aliasing of  with argument state_id of sxml_parse_instrumented
Checking aliasing of  with argument buffer_id of sxml_parse_instrumented
Checking aliasing of  with argument tokens_id of sxml_parse_instrumented
Def of param: LoadVFGNode ID: 1028 LoadStmt: [Var905 <-- Var766]	
   %43 = load i8*, i8** %lt34_instrumented, align 4 
[SelectDef] On node: ValVar ID: 905
   %43 = load i8*, i8** %lt34_instrumented, align 4 
On edge 766-->905
[SelectDef] On node: ValVar ID: 766
   %lt34_instrumented = alloca i8*, align 4 
On edge 767-->766
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 766
	-  %lt34_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 767 (base object)
   %lt34_instrumented = alloca i8*, align 4 
On edge 891-->766
[SelectDef] On node: ValVar ID: 891
   %call35_instrumented = call i8* @str_findchr_instrumented(i8* %38, i8* %39, i32 60, i32 0, i32 0), !zref_start_id !9, !zref_end_id !9 
On edge 1508-->891
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0) 
On edge 1508-->2535
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0) 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0) 
On edge 985-->2563
Node 985 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
Defs of param 2 are 29
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call35_instrumented = call i8* @str_findchr_instrumented(i8* %38, i8* %39, i32 60, i32 0, i32 0), !zref_start_id !9, !zref_end_id !9
Node:   store i8* %call35_instrumented, i8** %lt34_instrumented, align 4
Node:   %43 = load i8*, i8** %lt34_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call35_instrumented = call i8* @str_findchr_instrumented(i8* %38, i8* %39, i32 60, i32 0, i32 0), !zref_start_id !9, !zref_end_id !9
Node:   store i8* %call35_instrumented, i8** %lt34_instrumented, align 4
Node:   %43 = load i8*, i8** %lt34_instrumented, align 4
Node:   %43 = load i8*, i8** %lt34_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 0 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to state_setpos_instrumented inside sxml_parse_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 187 AddrStmt: [Var750 <-- Var751]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 122 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 189 AddrStmt: [Var754 <-- Var755]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 132 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of sxml_parse_instrumented
Checking aliasing of  with argument buffer of sxml_parse_instrumented
Parameter 2 is aliased with argument buffer
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to str_startswith_instrumented inside parse_instruction_instrumented
Function str_startswith_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1087 LoadStmt: [Var1151 <-- Var1114]	
   %17 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1151
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1151
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1092 LoadStmt: [Var1152 <-- Var1116]	
   %18 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1152
   %18 = load i8*, i8** %end_instrumented, align 4 
On edge 1116-->1152
[SelectDef] On node: ValVar ID: 1116
   %end_instrumented = alloca i8*, align 4 
On edge 1117-->1116
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1116
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1117 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1134-->1116
[SelectDef] On node: ValVar ID: 1134
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1130-->1134
[SelectDef] On node: ValVar ID: 1130
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1129-->1130
[SelectDef] On node: ValVar ID: 1129
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1128-->1129
[SelectDef] On node: ValVar ID: 1128
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1128
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %18 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %18 = load i8*, i8** %end_instrumented, align 4
Node:   %18 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: GepVFGNode ID: 609 GepStmt: [Var1153 <-- Var72]	
   %19 = getelementptr inbounds [3 x i8], [3 x i8]* @parse_instruction.STARTTAG, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1153
   %19 = getelementptr inbounds [3 x i8], [3 x i8]* @parse_instruction.STARTTAG, i32 0, i32 0 
On edge 72-->1153
[SelectDef] On node: ValVar ID: 72
 @parse_instruction.STARTTAG = internal constant [3 x i8] c"<?\00", align 1 { Glob  }
On edge 3-->72
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to strlen inside str_findstr_instrumented
 Analyzing call to llvm.memcpy.p0i8.p0i8.i32 inside sxml_parse_instrumented
 Analyzing call to sxml_parse_instrumented inside main
Function sxml_parse_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of parser with argument argc of main
Checking aliasing of parser with argument argv of main
Def of param: AddrVFGNode ID: 153 AddrStmt: [Var371 <-- Var372]	
   %parser = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 371
   %parser = alloca %struct.sxml_t, align 4 
On edge 372-->371
[SelectDefs] Adding node: FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4  is not present in trace
  %parser = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %parser = alloca %struct.sxml_t, align 4
On Node:   %parser = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %parser = alloca %struct.sxml_t, align 4
On Node:   %parser = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param parser number 0 is 142 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of arraydecay12 with argument argc of main
Checking aliasing of arraydecay12 with argument argv of main
Def of param: GepVFGNode ID: 651 GepStmt: [Var441 <-- Var359]	
   %arraydecay12 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 441
   %arraydecay12 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
On edge 359-->441
[SelectDef] On node: ValVar ID: 359
   %buffer = alloca [8128 x i8], align 1 
On edge 360-->359
[SelectDefs] Adding node: FIObjVar ID: 360 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param 1 are 1
FIObjVar ID: 360 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param arraydecay12 number 1 is 101 and has lenght 8128
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of arraydecay13 with argument argc of main
Checking aliasing of arraydecay13 with argument argv of main
Def of param: GepVFGNode ID: 662 GepStmt: [Var443 <-- Var363]	
   %arraydecay13 = getelementptr inbounds [128 x %struct.sxmltok_t], [128 x %struct.sxmltok_t]* %tokens, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 443
   %arraydecay13 = getelementptr inbounds [128 x %struct.sxmltok_t], [128 x %struct.sxmltok_t]* %tokens, i32 0, i32 0 
On edge 363-->443
[SelectDef] On node: ValVar ID: 363
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
On edge 364-->363
[SelectDefs] Adding node: FIObjVar ID: 364 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
Defs of param 3 are 1
FIObjVar ID: 364 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
ISSUE: Definition of FIObjVar ID: 364 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4  is not present in trace
[DEFBUILDER] Building ADef
Defs of param arraydecay13 number 3 is 144 and has lenght 1536
Parameter 4 is not a pointer
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
 Analyzing call to printf inside print_indent
 Analyzing call to NameStartChar inside NameChar
 Analyzing call to __assert_fail inside main
 Analyzing call to NameStartChar inside parse_start_instrumented
 Analyzing call to str_find_notalnum_instrumented inside parse_end_instrumented
Function str_find_notalnum_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1252 LoadStmt: [Var1806 <-- Var1737]	
   %29 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %24 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2
Node:   store i8* %add.ptr8_instrumented, i8** %start_instrumented, align 4
Node:   %29 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %24 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2
Node:   store i8* %add.ptr8_instrumented, i8** %start_instrumented, align 4
Node:   %29 = load i8*, i8** %start_instrumented, align 4
Node:   %29 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1241 LoadStmt: [Var1807 <-- Var1733]	
   %30 = load i8*, i8** %gt_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1807
   %30 = load i8*, i8** %gt_instrumented, align 4 
On edge 1733-->1807
[SelectDef] On node: ValVar ID: 1733
   %gt_instrumented = alloca i8*, align 4 
On edge 1734-->1733
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1733
	-  %gt_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1734 (base object)
   %gt_instrumented = alloca i8*, align 4 
On edge 1798-->1733
[SelectDef] On node: ValVar ID: 1798
   %call9_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 62, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1798
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0) 
On edge 1508-->2535
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0) 
On edge 985-->2563
Node 985 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
Defs of param 1 are 29
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call9_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 62, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call9_instrumented, i8** %gt_instrumented, align 4
Node:   %30 = load i8*, i8** %gt_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call9_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 62, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call9_instrumented, i8** %gt_instrumented, align 4
Node:   %30 = load i8*, i8** %gt_instrumented, align 4
Node:   %30 = load i8*, i8** %gt_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to state_pushtoken_instrumented inside parse_doctype_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Checking aliasing of  with argument state_id of parse_doctype_instrumented
Checking aliasing of  with argument args_id of parse_doctype_instrumented
Def of param: LoadVFGNode ID: 1119 LoadStmt: [Var1321 <-- Var1262]	
   %25 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1321
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1321
[SelectDef] On node: ValVar ID: 1262
   %start_instrumented = alloca i8*, align 4 
On edge 1263-->1262
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1262
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1274-->1262
On edge 1304-->1262
[SelectDef] On node: ValVar ID: 1304
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1303-->1304
[SelectDef] On node: ValVar ID: 1303
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1303
Node 1262 already visited
[SelectDef] On node: ValVar ID: 1274
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1270-->1274
[SelectDef] On node: ValVar ID: 1270
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1269-->1270
[SelectDef] On node: ValVar ID: 1269
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1268-->1269
[SelectDef] On node: ValVar ID: 1268
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1268
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 3 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %25 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %25 = load i8*, i8** %start_instrumented, align 4
Node:   %25 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 0 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Checking aliasing of  with argument state_id of parse_doctype_instrumented
Checking aliasing of  with argument args_id of parse_doctype_instrumented
Def of param: LoadVFGNode ID: 1113 LoadStmt: [Var1322 <-- Var1260]	
   %26 = load i8*, i8** %bracket_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1322
   %26 = load i8*, i8** %bracket_instrumented, align 4 
On edge 1260-->1322
[SelectDef] On node: ValVar ID: 1260
   %bracket_instrumented = alloca i8*, align 4 
On edge 1261-->1260
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1260
	-  %bracket_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1261 (base object)
   %bracket_instrumented = alloca i8*, align 4 
On edge 1309-->1260
[SelectDef] On node: ValVar ID: 1309
   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0) 
On edge 2091-->1309
[SelectDef] On node: RetPN ID: 2091 unique return node for function str_findstr_instrumented
On edge 2194-->2091
[SelectDef] On node: ValVar ID: 2194
   %31 = load i8*, i8** %retval_instrumented, align 4 
On edge 2103-->2194
[SelectDef] On node: ValVar ID: 2103
   %retval_instrumented = alloca i8*, align 4 
On edge 2104-->2103
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2103
	-  %retval_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2104 (base object)
   %retval_instrumented = alloca i8*, align 4 
On edge 2183-->2103
On edge 2191-->2103
[SelectDef] On node: ValVar ID: 2191
   %30 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2107-->2191
[SelectDef] On node: ValVar ID: 2107
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2108-->2107
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2107
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2108 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2093-->2107
[SelectDef] On node: ValVar ID: 2093
 i8* %end { 1st arg str_findstr_instrumented  }
On edge 1307-->2093
On edge 1901-->2093
On edge 1996-->2093
[SelectDef] On node: ValVar ID: 1996
   %21 = load i8*, i8** %end_instrumented, align 4 
On edge 1951-->1996
[SelectDef] On node: ValVar ID: 1951
   %end_instrumented = alloca i8*, align 4 
On edge 1952-->1951
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1951
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1952 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1969-->1951
[SelectDef] On node: ValVar ID: 1969
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1965-->1969
[SelectDef] On node: ValVar ID: 1965
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1964-->1965
[SelectDef] On node: ValVar ID: 1964
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1963-->1964
[SelectDef] On node: ValVar ID: 1963
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1963
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1901
   %20 = load i8*, i8** %end_instrumented, align 4 
On edge 1857-->1901
[SelectDef] On node: ValVar ID: 1857
   %end_instrumented = alloca i8*, align 4 
On edge 1858-->1857
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1857
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1858 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1875-->1857
[SelectDef] On node: ValVar ID: 1875
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1871-->1875
[SelectDef] On node: ValVar ID: 1871
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1870-->1871
[SelectDef] On node: ValVar ID: 1870
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1869-->1870
[SelectDef] On node: ValVar ID: 1869
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1869
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
Node 754 already visited
[SelectDef] On node: ValVar ID: 1307
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1264-->1307
[SelectDef] On node: ValVar ID: 1264
   %end_instrumented = alloca i8*, align 4 
On edge 1265-->1264
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1264
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1265 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1282-->1264
[SelectDef] On node: ValVar ID: 1282
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1278-->1282
[SelectDef] On node: ValVar ID: 1278
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1277-->1278
[SelectDef] On node: ValVar ID: 1277
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1276-->1277
[SelectDef] On node: ValVar ID: 1276
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1276
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
Node 754 already visited
[SelectDef] On node: ValVar ID: 2183
   %28 = load i8*, i8** %it_instrumented, align 4 
On edge 2115-->2183
[SelectDef] On node: ValVar ID: 2115
   %it_instrumented = alloca i8*, align 4 
On edge 2116-->2115
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2115
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2116 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2170-->2115
[SelectDef] On node: ValVar ID: 2170
   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7 
On edge 2160-->2170
[SelectDef] On node: ValVar ID: 2160
   %19 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2105-->2160
[SelectDef] On node: ValVar ID: 2105
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2106-->2105
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2105
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2106 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2092-->2105
On edge 2188-->2105
[SelectDef] On node: ValVar ID: 2188
   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1 
On edge 2187-->2188
[SelectDef] On node: ValVar ID: 2187
   %29 = load i8*, i8** %it_instrumented, align 4 
On edge 2115-->2187
Node 2115 already visited
[SelectDef] On node: ValVar ID: 2092
 i8* %start { 0th arg str_findstr_instrumented  }
On edge 1306-->2092
On edge 1900-->2092
On edge 1995-->2092
[SelectDef] On node: ValVar ID: 1995
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1995
[SelectDef] On node: ValVar ID: 1949
   %start_instrumented = alloca i8*, align 4 
On edge 1950-->1949
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1949
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1961-->1949
On edge 1993-->1949
[SelectDef] On node: ValVar ID: 1993
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %19, i32 9 
On edge 1992-->1993
[SelectDef] On node: ValVar ID: 1992
   %19 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1992
Node 1949 already visited
[SelectDef] On node: ValVar ID: 1961
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1957-->1961
[SelectDef] On node: ValVar ID: 1957
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1956-->1957
[SelectDef] On node: ValVar ID: 1956
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1955-->1956
[SelectDef] On node: ValVar ID: 1955
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1955
Node 1945 already visited
[SelectDef] On node: ValVar ID: 1900
   %19 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1900
[SelectDef] On node: ValVar ID: 1855
   %start_instrumented = alloca i8*, align 4 
On edge 1856-->1855
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1855
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1867-->1855
On edge 1898-->1855
[SelectDef] On node: ValVar ID: 1898
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4 
On edge 1897-->1898
[SelectDef] On node: ValVar ID: 1897
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1897
Node 1855 already visited
[SelectDef] On node: ValVar ID: 1867
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1863-->1867
[SelectDef] On node: ValVar ID: 1863
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1862-->1863
[SelectDef] On node: ValVar ID: 1862
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1861-->1862
[SelectDef] On node: ValVar ID: 1861
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1861
Node 1851 already visited
[SelectDef] On node: ValVar ID: 1306
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1306
[SelectDef] On node: ValVar ID: 1262
   %start_instrumented = alloca i8*, align 4 
On edge 1263-->1262
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1262
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1274-->1262
On edge 1304-->1262
[SelectDef] On node: ValVar ID: 1304
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1303-->1304
[SelectDef] On node: ValVar ID: 1303
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1303
Node 1262 already visited
[SelectDef] On node: ValVar ID: 1274
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1270-->1274
[SelectDef] On node: ValVar ID: 1270
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1269-->1270
[SelectDef] On node: ValVar ID: 1269
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1268-->1269
[SelectDef] On node: ValVar ID: 1268
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1268
Node 1258 already visited
Defs of param 4 are 15
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0)
Node:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Node:   %26 = load i8*, i8** %bracket_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0)
Node:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Node:   %26 = load i8*, i8** %bracket_instrumented, align 4
Node:   %26 = load i8*, i8** %bracket_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 0 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to state_setpos_instrumented inside parse_attributes_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1413 LoadStmt: [Var2584 <-- Var2407]	
   %70 = load i8*, i8** %name_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2584
   %70 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2584
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0) 
On edge 985-->2563
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0) 
On edge 1508-->2535
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
Node 2407 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
Node 754 already visited
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
Node 985 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
Node 2401 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
Defs of param 2 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %70 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %70 = load i8*, i8** %name_instrumented, align 4
Node:   %70 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 0 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to memcmp inside str_findstr_instrumented
 Analyzing call to print_indent inside print_prettyxml_instrumented
 Analyzing call to WhiteSpace inside str_ltrim_instrumented
 Analyzing call to state_pushtoken_instrumented inside parse_instruction_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1090 LoadStmt: [Var1181 <-- Var1114]	
   %28 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1181
   %28 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1181
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 3 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %28 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %28 = load i8*, i8** %start_instrumented, align 4
Node:   %28 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 0 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1084 LoadStmt: [Var1182 <-- Var1112]	
   %29 = load i8*, i8** %space_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1182
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1112-->1182
[SelectDef] On node: ValVar ID: 1112
   %space_instrumented = alloca i8*, align 4 
On edge 1113-->1112
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1112
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1113 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1169-->1112
[SelectDef] On node: ValVar ID: 1169
   %call7_instrumented = call i8* @str_find_notalnum_instrumented(i8* %22, i8* %23, i32 0, i32 0) 
On edge 2327-->1169
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
Node 754 already visited
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
Defs of param 4 are 11
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call7_instrumented = call i8* @str_find_notalnum_instrumented(i8* %22, i8* %23, i32 0, i32 0)
Node:   store i8* %call7_instrumented, i8** %space_instrumented, align 4
Node:   %29 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call7_instrumented = call i8* @str_find_notalnum_instrumented(i8* %22, i8* %23, i32 0, i32 0)
Node:   store i8* %call7_instrumented, i8** %space_instrumented, align 4
Node:   %29 = load i8*, i8** %space_instrumented, align 4
Node:   %29 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 0 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to fgets inside main
 Analyzing call to __assert_fail inside str_findstr_instrumented
 Analyzing call to fprintf inside sxml_parse_instrumented
 Analyzing call to str_findchr_instrumented inside parse_attributes_instrumented
Function str_findchr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1410 LoadStmt: [Var2475 <-- Var2407]	
   %25 = load i8*, i8** %name_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0) 
On edge 985-->2563
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0) 
On edge 1508-->2535
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
Node 2475 already visited
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
Node 2415 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
Node 754 already visited
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
Node 985 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
Node 2401 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
Defs of param 0 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1401 LoadStmt: [Var2476 <-- Var2405]	
   %26 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2476
   %26 = load i8*, i8** %end_instrumented, align 4 
On edge 2405-->2476
[SelectDef] On node: ValVar ID: 2405
   %end_instrumented = alloca i8*, align 4 
On edge 2406-->2405
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2405
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2406 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 2439-->2405
[SelectDef] On node: ValVar ID: 2439
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 2435-->2439
[SelectDef] On node: ValVar ID: 2435
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 2434-->2435
[SelectDef] On node: ValVar ID: 2434
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 2433-->2434
[SelectDef] On node: ValVar ID: 2433
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2433
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
Defs of param 1 are 5
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %26 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %26 = load i8*, i8** %end_instrumented, align 4
Node:   %26 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
Parameter 4 is not a pointer
 Analyzing call to sprintf inside main
 Analyzing call to parse_cdata_instrumented inside sxml_parse_instrumented
Function parse_cdata_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 187 AddrStmt: [Var750 <-- Var751]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 145 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 189 AddrStmt: [Var754 <-- Var755]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 155 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to print_prettyxml_instrumented inside main
Function print_prettyxml_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of arraydecay20 with argument argc of main
Checking aliasing of arraydecay20 with argument argv of main
Def of param: GepVFGNode ID: 653 GepStmt: [Var466 <-- Var359]	
   %arraydecay20 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 466
   %arraydecay20 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
On edge 359-->466
[SelectDef] On node: ValVar ID: 359
   %buffer = alloca [8128 x i8], align 1 
On edge 360-->359
[SelectDefs] Adding node: FIObjVar ID: 360 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param 0 are 1
FIObjVar ID: 360 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param arraydecay20 number 0 is 101 and has lenght 8128
Parameter 1 is a pointer
Checking aliasing of arraydecay21 with argument argc of main
Checking aliasing of arraydecay21 with argument argv of main
Def of param: GepVFGNode ID: 664 GepStmt: [Var467 <-- Var363]	
   %arraydecay21 = getelementptr inbounds [128 x %struct.sxmltok_t], [128 x %struct.sxmltok_t]* %tokens, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 467
   %arraydecay21 = getelementptr inbounds [128 x %struct.sxmltok_t], [128 x %struct.sxmltok_t]* %tokens, i32 0, i32 0 
On edge 363-->467
[SelectDef] On node: ValVar ID: 363
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
On edge 364-->363
[SelectDefs] Adding node: FIObjVar ID: 364 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
Defs of param 1 are 1
FIObjVar ID: 364 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
Defs of param arraydecay21 number 1 is 144 and has lenght 1536
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of indent with argument argc of main
Checking aliasing of indent with argument argv of main
Def of param: AddrVFGNode ID: 150 AddrStmt: [Var365 <-- Var366]	
   %indent = alloca i32, align 4 
[SelectDef] On node: ValVar ID: 365
   %indent = alloca i32, align 4 
On edge 366-->365
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 365
	-  %indent = alloca i32, align 4
[SelectDefs] Adding node: FIObjVar ID: 366 (base object)
   %indent = alloca i32, align 4 
On edge 261-->365
[SelectDef] On node: ValVar ID: 261
 i32 0 { constant data }
On edge 3-->261
Discarding edge
Defs of param 3 are 1
Ignoring FIObjVar ID: 366 (base object)
   %indent = alloca i32, align 4  since it's a dominator
Parameter 4 is not a pointer
Parameter 5 is not a pointer
Parameter 6 is not a pointer
 Analyzing call to parse_attributes_instrumented inside parse_instruction_instrumented
Function parse_attributes_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to fclose inside main
 Analyzing call to __assert_fail inside str_rtrim_instrumented
 Analyzing call to parse_attrvalue_instrumented inside parse_attributes_instrumented
Function parse_attrvalue_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1427 LoadStmt: [Var2549 <-- Var2415]	
   %56 = load i8*, i8** %quot_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2549
   %56 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2549
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0) 
On edge 1508-->2535
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0) 
On edge 985-->2563
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
Node 985 already visited
Defs of param 2 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0)
Node:   store i8* %call31_instrumented, i8** %quot_instrumented, align 4
Node:   %56 = load i8*, i8** %quot_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0)
Node:   store i8* %call31_instrumented, i8** %quot_instrumented, align 4
Node:   %56 = load i8*, i8** %quot_instrumented, align 4
Node:   %56 = load i8*, i8** %quot_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 0 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to parse_comment_instrumented inside sxml_parse_instrumented
Function parse_comment_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 187 AddrStmt: [Var750 <-- Var751]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 165 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 189 AddrStmt: [Var754 <-- Var755]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 175 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to sprintf inside print_tokenvalue_instrumented
 Analyzing call to WhiteSpace inside str_rtrim_instrumented
 Analyzing call to gettimeofday inside main
 Analyzing call to fread inside main
 Analyzing call to str_ltrim_instrumented inside sxml_parse_instrumented
Function str_ltrim_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of sxml_parse_instrumented
Checking aliasing of  with argument buffer of sxml_parse_instrumented
Parameter 0 is aliased with argument buffer
Parameter 1 is a pointer
Checking aliasing of  with argument state of sxml_parse_instrumented
Checking aliasing of  with argument buffer of sxml_parse_instrumented
Parameter 1 is aliased with argument buffer
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to llvm.memcpy.p0i8.p0i8.i32 inside sxml_parse_instrumented
 Analyzing call to state_setpos_instrumented inside parse_cdata_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of add.ptr12_instrumented with argument state of parse_cdata_instrumented
Checking aliasing of add.ptr12_instrumented with argument args of parse_cdata_instrumented
Checking aliasing of add.ptr12_instrumented with argument state_id of parse_cdata_instrumented
Checking aliasing of add.ptr12_instrumented with argument args_id of parse_cdata_instrumented
Def of param: GepVFGNode ID: 813 GepStmt: [Var2014 <-- Var2013]	
   %add.ptr12_instrumented = getelementptr inbounds i8, i8* %31, i32 3 
[SelectDef] On node: ValVar ID: 2014
   %add.ptr12_instrumented = getelementptr inbounds i8, i8* %31, i32 3 
On edge 2013-->2014
[SelectDef] On node: ValVar ID: 2013
   %31 = load i8*, i8** %bracket_instrumented, align 4 
On edge 1947-->2013
[SelectDef] On node: ValVar ID: 1947
   %bracket_instrumented = alloca i8*, align 4 
On edge 1948-->1947
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1947
	-  %bracket_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1948 (base object)
   %bracket_instrumented = alloca i8*, align 4 
On edge 1998-->1947
[SelectDef] On node: ValVar ID: 1998
   %call7_instrumented = call i8* @str_findstr_instrumented(i8* %20, i8* %21, i8* %22, i32 0, i32 0, i32 0) 
On edge 2091-->1998
[SelectDef] On node: RetPN ID: 2091 unique return node for function str_findstr_instrumented
On edge 2194-->2091
[SelectDef] On node: ValVar ID: 2194
   %31 = load i8*, i8** %retval_instrumented, align 4 
On edge 2103-->2194
[SelectDef] On node: ValVar ID: 2103
   %retval_instrumented = alloca i8*, align 4 
On edge 2104-->2103
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2103
	-  %retval_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2104 (base object)
   %retval_instrumented = alloca i8*, align 4 
On edge 2183-->2103
On edge 2191-->2103
[SelectDef] On node: ValVar ID: 2191
   %30 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2107-->2191
[SelectDef] On node: ValVar ID: 2107
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2108-->2107
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2107
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2108 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2093-->2107
[SelectDef] On node: ValVar ID: 2093
 i8* %end { 1st arg str_findstr_instrumented  }
On edge 1307-->2093
On edge 1901-->2093
On edge 1996-->2093
[SelectDef] On node: ValVar ID: 1996
   %21 = load i8*, i8** %end_instrumented, align 4 
On edge 1951-->1996
[SelectDef] On node: ValVar ID: 1951
   %end_instrumented = alloca i8*, align 4 
On edge 1952-->1951
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1951
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1952 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1969-->1951
[SelectDef] On node: ValVar ID: 1969
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1965-->1969
[SelectDef] On node: ValVar ID: 1965
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1964-->1965
[SelectDef] On node: ValVar ID: 1964
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1963-->1964
[SelectDef] On node: ValVar ID: 1963
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1963
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1901
   %20 = load i8*, i8** %end_instrumented, align 4 
On edge 1857-->1901
[SelectDef] On node: ValVar ID: 1857
   %end_instrumented = alloca i8*, align 4 
On edge 1858-->1857
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1857
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1858 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1875-->1857
[SelectDef] On node: ValVar ID: 1875
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1871-->1875
[SelectDef] On node: ValVar ID: 1871
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1870-->1871
[SelectDef] On node: ValVar ID: 1870
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1869-->1870
[SelectDef] On node: ValVar ID: 1869
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1869
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
Node 754 already visited
[SelectDef] On node: ValVar ID: 1307
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1264-->1307
[SelectDef] On node: ValVar ID: 1264
   %end_instrumented = alloca i8*, align 4 
On edge 1265-->1264
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1264
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1265 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1282-->1264
[SelectDef] On node: ValVar ID: 1282
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1278-->1282
[SelectDef] On node: ValVar ID: 1278
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1277-->1278
[SelectDef] On node: ValVar ID: 1277
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1276-->1277
[SelectDef] On node: ValVar ID: 1276
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1276
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
Node 754 already visited
[SelectDef] On node: ValVar ID: 2183
   %28 = load i8*, i8** %it_instrumented, align 4 
On edge 2115-->2183
[SelectDef] On node: ValVar ID: 2115
   %it_instrumented = alloca i8*, align 4 
On edge 2116-->2115
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2115
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2116 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2170-->2115
[SelectDef] On node: ValVar ID: 2170
   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7 
On edge 2160-->2170
[SelectDef] On node: ValVar ID: 2160
   %19 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2105-->2160
[SelectDef] On node: ValVar ID: 2105
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2106-->2105
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2105
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2106 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2092-->2105
On edge 2188-->2105
[SelectDef] On node: ValVar ID: 2188
   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1 
On edge 2187-->2188
[SelectDef] On node: ValVar ID: 2187
   %29 = load i8*, i8** %it_instrumented, align 4 
On edge 2115-->2187
Node 2115 already visited
[SelectDef] On node: ValVar ID: 2092
 i8* %start { 0th arg str_findstr_instrumented  }
On edge 1306-->2092
On edge 1900-->2092
On edge 1995-->2092
[SelectDef] On node: ValVar ID: 1995
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1995
[SelectDef] On node: ValVar ID: 1949
   %start_instrumented = alloca i8*, align 4 
On edge 1950-->1949
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1949
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1961-->1949
On edge 1993-->1949
[SelectDef] On node: ValVar ID: 1993
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %19, i32 9 
On edge 1992-->1993
[SelectDef] On node: ValVar ID: 1992
   %19 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1992
Node 1949 already visited
[SelectDef] On node: ValVar ID: 1961
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1957-->1961
[SelectDef] On node: ValVar ID: 1957
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1956-->1957
[SelectDef] On node: ValVar ID: 1956
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1955-->1956
[SelectDef] On node: ValVar ID: 1955
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1955
Node 1945 already visited
[SelectDef] On node: ValVar ID: 1900
   %19 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1900
[SelectDef] On node: ValVar ID: 1855
   %start_instrumented = alloca i8*, align 4 
On edge 1856-->1855
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1855
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1867-->1855
On edge 1898-->1855
[SelectDef] On node: ValVar ID: 1898
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4 
On edge 1897-->1898
[SelectDef] On node: ValVar ID: 1897
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1897
Node 1855 already visited
[SelectDef] On node: ValVar ID: 1867
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1863-->1867
[SelectDef] On node: ValVar ID: 1863
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1862-->1863
[SelectDef] On node: ValVar ID: 1862
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1861-->1862
[SelectDef] On node: ValVar ID: 1861
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1861
Node 1851 already visited
[SelectDef] On node: ValVar ID: 1306
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1306
[SelectDef] On node: ValVar ID: 1262
   %start_instrumented = alloca i8*, align 4 
On edge 1263-->1262
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1262
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1274-->1262
On edge 1304-->1262
[SelectDef] On node: ValVar ID: 1304
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1303-->1304
[SelectDef] On node: ValVar ID: 1303
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1303
Node 1262 already visited
[SelectDef] On node: ValVar ID: 1274
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1270-->1274
[SelectDef] On node: ValVar ID: 1270
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1269-->1270
[SelectDef] On node: ValVar ID: 1269
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1268-->1269
[SelectDef] On node: ValVar ID: 1268
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1268
Node 1258 already visited
Defs of param 2 are 15
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call7_instrumented = call i8* @str_findstr_instrumented(i8* %20, i8* %21, i8* %22, i32 0, i32 0, i32 0)
Node:   store i8* %call7_instrumented, i8** %bracket_instrumented, align 4
Node:   %31 = load i8*, i8** %bracket_instrumented, align 4
Node:   %add.ptr12_instrumented = getelementptr inbounds i8, i8* %31, i32 3
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call7_instrumented = call i8* @str_findstr_instrumented(i8* %20, i8* %21, i8* %22, i32 0, i32 0, i32 0)
Node:   store i8* %call7_instrumented, i8** %bracket_instrumented, align 4
Node:   %31 = load i8*, i8** %bracket_instrumented, align 4
Node:   %add.ptr12_instrumented = getelementptr inbounds i8, i8* %31, i32 3
Node:   %add.ptr12_instrumented = getelementptr inbounds i8, i8* %31, i32 3
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param add.ptr12_instrumented number 2 is 0 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to __assert_fail inside str_ltrim_instrumented
 Analyzing call to printf inside main
 Analyzing call to gettimeofday inside main
 Analyzing call to fprintf inside main
 Analyzing call to str_find_notalnum_instrumented inside parse_start_instrumented
Function str_find_notalnum_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Checking aliasing of  with argument state_id of parse_start_instrumented
Checking aliasing of  with argument args_id of parse_start_instrumented
Def of param: LoadVFGNode ID: 1153 LoadStmt: [Var1421 <-- Var1359]	
   %23 = load i8*, i8** %name_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 4
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1
Node:   store i8* %add.ptr10_instrumented, i8** %name_instrumented, align 4
Node:   %23 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1
Node:   store i8* %add.ptr10_instrumented, i8** %name_instrumented, align 4
Node:   %23 = load i8*, i8** %name_instrumented, align 4
Node:   %23 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Checking aliasing of  with argument state_id of parse_start_instrumented
Checking aliasing of  with argument args_id of parse_start_instrumented
Def of param: LoadVFGNode ID: 1165 LoadStmt: [Var1422 <-- Var1365]	
   %24 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1422
   %24 = load i8*, i8** %end_instrumented, align 4 
On edge 1365-->1422
[SelectDef] On node: ValVar ID: 1365
   %end_instrumented = alloca i8*, align 4 
On edge 1366-->1365
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1365
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1366 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1383-->1365
[SelectDef] On node: ValVar ID: 1383
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1379-->1383
[SelectDef] On node: ValVar ID: 1379
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1378-->1379
[SelectDef] On node: ValVar ID: 1378
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1377-->1378
[SelectDef] On node: ValVar ID: 1377
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1377
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %24 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %24 = load i8*, i8** %end_instrumented, align 4
Node:   %24 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to sleep inside main
 Analyzing call to printf inside main
 Analyzing call to llvm.memmove.p0i8.p0i8.i32 inside main
 Analyzing call to count_lines_instrumented inside main
Function count_lines_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of arraydecay44 with argument argc of main
Checking aliasing of arraydecay44 with argument argv of main
Def of param: GepVFGNode ID: 658 GepStmt: [Var536 <-- Var359]	
   %arraydecay44 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 536
   %arraydecay44 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
On edge 359-->536
[SelectDef] On node: ValVar ID: 359
   %buffer = alloca [8128 x i8], align 1 
On edge 360-->359
[SelectDefs] Adding node: FIObjVar ID: 360 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param 0 are 1
FIObjVar ID: 360 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param arraydecay44 number 0 is 101 and has lenght 8128
Parameter 1 is not a pointer
Parameter 2 is not a pointer
 Analyzing call to print_prettyxml_instrumented inside main
Function print_prettyxml_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of arraydecay61 with argument argc of main
Checking aliasing of arraydecay61 with argument argv of main
Def of param: GepVFGNode ID: 660 GepStmt: [Var582 <-- Var359]	
   %arraydecay61 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 582
   %arraydecay61 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
On edge 359-->582
[SelectDef] On node: ValVar ID: 359
   %buffer = alloca [8128 x i8], align 1 
On edge 360-->359
[SelectDefs] Adding node: FIObjVar ID: 360 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param 0 are 1
FIObjVar ID: 360 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param arraydecay61 number 0 is 101 and has lenght 8128
Parameter 1 is a pointer
Checking aliasing of arraydecay62 with argument argc of main
Checking aliasing of arraydecay62 with argument argv of main
Def of param: GepVFGNode ID: 665 GepStmt: [Var583 <-- Var363]	
   %arraydecay62 = getelementptr inbounds [128 x %struct.sxmltok_t], [128 x %struct.sxmltok_t]* %tokens, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 583
   %arraydecay62 = getelementptr inbounds [128 x %struct.sxmltok_t], [128 x %struct.sxmltok_t]* %tokens, i32 0, i32 0 
On edge 363-->583
[SelectDef] On node: ValVar ID: 363
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
On edge 364-->363
[SelectDefs] Adding node: FIObjVar ID: 364 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
Defs of param 1 are 1
FIObjVar ID: 364 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
Defs of param arraydecay62 number 1 is 144 and has lenght 1536
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of indent with argument argc of main
Checking aliasing of indent with argument argv of main
Def of param: AddrVFGNode ID: 150 AddrStmt: [Var365 <-- Var366]	
   %indent = alloca i32, align 4 
[SelectDef] On node: ValVar ID: 365
   %indent = alloca i32, align 4 
On edge 366-->365
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 365
	-  %indent = alloca i32, align 4
[SelectDefs] Adding node: FIObjVar ID: 366 (base object)
   %indent = alloca i32, align 4 
On edge 261-->365
[SelectDef] On node: ValVar ID: 261
 i32 0 { constant data }
On edge 3-->261
Discarding edge
Defs of param 3 are 1
Ignoring FIObjVar ID: 366 (base object)
   %indent = alloca i32, align 4  since it's a dominator
Parameter 4 is not a pointer
Parameter 5 is not a pointer
Parameter 6 is not a pointer
 Analyzing call to print_prettyxml_instrumented inside main
Function print_prettyxml_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of arraydecay16 with argument argc of main
Checking aliasing of arraydecay16 with argument argv of main
Def of param: GepVFGNode ID: 652 GepStmt: [Var455 <-- Var359]	
   %arraydecay16 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 455
   %arraydecay16 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
On edge 359-->455
[SelectDef] On node: ValVar ID: 359
   %buffer = alloca [8128 x i8], align 1 
On edge 360-->359
[SelectDefs] Adding node: FIObjVar ID: 360 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param 0 are 1
FIObjVar ID: 360 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param arraydecay16 number 0 is 101 and has lenght 8128
Parameter 1 is a pointer
Checking aliasing of arraydecay17 with argument argc of main
Checking aliasing of arraydecay17 with argument argv of main
Def of param: GepVFGNode ID: 663 GepStmt: [Var456 <-- Var363]	
   %arraydecay17 = getelementptr inbounds [128 x %struct.sxmltok_t], [128 x %struct.sxmltok_t]* %tokens, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 456
   %arraydecay17 = getelementptr inbounds [128 x %struct.sxmltok_t], [128 x %struct.sxmltok_t]* %tokens, i32 0, i32 0 
On edge 363-->456
[SelectDef] On node: ValVar ID: 363
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
On edge 364-->363
[SelectDefs] Adding node: FIObjVar ID: 364 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
Defs of param 1 are 1
FIObjVar ID: 364 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
Defs of param arraydecay17 number 1 is 144 and has lenght 1536
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of indent with argument argc of main
Checking aliasing of indent with argument argv of main
Def of param: AddrVFGNode ID: 150 AddrStmt: [Var365 <-- Var366]	
   %indent = alloca i32, align 4 
[SelectDef] On node: ValVar ID: 365
   %indent = alloca i32, align 4 
On edge 366-->365
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 365
	-  %indent = alloca i32, align 4
[SelectDefs] Adding node: FIObjVar ID: 366 (base object)
   %indent = alloca i32, align 4 
On edge 261-->365
[SelectDef] On node: ValVar ID: 261
 i32 0 { constant data }
On edge 3-->261
Discarding edge
Defs of param 3 are 1
Ignoring FIObjVar ID: 366 (base object)
   %indent = alloca i32, align 4  since it's a dominator
Parameter 4 is not a pointer
Parameter 5 is not a pointer
Parameter 6 is not a pointer
 Analyzing call to fprintf inside main
 Analyzing call to state_pushtoken_instrumented inside parse_end_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1253 LoadStmt: [Var1820 <-- Var1737]	
   %36 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1820
   %36 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1820
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 3 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %24 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2
Node:   store i8* %add.ptr8_instrumented, i8** %start_instrumented, align 4
Node:   %36 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %24 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2
Node:   store i8* %add.ptr8_instrumented, i8** %start_instrumented, align 4
Node:   %36 = load i8*, i8** %start_instrumented, align 4
Node:   %36 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 0 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1246 LoadStmt: [Var1821 <-- Var1735]	
   %37 = load i8*, i8** %space_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1821
   %37 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1821
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
Node 754 already visited
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
Defs of param 4 are 11
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call14_instrumented, i8** %space_instrumented, align 4
Node:   %37 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call14_instrumented, i8** %space_instrumented, align 4
Node:   %37 = load i8*, i8** %space_instrumented, align 4
Node:   %37 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 0 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to llvm.memcpy.p0i8.p0i8.i32 inside sxml_parse_instrumented
 Analyzing call to sprintf inside main
 Analyzing call to __assert_fail inside main
 Analyzing call to sprintf inside print_indent
 Analyzing call to state_pushtoken_instrumented inside parse_characters_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1226 LoadStmt: [Var1701 <-- Var1609]	
   %43 = load i8*, i8** %ampr_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1701
   %43 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1701
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1508-->1624
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0) 
On edge 1508-->2535
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0) 
On edge 985-->2563
Node 985 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
Node 1609 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
Defs of param 3 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %43 = load i8*, i8** %ampr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %43 = load i8*, i8** %ampr_instrumented, align 4
Node:   %43 = load i8*, i8** %ampr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 0 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1212 LoadStmt: [Var1702 <-- Var1603]	
   %44 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1702
   %44 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1702
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1508-->1682
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0) 
On edge 1508-->2535
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0) 
On edge 985-->2563
Node 985 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
Node 1603 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
Defs of param 4 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0)
Node:   store i8* %call14_instrumented, i8** %colon_instrumented, align 4
Node:   %40 = load i8*, i8** %colon_instrumented, align 4
Node:   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1
Node:   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4
Node:   %44 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0)
Node:   store i8* %call14_instrumented, i8** %colon_instrumented, align 4
Node:   %40 = load i8*, i8** %colon_instrumented, align 4
Node:   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1
Node:   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4
Node:   %44 = load i8*, i8** %start_instrumented, align 4
Node:   %44 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 0 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to str_startswith_instrumented inside parse_doctype_instrumented
Function str_startswith_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Checking aliasing of  with argument state_id of parse_doctype_instrumented
Checking aliasing of  with argument args_id of parse_doctype_instrumented
Def of param: LoadVFGNode ID: 1116 LoadStmt: [Var1295 <-- Var1262]	
   %14 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1295
   %14 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1295
[SelectDef] On node: ValVar ID: 1262
   %start_instrumented = alloca i8*, align 4 
On edge 1263-->1262
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1262
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1274-->1262
On edge 1304-->1262
[SelectDef] On node: ValVar ID: 1304
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1303-->1304
[SelectDef] On node: ValVar ID: 1303
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1303
Node 1262 already visited
[SelectDef] On node: ValVar ID: 1274
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1270-->1274
[SelectDef] On node: ValVar ID: 1270
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1269-->1270
[SelectDef] On node: ValVar ID: 1269
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1268-->1269
[SelectDef] On node: ValVar ID: 1268
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1268
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Checking aliasing of  with argument state_id of parse_doctype_instrumented
Checking aliasing of  with argument args_id of parse_doctype_instrumented
Def of param: LoadVFGNode ID: 1121 LoadStmt: [Var1296 <-- Var1264]	
   %15 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1296
   %15 = load i8*, i8** %end_instrumented, align 4 
On edge 1264-->1296
[SelectDef] On node: ValVar ID: 1264
   %end_instrumented = alloca i8*, align 4 
On edge 1265-->1264
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1264
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1265 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1282-->1264
[SelectDef] On node: ValVar ID: 1282
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1278-->1282
[SelectDef] On node: ValVar ID: 1278
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1277-->1278
[SelectDef] On node: ValVar ID: 1277
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1276-->1277
[SelectDef] On node: ValVar ID: 1276
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1276
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Checking aliasing of  with argument state_id of parse_doctype_instrumented
Checking aliasing of  with argument args_id of parse_doctype_instrumented
Def of param: GepVFGNode ID: 606 GepStmt: [Var1297 <-- Var66]	
   %16 = getelementptr inbounds [10 x i8], [10 x i8]* @parse_doctype.STARTTAG, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1297
   %16 = getelementptr inbounds [10 x i8], [10 x i8]* @parse_doctype.STARTTAG, i32 0, i32 0 
On edge 66-->1297
[SelectDef] On node: ValVar ID: 66
 @parse_doctype.STARTTAG = internal constant [10 x i8] c"<!DOCTYPE\00", align 1 { Glob  }
On edge 3-->66
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to str_findstr_instrumented inside parse_doctype_instrumented
Function str_findstr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Checking aliasing of  with argument state_id of parse_doctype_instrumented
Checking aliasing of  with argument args_id of parse_doctype_instrumented
Def of param: LoadVFGNode ID: 1118 LoadStmt: [Var1306 <-- Var1262]	
   %18 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1306
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1306
[SelectDef] On node: ValVar ID: 1262
   %start_instrumented = alloca i8*, align 4 
On edge 1263-->1262
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1262
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1274-->1262
On edge 1304-->1262
[SelectDef] On node: ValVar ID: 1304
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1303-->1304
[SelectDef] On node: ValVar ID: 1303
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1303
Node 1262 already visited
[SelectDef] On node: ValVar ID: 1274
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1270-->1274
[SelectDef] On node: ValVar ID: 1270
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1269-->1270
[SelectDef] On node: ValVar ID: 1269
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1268-->1269
[SelectDef] On node: ValVar ID: 1268
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1268
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Checking aliasing of  with argument state_id of parse_doctype_instrumented
Checking aliasing of  with argument args_id of parse_doctype_instrumented
Def of param: LoadVFGNode ID: 1122 LoadStmt: [Var1307 <-- Var1264]	
   %19 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1307
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1264-->1307
[SelectDef] On node: ValVar ID: 1264
   %end_instrumented = alloca i8*, align 4 
On edge 1265-->1264
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1264
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1265 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1282-->1264
[SelectDef] On node: ValVar ID: 1282
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1278-->1282
[SelectDef] On node: ValVar ID: 1278
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1277-->1278
[SelectDef] On node: ValVar ID: 1277
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1276-->1277
[SelectDef] On node: ValVar ID: 1276
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1276
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %19 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %19 = load i8*, i8** %end_instrumented, align 4
Node:   %19 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Checking aliasing of  with argument state_id of parse_doctype_instrumented
Checking aliasing of  with argument args_id of parse_doctype_instrumented
Def of param: GepVFGNode ID: 607 GepStmt: [Var1308 <-- Var68]	
   %20 = getelementptr inbounds [3 x i8], [3 x i8]* @parse_doctype.ENDTAG, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1308
   %20 = getelementptr inbounds [3 x i8], [3 x i8]* @parse_doctype.ENDTAG, i32 0, i32 0 
On edge 68-->1308
[SelectDef] On node: ValVar ID: 68
 @parse_doctype.ENDTAG = internal constant [3 x i8] c"]>\00", align 1 { Glob  }
On edge 3-->68
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to state_pushtoken_instrumented inside parse_start_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Checking aliasing of  with argument state_id of parse_start_instrumented
Checking aliasing of  with argument args_id of parse_start_instrumented
Def of param: LoadVFGNode ID: 1154 LoadStmt: [Var1433 <-- Var1359]	
   %29 = load i8*, i8** %name_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1433
   %29 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1433
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 3 are 4
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1
Node:   store i8* %add.ptr10_instrumented, i8** %name_instrumented, align 4
Node:   %29 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1
Node:   store i8* %add.ptr10_instrumented, i8** %name_instrumented, align 4
Node:   %29 = load i8*, i8** %name_instrumented, align 4
Node:   %29 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 0 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Checking aliasing of  with argument state_id of parse_start_instrumented
Checking aliasing of  with argument args_id of parse_start_instrumented
Def of param: LoadVFGNode ID: 1157 LoadStmt: [Var1434 <-- Var1361]	
   %30 = load i8*, i8** %space_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1434
   %30 = load i8*, i8** %space_instrumented, align 4 
On edge 1361-->1434
[SelectDef] On node: ValVar ID: 1361
   %space_instrumented = alloca i8*, align 4 
On edge 1362-->1361
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1361
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1362 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1423-->1361
[SelectDef] On node: ValVar ID: 1423
   %call11_instrumented = call i8* @str_find_notalnum_instrumented(i8* %23, i8* %24, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1423
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
Node 754 already visited
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
Defs of param 4 are 11
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call11_instrumented = call i8* @str_find_notalnum_instrumented(i8* %23, i8* %24, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Node:   %30 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call11_instrumented = call i8* @str_find_notalnum_instrumented(i8* %23, i8* %24, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Node:   %30 = load i8*, i8** %space_instrumented, align 4
Node:   %30 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 0 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to fprintf inside parse_cdata_instrumented
 Analyzing call to state_setpos_instrumented inside parse_start_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Checking aliasing of  with argument state_id of parse_start_instrumented
Checking aliasing of  with argument args_id of parse_start_instrumented
Def of param: LoadVFGNode ID: 1158 LoadStmt: [Var1438 <-- Var1361]	
   %33 = load i8*, i8** %space_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1438
   %33 = load i8*, i8** %space_instrumented, align 4 
On edge 1361-->1438
[SelectDef] On node: ValVar ID: 1361
   %space_instrumented = alloca i8*, align 4 
On edge 1362-->1361
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1361
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1362 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1423-->1361
[SelectDef] On node: ValVar ID: 1423
   %call11_instrumented = call i8* @str_find_notalnum_instrumented(i8* %23, i8* %24, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1423
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
Node 754 already visited
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
Defs of param 2 are 11
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call11_instrumented = call i8* @str_find_notalnum_instrumented(i8* %23, i8* %24, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Node:   %33 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call11_instrumented = call i8* @str_find_notalnum_instrumented(i8* %23, i8* %24, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Node:   %33 = load i8*, i8** %space_instrumented, align 4
Node:   %33 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 0 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to __assert_fail inside state_pushtoken_instrumented
 Analyzing call to printf inside print_prettyxml_instrumented
 Analyzing call to str_find_notalnum_instrumented inside parse_instruction_instrumented
Function str_find_notalnum_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1089 LoadStmt: [Var1167 <-- Var1114]	
   %22 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1093 LoadStmt: [Var1168 <-- Var1116]	
   %23 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1168
   %23 = load i8*, i8** %end_instrumented, align 4 
On edge 1116-->1168
[SelectDef] On node: ValVar ID: 1116
   %end_instrumented = alloca i8*, align 4 
On edge 1117-->1116
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1116
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1117 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1134-->1116
[SelectDef] On node: ValVar ID: 1134
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1130-->1134
[SelectDef] On node: ValVar ID: 1130
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1129-->1130
[SelectDef] On node: ValVar ID: 1129
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1128-->1129
[SelectDef] On node: ValVar ID: 1128
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1128
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %23 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %23 = load i8*, i8** %end_instrumented, align 4
Node:   %23 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to parse_attributes_instrumented inside parse_start_instrumented
Function parse_attributes_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to printf inside print_prettyxml_instrumented
 Analyzing call to __assert_fail inside str_findstr_instrumented
 Analyzing call to state_pushtoken_instrumented inside parse_start_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Checking aliasing of  with argument state_id of parse_start_instrumented
Checking aliasing of  with argument args_id of parse_start_instrumented
Def of param: LoadVFGNode ID: 1155 LoadStmt: [Var1470 <-- Var1359]	
   %48 = load i8*, i8** %name_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1470
   %48 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1470
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 3 are 4
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1
Node:   store i8* %add.ptr10_instrumented, i8** %name_instrumented, align 4
Node:   %48 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1
Node:   store i8* %add.ptr10_instrumented, i8** %name_instrumented, align 4
Node:   %48 = load i8*, i8** %name_instrumented, align 4
Node:   %48 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 0 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Checking aliasing of  with argument state_id of parse_start_instrumented
Checking aliasing of  with argument args_id of parse_start_instrumented
Def of param: LoadVFGNode ID: 1159 LoadStmt: [Var1471 <-- Var1361]	
   %49 = load i8*, i8** %space_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1471
   %49 = load i8*, i8** %space_instrumented, align 4 
On edge 1361-->1471
[SelectDef] On node: ValVar ID: 1361
   %space_instrumented = alloca i8*, align 4 
On edge 1362-->1361
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1361
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1362 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1423-->1361
[SelectDef] On node: ValVar ID: 1423
   %call11_instrumented = call i8* @str_find_notalnum_instrumented(i8* %23, i8* %24, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1423
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
Node 754 already visited
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
Defs of param 4 are 11
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call11_instrumented = call i8* @str_find_notalnum_instrumented(i8* %23, i8* %24, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Node:   %49 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call11_instrumented = call i8* @str_find_notalnum_instrumented(i8* %23, i8* %24, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Node:   %49 = load i8*, i8** %space_instrumented, align 4
Node:   %49 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 0 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to str_ltrim_instrumented inside parse_attributes_instrumented
Function str_ltrim_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of add.ptr42_instrumented with argument state of parse_attributes_instrumented
Checking aliasing of add.ptr42_instrumented with argument args of parse_attributes_instrumented
Checking aliasing of add.ptr42_instrumented with argument state_id of parse_attributes_instrumented
Checking aliasing of add.ptr42_instrumented with argument args_id of parse_attributes_instrumented
Def of param: GepVFGNode ID: 841 GepStmt: [Var2561 <-- Var2560]	
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0) 
On edge 1508-->2535
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0) 
On edge 985-->2563
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
Node 2561 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
Node 985 already visited
Defs of param 0 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0)
Node:   store i8* %call31_instrumented, i8** %quot_instrumented, align 4
Node:   %59 = load i8*, i8** %quot_instrumented, align 4
Node:   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0)
Node:   store i8* %call31_instrumented, i8** %quot_instrumented, align 4
Node:   %59 = load i8*, i8** %quot_instrumented, align 4
Node:   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1
Node:   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param add.ptr42_instrumented number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1407 LoadStmt: [Var2562 <-- Var2405]	
   %60 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2562
   %60 = load i8*, i8** %end_instrumented, align 4 
On edge 2405-->2562
[SelectDef] On node: ValVar ID: 2405
   %end_instrumented = alloca i8*, align 4 
On edge 2406-->2405
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2405
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2406 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 2439-->2405
[SelectDef] On node: ValVar ID: 2439
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 2435-->2439
[SelectDef] On node: ValVar ID: 2435
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 2434-->2435
[SelectDef] On node: ValVar ID: 2434
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 2433-->2434
[SelectDef] On node: ValVar ID: 2433
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2433
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
Defs of param 1 are 5
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %60 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %60 = load i8*, i8** %end_instrumented, align 4
Node:   %60 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to __assert_fail inside str_findchr_instrumented
 Analyzing call to printf inside parse_start_instrumented
 Analyzing call to str_findchr_instrumented inside parse_attributes_instrumented
Function str_findchr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1429 LoadStmt: [Var2530 <-- Var2417]	
   %45 = load i8*, i8** %value_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0) 
On edge 1508-->2535
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
Node 2530 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
Node 985 already visited
Defs of param 0 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0)
Node:   store i8* %call31_instrumented, i8** %quot_instrumented, align 4
Node:   store i8* %call14_instrumented, i8** %quot_instrumented, align 4
Node:   %44 = load i8*, i8** %quot_instrumented, align 4
Node:   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1
Node:   store i8* %add.ptr29_instrumented, i8** %value_instrumented, align 4
Node:   %45 = load i8*, i8** %value_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0)
Node:   store i8* %call31_instrumented, i8** %quot_instrumented, align 4
Node:   store i8* %call14_instrumented, i8** %quot_instrumented, align 4
Node:   %44 = load i8*, i8** %quot_instrumented, align 4
Node:   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1
Node:   store i8* %add.ptr29_instrumented, i8** %value_instrumented, align 4
Node:   %45 = load i8*, i8** %value_instrumented, align 4
Node:   %45 = load i8*, i8** %value_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1405 LoadStmt: [Var2531 <-- Var2405]	
   %46 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2531
   %46 = load i8*, i8** %end_instrumented, align 4 
On edge 2405-->2531
[SelectDef] On node: ValVar ID: 2405
   %end_instrumented = alloca i8*, align 4 
On edge 2406-->2405
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2405
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2406 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 2439-->2405
[SelectDef] On node: ValVar ID: 2439
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 2435-->2439
[SelectDef] On node: ValVar ID: 2435
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 2434-->2435
[SelectDef] On node: ValVar ID: 2434
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 2433-->2434
[SelectDef] On node: ValVar ID: 2433
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2433
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
Defs of param 1 are 5
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %46 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %46 = load i8*, i8** %end_instrumented, align 4
Node:   %46 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
Parameter 4 is not a pointer
 Analyzing call to state_setpos_instrumented inside parse_start_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of add.ptr45_instrumented with argument state of parse_start_instrumented
Checking aliasing of add.ptr45_instrumented with argument args of parse_start_instrumented
Checking aliasing of add.ptr45_instrumented with argument state_id of parse_start_instrumented
Checking aliasing of add.ptr45_instrumented with argument args_id of parse_start_instrumented
Def of param: GepVFGNode ID: 779 GepStmt: [Var1497 <-- Var1496]	
   %add.ptr45_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
[SelectDef] On node: ValVar ID: 1497
   %add.ptr45_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 1496-->1497
[SelectDef] On node: ValVar ID: 1496
   %58 = load i8*, i8** %gt_instrumented, align 4 
On edge 1357-->1496
[SelectDef] On node: ValVar ID: 1357
   %gt_instrumented = alloca i8*, align 4 
On edge 1358-->1357
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1357
	-  %gt_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1358 (base object)
   %gt_instrumented = alloca i8*, align 4 
On edge 1456-->1357
On edge 1474-->1357
[SelectDef] On node: ValVar ID: 1474
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %50, i32 1 
On edge 1473-->1474
[SelectDef] On node: ValVar ID: 1473
   %50 = load i8*, i8** %gt_instrumented, align 4 
On edge 1357-->1473
Node 1357 already visited
[SelectDef] On node: ValVar ID: 1456
   %add.ptr25_instrumented = getelementptr inbounds i8, i8* %39, i32 %41 
On edge 1452-->1456
[SelectDef] On node: ValVar ID: 1452
   %39 = load i8*, i8** %buffer23_instrumented, align 4 
On edge 1451-->1452
[SelectDef] On node: ValVar ID: 1451
   %buffer23_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %38, i32 0, i32 0 
On edge 1450-->1451
[SelectDef] On node: ValVar ID: 1450
   %38 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1450
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 2 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %39 = load i8*, i8** %buffer23_instrumented, align 4
Node:   %add.ptr25_instrumented = getelementptr inbounds i8, i8* %39, i32 %41
Node:   store i8* %add.ptr25_instrumented, i8** %gt_instrumented, align 4
Node:   %50 = load i8*, i8** %gt_instrumented, align 4
Node:   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %50, i32 1
Node:   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4
Node:   %58 = load i8*, i8** %gt_instrumented, align 4
Node:   %add.ptr45_instrumented = getelementptr inbounds i8, i8* %58, i32 1
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %39 = load i8*, i8** %buffer23_instrumented, align 4
Node:   %add.ptr25_instrumented = getelementptr inbounds i8, i8* %39, i32 %41
Node:   store i8* %add.ptr25_instrumented, i8** %gt_instrumented, align 4
Node:   %50 = load i8*, i8** %gt_instrumented, align 4
Node:   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %50, i32 1
Node:   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4
Node:   %58 = load i8*, i8** %gt_instrumented, align 4
Node:   %add.ptr45_instrumented = getelementptr inbounds i8, i8* %58, i32 1
Node:   %add.ptr45_instrumented = getelementptr inbounds i8, i8* %58, i32 1
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param add.ptr45_instrumented number 2 is 0 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to memchr inside str_findchr_instrumented
 Analyzing call to str_findchr_instrumented inside parse_characters_instrumented
Function str_findchr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1209 LoadStmt: [Var1622 <-- Var1603]	
   %8 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1508-->1682
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
Node 1622 already visited
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
Node 985 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
Defs of param 0 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %8 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %8 = load i8*, i8** %start_instrumented, align 4
Node:   %8 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1203 LoadStmt: [Var1623 <-- Var1601]	
   %9 = load i8*, i8** %end.addr_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1623
   %9 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 1601-->1623
[SelectDef] On node: ValVar ID: 1601
   %end.addr_instrumented = alloca i8*, align 4 
On edge 1602-->1601
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1601
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1602 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 1586-->1601
[SelectDef] On node: ValVar ID: 1586
 i8* %end { 2nd arg parse_characters_instrumented  }
On edge 905-->1586
On edge 2704-->1586
[SelectDef] On node: ValVar ID: 2704
   %11 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2683-->2704
[SelectDef] On node: ValVar ID: 2683
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2684-->2683
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2683
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2684 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2668-->2683
[SelectDef] On node: ValVar ID: 2668
 i8* %end { 2nd arg parse_attrvalue_instrumented  }
On edge 2549-->2668
[SelectDef] On node: ValVar ID: 2549
   %56 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2549
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
Node 985 already visited
[SelectDef] On node: ValVar ID: 905
   %43 = load i8*, i8** %lt34_instrumented, align 4 
On edge 766-->905
[SelectDef] On node: ValVar ID: 766
   %lt34_instrumented = alloca i8*, align 4 
On edge 767-->766
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 766
	-  %lt34_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 767 (base object)
   %lt34_instrumented = alloca i8*, align 4 
On edge 891-->766
[SelectDef] On node: ValVar ID: 891
   %call35_instrumented = call i8* @str_findchr_instrumented(i8* %38, i8* %39, i32 60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->891
Node 1508 already visited
Defs of param 1 are 31
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call35_instrumented = call i8* @str_findchr_instrumented(i8* %38, i8* %39, i32 60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call35_instrumented, i8** %lt34_instrumented, align 4
Node:   %43 = load i8*, i8** %lt34_instrumented, align 4
Node:   %43 = load i8*, i8** %lt34_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %end.addr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call35_instrumented = call i8* @str_findchr_instrumented(i8* %38, i8* %39, i32 60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call35_instrumented, i8** %lt34_instrumented, align 4
Node:   %43 = load i8*, i8** %lt34_instrumented, align 4
Node:   %43 = load i8*, i8** %lt34_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %end.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %end.addr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
Parameter 4 is not a pointer
 Analyzing call to parse_characters_instrumented inside parse_attrvalue_instrumented
Function parse_characters_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attrvalue_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attrvalue_instrumented
Checking aliasing of  with argument args of parse_attrvalue_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_attrvalue_instrumented
Checking aliasing of  with argument args of parse_attrvalue_instrumented
Checking aliasing of  with argument end of parse_attrvalue_instrumented
Checking aliasing of  with argument state_id of parse_attrvalue_instrumented
Checking aliasing of  with argument args_id of parse_attrvalue_instrumented
Checking aliasing of  with argument end_id of parse_attrvalue_instrumented
Def of param: LoadVFGNode ID: 1463 LoadStmt: [Var2704 <-- Var2683]	
   %11 = load i8*, i8** %end.addr_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2704
   %11 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2683-->2704
[SelectDef] On node: ValVar ID: 2683
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2684-->2683
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2683
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2684 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2668-->2683
[SelectDef] On node: ValVar ID: 2668
 i8* %end { 2nd arg parse_attrvalue_instrumented  }
On edge 2549-->2668
[SelectDef] On node: ValVar ID: 2549
   %56 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2549
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
Node 985 already visited
Defs of param 2 are 29
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call31_instrumented, i8** %quot_instrumented, align 4
Node:   %56 = load i8*, i8** %quot_instrumented, align 4
Node:   %56 = load i8*, i8** %quot_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %11 = load i8*, i8** %end.addr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call31_instrumented, i8** %quot_instrumented, align 4
Node:   %56 = load i8*, i8** %quot_instrumented, align 4
Node:   %56 = load i8*, i8** %quot_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %11 = load i8*, i8** %end.addr_instrumented, align 4
Node:   %11 = load i8*, i8** %end.addr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 0 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to state_pushtoken_instrumented inside parse_characters_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1211 LoadStmt: [Var1651 <-- Var1603]	
   %22 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1651
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1651
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1508-->1682
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
Node 985 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
Node 1603 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
Defs of param 3 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 0 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1220 LoadStmt: [Var1652 <-- Var1609]	
   %23 = load i8*, i8** %ampr_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1652
   %23 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1652
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1624
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
Node 985 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
Node 1609 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
Defs of param 4 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %23 = load i8*, i8** %ampr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %23 = load i8*, i8** %ampr_instrumented, align 4
Node:   %23 = load i8*, i8** %ampr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 0 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to __assert_fail inside parse_end_instrumented
 Analyzing call to printf inside print_chartokens_instrumented
 Analyzing call to state_setpos_instrumented inside parse_characters_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1222 LoadStmt: [Var1662 <-- Var1609]	
   %28 = load i8*, i8** %ampr_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1662
   %28 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1662
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1624
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
Node 985 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
Node 1609 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
Defs of param 2 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %28 = load i8*, i8** %ampr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %28 = load i8*, i8** %ampr_instrumented, align 4
Node:   %28 = load i8*, i8** %ampr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 0 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to str_startswith_instrumented inside parse_comment_instrumented
Function str_startswith_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Checking aliasing of  with argument state_id of parse_comment_instrumented
Checking aliasing of  with argument args_id of parse_comment_instrumented
Def of param: LoadVFGNode ID: 1276 LoadStmt: [Var1887 <-- Var1855]	
   %14 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1887
   %14 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1887
[SelectDef] On node: ValVar ID: 1855
   %start_instrumented = alloca i8*, align 4 
On edge 1856-->1855
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1855
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1867-->1855
On edge 1898-->1855
[SelectDef] On node: ValVar ID: 1898
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4 
On edge 1897-->1898
[SelectDef] On node: ValVar ID: 1897
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1897
Node 1855 already visited
[SelectDef] On node: ValVar ID: 1867
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1863-->1867
[SelectDef] On node: ValVar ID: 1863
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1862-->1863
[SelectDef] On node: ValVar ID: 1862
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1861-->1862
[SelectDef] On node: ValVar ID: 1861
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1861
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Checking aliasing of  with argument state_id of parse_comment_instrumented
Checking aliasing of  with argument args_id of parse_comment_instrumented
Def of param: LoadVFGNode ID: 1281 LoadStmt: [Var1888 <-- Var1857]	
   %15 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1888
   %15 = load i8*, i8** %end_instrumented, align 4 
On edge 1857-->1888
[SelectDef] On node: ValVar ID: 1857
   %end_instrumented = alloca i8*, align 4 
On edge 1858-->1857
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1857
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1858 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1875-->1857
[SelectDef] On node: ValVar ID: 1875
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1871-->1875
[SelectDef] On node: ValVar ID: 1871
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1870-->1871
[SelectDef] On node: ValVar ID: 1870
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1869-->1870
[SelectDef] On node: ValVar ID: 1869
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1869
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Checking aliasing of  with argument state_id of parse_comment_instrumented
Checking aliasing of  with argument args_id of parse_comment_instrumented
Def of param: GepVFGNode ID: 583 GepStmt: [Var1889 <-- Var28]	
   %16 = getelementptr inbounds [5 x i8], [5 x i8]* @parse_comment.STARTTAG, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1889
   %16 = getelementptr inbounds [5 x i8], [5 x i8]* @parse_comment.STARTTAG, i32 0, i32 0 
On edge 28-->1889
[SelectDef] On node: ValVar ID: 28
 @parse_comment.STARTTAG = internal constant [5 x i8] c"<!--\00", align 1 { Glob  }
On edge 3-->28
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to str_findchr_instrumented inside parse_characters_instrumented
Function str_findchr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1225 LoadStmt: [Var1680 <-- Var1609]	
   %33 = load i8*, i8** %ampr_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1624
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
Node 1680 already visited
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
Node 985 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
Defs of param 0 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %33 = load i8*, i8** %ampr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %33 = load i8*, i8** %ampr_instrumented, align 4
Node:   %33 = load i8*, i8** %ampr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1214 LoadStmt: [Var1681 <-- Var1605]	
   %34 = load i8*, i8** %limit_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1681
   %34 = load i8*, i8** %limit_instrumented, align 4 
On edge 1605-->1681
[SelectDef] On node: ValVar ID: 1605
   %limit_instrumented = alloca i8*, align 4 
On edge 1606-->1605
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1605
	-  %limit_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1606 (base object)
   %limit_instrumented = alloca i8*, align 4 
On edge 1678-->1605
[SelectDef] On node: ValVar ID: 1678
   %cond_instrumented = phi i8* [ %add.ptr13_instrumented, %cond.true_instrumented ], [ %32, %cond.false_instrumented ] 
On edge 1673-->1678
[SelectDef] On node: ValVar ID: 1673
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %31, i32 8 
On edge 1672-->1673
[SelectDef] On node: ValVar ID: 1672
   %31 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1672
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1624
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
Node 985 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
Node 1609 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
Defs of param 1 are 29
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call35_instrumented = call i8* @str_findchr_instrumented(i8* %38, i8* %39, i32 60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call35_instrumented, i8** %lt34_instrumented, align 4
Node:   %43 = load i8*, i8** %lt34_instrumented, align 4
Node:   %43 = load i8*, i8** %lt34_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %32 = load i8*, i8** %end.addr_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %add.ptr13_instrumented, %cond.true_instrumented ], [ %32, %cond.false_instrumented ]
Node:   store i8* %cond_instrumented, i8** %limit_instrumented, align 4
Node:   %34 = load i8*, i8** %limit_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call35_instrumented = call i8* @str_findchr_instrumented(i8* %38, i8* %39, i32 60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call35_instrumented, i8** %lt34_instrumented, align 4
Node:   %43 = load i8*, i8** %lt34_instrumented, align 4
Node:   %43 = load i8*, i8** %lt34_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %32 = load i8*, i8** %end.addr_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %add.ptr13_instrumented, %cond.true_instrumented ], [ %32, %cond.false_instrumented ]
Node:   store i8* %cond_instrumented, i8** %limit_instrumented, align 4
Node:   %34 = load i8*, i8** %limit_instrumented, align 4
Node:   %34 = load i8*, i8** %limit_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
Parameter 4 is not a pointer
 Analyzing call to state_setpos_instrumented inside parse_characters_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1213 LoadStmt: [Var1706 <-- Var1603]	
   %47 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1706
   %47 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1706
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1682
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
Node 985 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
Node 1603 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
Defs of param 2 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call14_instrumented, i8** %colon_instrumented, align 4
Node:   %40 = load i8*, i8** %colon_instrumented, align 4
Node:   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1
Node:   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4
Node:   %47 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call14_instrumented, i8** %colon_instrumented, align 4
Node:   %40 = load i8*, i8** %colon_instrumented, align 4
Node:   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1
Node:   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4
Node:   %47 = load i8*, i8** %start_instrumented, align 4
Node:   %47 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 0 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to str_startswith_instrumented inside parse_end_instrumented
Function str_startswith_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1248 LoadStmt: [Var1774 <-- Var1737]	
   %17 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1774
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1774
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1255 LoadStmt: [Var1775 <-- Var1739]	
   %18 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1775
   %18 = load i8*, i8** %end_instrumented, align 4 
On edge 1739-->1775
[SelectDef] On node: ValVar ID: 1739
   %end_instrumented = alloca i8*, align 4 
On edge 1740-->1739
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1739
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1740 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1757-->1739
[SelectDef] On node: ValVar ID: 1757
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1753-->1757
[SelectDef] On node: ValVar ID: 1753
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1752-->1753
[SelectDef] On node: ValVar ID: 1752
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1751-->1752
[SelectDef] On node: ValVar ID: 1751
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1751
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %18 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %18 = load i8*, i8** %end_instrumented, align 4
Node:   %18 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: GepVFGNode ID: 590 GepStmt: [Var1776 <-- Var38]	
   %19 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.24, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1776
   %19 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.24, i32 0, i32 0 
On edge 38-->1776
[SelectDef] On node: ValVar ID: 38
 @.str.24 = private unnamed_addr constant [3 x i8] c"</\00", align 1 { Glob  }
On edge 3-->38
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to state_setpos_instrumented inside parse_doctype_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of add.ptr11_instrumented with argument state of parse_doctype_instrumented
Checking aliasing of add.ptr11_instrumented with argument args of parse_doctype_instrumented
Checking aliasing of add.ptr11_instrumented with argument state_id of parse_doctype_instrumented
Checking aliasing of add.ptr11_instrumented with argument args_id of parse_doctype_instrumented
Def of param: GepVFGNode ID: 765 GepStmt: [Var1328 <-- Var1327]	
   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 2 
[SelectDef] On node: ValVar ID: 1328
   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 2 
On edge 1327-->1328
[SelectDef] On node: ValVar ID: 1327
   %29 = load i8*, i8** %bracket_instrumented, align 4 
On edge 1260-->1327
[SelectDef] On node: ValVar ID: 1260
   %bracket_instrumented = alloca i8*, align 4 
On edge 1261-->1260
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1260
	-  %bracket_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1261 (base object)
   %bracket_instrumented = alloca i8*, align 4 
On edge 1309-->1260
[SelectDef] On node: ValVar ID: 1309
   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2091-->1309
[SelectDef] On node: RetPN ID: 2091 unique return node for function str_findstr_instrumented
On edge 2194-->2091
[SelectDef] On node: ValVar ID: 2194
   %31 = load i8*, i8** %retval_instrumented, align 4 
On edge 2103-->2194
[SelectDef] On node: ValVar ID: 2103
   %retval_instrumented = alloca i8*, align 4 
On edge 2104-->2103
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2103
	-  %retval_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2104 (base object)
   %retval_instrumented = alloca i8*, align 4 
On edge 2183-->2103
On edge 2191-->2103
[SelectDef] On node: ValVar ID: 2191
   %30 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2107-->2191
[SelectDef] On node: ValVar ID: 2107
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2108-->2107
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2107
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2108 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2093-->2107
[SelectDef] On node: ValVar ID: 2093
 i8* %end { 1st arg str_findstr_instrumented  }
On edge 1307-->2093
On edge 1901-->2093
On edge 1996-->2093
[SelectDef] On node: ValVar ID: 1996
   %21 = load i8*, i8** %end_instrumented, align 4 
On edge 1951-->1996
[SelectDef] On node: ValVar ID: 1951
   %end_instrumented = alloca i8*, align 4 
On edge 1952-->1951
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1951
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1952 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1969-->1951
[SelectDef] On node: ValVar ID: 1969
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1965-->1969
[SelectDef] On node: ValVar ID: 1965
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1964-->1965
[SelectDef] On node: ValVar ID: 1964
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1963-->1964
[SelectDef] On node: ValVar ID: 1963
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1963
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1901
   %20 = load i8*, i8** %end_instrumented, align 4 
On edge 1857-->1901
[SelectDef] On node: ValVar ID: 1857
   %end_instrumented = alloca i8*, align 4 
On edge 1858-->1857
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1857
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1858 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1875-->1857
[SelectDef] On node: ValVar ID: 1875
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1871-->1875
[SelectDef] On node: ValVar ID: 1871
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1870-->1871
[SelectDef] On node: ValVar ID: 1870
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1869-->1870
[SelectDef] On node: ValVar ID: 1869
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1869
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
Node 754 already visited
[SelectDef] On node: ValVar ID: 1307
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1264-->1307
[SelectDef] On node: ValVar ID: 1264
   %end_instrumented = alloca i8*, align 4 
On edge 1265-->1264
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1264
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1265 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1282-->1264
[SelectDef] On node: ValVar ID: 1282
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1278-->1282
[SelectDef] On node: ValVar ID: 1278
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1277-->1278
[SelectDef] On node: ValVar ID: 1277
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1276-->1277
[SelectDef] On node: ValVar ID: 1276
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1276
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
Node 754 already visited
[SelectDef] On node: ValVar ID: 2183
   %28 = load i8*, i8** %it_instrumented, align 4 
On edge 2115-->2183
[SelectDef] On node: ValVar ID: 2115
   %it_instrumented = alloca i8*, align 4 
On edge 2116-->2115
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2115
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2116 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2170-->2115
[SelectDef] On node: ValVar ID: 2170
   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7 
On edge 2160-->2170
[SelectDef] On node: ValVar ID: 2160
   %19 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2105-->2160
[SelectDef] On node: ValVar ID: 2105
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2106-->2105
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2105
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2106 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2092-->2105
On edge 2188-->2105
[SelectDef] On node: ValVar ID: 2188
   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1 
On edge 2187-->2188
[SelectDef] On node: ValVar ID: 2187
   %29 = load i8*, i8** %it_instrumented, align 4 
On edge 2115-->2187
Node 2115 already visited
[SelectDef] On node: ValVar ID: 2092
 i8* %start { 0th arg str_findstr_instrumented  }
On edge 1306-->2092
On edge 1900-->2092
On edge 1995-->2092
[SelectDef] On node: ValVar ID: 1995
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1995
[SelectDef] On node: ValVar ID: 1949
   %start_instrumented = alloca i8*, align 4 
On edge 1950-->1949
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1949
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1961-->1949
On edge 1993-->1949
[SelectDef] On node: ValVar ID: 1993
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %19, i32 9 
On edge 1992-->1993
[SelectDef] On node: ValVar ID: 1992
   %19 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1992
Node 1949 already visited
[SelectDef] On node: ValVar ID: 1961
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1957-->1961
[SelectDef] On node: ValVar ID: 1957
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1956-->1957
[SelectDef] On node: ValVar ID: 1956
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1955-->1956
[SelectDef] On node: ValVar ID: 1955
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1955
Node 1945 already visited
[SelectDef] On node: ValVar ID: 1900
   %19 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1900
[SelectDef] On node: ValVar ID: 1855
   %start_instrumented = alloca i8*, align 4 
On edge 1856-->1855
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1855
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1867-->1855
On edge 1898-->1855
[SelectDef] On node: ValVar ID: 1898
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4 
On edge 1897-->1898
[SelectDef] On node: ValVar ID: 1897
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1897
Node 1855 already visited
[SelectDef] On node: ValVar ID: 1867
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1863-->1867
[SelectDef] On node: ValVar ID: 1863
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1862-->1863
[SelectDef] On node: ValVar ID: 1862
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1861-->1862
[SelectDef] On node: ValVar ID: 1861
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1861
Node 1851 already visited
[SelectDef] On node: ValVar ID: 1306
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1306
[SelectDef] On node: ValVar ID: 1262
   %start_instrumented = alloca i8*, align 4 
On edge 1263-->1262
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1262
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1274-->1262
On edge 1304-->1262
[SelectDef] On node: ValVar ID: 1304
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1303-->1304
[SelectDef] On node: ValVar ID: 1303
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1303
Node 1262 already visited
[SelectDef] On node: ValVar ID: 1274
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1270-->1274
[SelectDef] On node: ValVar ID: 1270
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1269-->1270
[SelectDef] On node: ValVar ID: 1269
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1268-->1269
[SelectDef] On node: ValVar ID: 1268
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1268
Node 1258 already visited
Defs of param 2 are 15
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Node:   %29 = load i8*, i8** %bracket_instrumented, align 4
Node:   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 2
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Node:   %29 = load i8*, i8** %bracket_instrumented, align 4
Node:   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 2
Node:   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 2
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param add.ptr11_instrumented number 2 is 0 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to NameStartChar inside parse_end_instrumented
 Analyzing call to fopen inside main
 Analyzing call to str_startswith_instrumented inside parse_cdata_instrumented
Function str_startswith_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Checking aliasing of  with argument state_id of parse_cdata_instrumented
Checking aliasing of  with argument args_id of parse_cdata_instrumented
Def of param: LoadVFGNode ID: 1301 LoadStmt: [Var1981 <-- Var1949]	
   %14 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1981
   %14 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1981
[SelectDef] On node: ValVar ID: 1949
   %start_instrumented = alloca i8*, align 4 
On edge 1950-->1949
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1949
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1961-->1949
On edge 1993-->1949
[SelectDef] On node: ValVar ID: 1993
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %19, i32 9 
On edge 1992-->1993
[SelectDef] On node: ValVar ID: 1992
   %19 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1992
Node 1949 already visited
[SelectDef] On node: ValVar ID: 1961
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1957-->1961
[SelectDef] On node: ValVar ID: 1957
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1956-->1957
[SelectDef] On node: ValVar ID: 1956
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1955-->1956
[SelectDef] On node: ValVar ID: 1955
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1955
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Checking aliasing of  with argument state_id of parse_cdata_instrumented
Checking aliasing of  with argument args_id of parse_cdata_instrumented
Def of param: LoadVFGNode ID: 1306 LoadStmt: [Var1982 <-- Var1951]	
   %15 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1982
   %15 = load i8*, i8** %end_instrumented, align 4 
On edge 1951-->1982
[SelectDef] On node: ValVar ID: 1951
   %end_instrumented = alloca i8*, align 4 
On edge 1952-->1951
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1951
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1952 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1969-->1951
[SelectDef] On node: ValVar ID: 1969
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1965-->1969
[SelectDef] On node: ValVar ID: 1965
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1964-->1965
[SelectDef] On node: ValVar ID: 1964
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1963-->1964
[SelectDef] On node: ValVar ID: 1963
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1963
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Checking aliasing of  with argument state_id of parse_cdata_instrumented
Checking aliasing of  with argument args_id of parse_cdata_instrumented
Def of param: GepVFGNode ID: 549 GepStmt: [Var1983 <-- Var8]	
   %16 = getelementptr inbounds [10 x i8], [10 x i8]* @parse_cdata.STARTTAG, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1983
   %16 = getelementptr inbounds [10 x i8], [10 x i8]* @parse_cdata.STARTTAG, i32 0, i32 0 
On edge 8-->1983
[SelectDef] On node: ValVar ID: 8
 @parse_cdata.STARTTAG = internal constant [10 x i8] c"<![CDATA[\00", align 1 { Glob  }
On edge 3-->8
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to fprintf inside parse_end_instrumented
 Analyzing call to state_setpos_instrumented inside parse_instruction_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of add.ptr31_instrumented with argument state of parse_instruction_instrumented
Checking aliasing of add.ptr31_instrumented with argument args of parse_instruction_instrumented
Checking aliasing of add.ptr31_instrumented with argument state_id of parse_instruction_instrumented
Checking aliasing of add.ptr31_instrumented with argument args_id of parse_instruction_instrumented
Def of param: GepVFGNode ID: 757 GepStmt: [Var1233 <-- Var1232]	
   %add.ptr31_instrumented = getelementptr inbounds i8, i8* %49, i32 2 
[SelectDef] On node: ValVar ID: 1233
   %add.ptr31_instrumented = getelementptr inbounds i8, i8* %49, i32 2 
On edge 1232-->1233
[SelectDef] On node: ValVar ID: 1232
   %49 = load i8*, i8** %quest_instrumented, align 4 
On edge 1110-->1232
[SelectDef] On node: ValVar ID: 1110
   %quest_instrumented = alloca i8*, align 4 
On edge 1111-->1110
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1110
	-  %quest_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1111 (base object)
   %quest_instrumented = alloca i8*, align 4 
On edge 1209-->1110
[SelectDef] On node: ValVar ID: 1209
   %add.ptr19_instrumented = getelementptr inbounds i8, i8* %38, i32 %40 
On edge 1205-->1209
[SelectDef] On node: ValVar ID: 1205
   %38 = load i8*, i8** %buffer17_instrumented, align 4 
On edge 1204-->1205
[SelectDef] On node: ValVar ID: 1204
   %buffer17_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %37, i32 0, i32 0 
On edge 1203-->1204
[SelectDef] On node: ValVar ID: 1203
   %37 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1203
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 2 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %38 = load i8*, i8** %buffer17_instrumented, align 4
Node:   %add.ptr19_instrumented = getelementptr inbounds i8, i8* %38, i32 %40
Node:   store i8* %add.ptr19_instrumented, i8** %quest_instrumented, align 4
Node:   %49 = load i8*, i8** %quest_instrumented, align 4
Node:   %add.ptr31_instrumented = getelementptr inbounds i8, i8* %49, i32 2
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %38 = load i8*, i8** %buffer17_instrumented, align 4
Node:   %add.ptr19_instrumented = getelementptr inbounds i8, i8* %38, i32 %40
Node:   store i8* %add.ptr19_instrumented, i8** %quest_instrumented, align 4
Node:   %49 = load i8*, i8** %quest_instrumented, align 4
Node:   %add.ptr31_instrumented = getelementptr inbounds i8, i8* %49, i32 2
Node:   %add.ptr31_instrumented = getelementptr inbounds i8, i8* %49, i32 2
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param add.ptr31_instrumented number 2 is 0 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to sxml_init_instrumented inside main
Function sxml_init_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of parser with argument argc of main
Checking aliasing of parser with argument argv of main
Def of param: AddrVFGNode ID: 153 AddrStmt: [Var371 <-- Var372]	
   %parser = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 371
   %parser = alloca %struct.sxml_t, align 4 
On edge 372-->371
[SelectDefs] Adding node: FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4  is not present in trace
  %parser = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %parser = alloca %struct.sxml_t, align 4
On Node:   %parser = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %parser = alloca %struct.sxml_t, align 4
On Node:   %parser = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param parser number 0 is 185 and has lenght 4
Parameter 1 is not a pointer
 Analyzing call to str_findstr_instrumented inside parse_comment_instrumented
Function str_findstr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Checking aliasing of  with argument state_id of parse_comment_instrumented
Checking aliasing of  with argument args_id of parse_comment_instrumented
Def of param: LoadVFGNode ID: 1278 LoadStmt: [Var1900 <-- Var1855]	
   %19 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1900
   %19 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1900
[SelectDef] On node: ValVar ID: 1855
   %start_instrumented = alloca i8*, align 4 
On edge 1856-->1855
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1855
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1867-->1855
On edge 1898-->1855
[SelectDef] On node: ValVar ID: 1898
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4 
On edge 1897-->1898
[SelectDef] On node: ValVar ID: 1897
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1897
Node 1855 already visited
[SelectDef] On node: ValVar ID: 1867
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1863-->1867
[SelectDef] On node: ValVar ID: 1863
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1862-->1863
[SelectDef] On node: ValVar ID: 1862
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1861-->1862
[SelectDef] On node: ValVar ID: 1861
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1861
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Checking aliasing of  with argument state_id of parse_comment_instrumented
Checking aliasing of  with argument args_id of parse_comment_instrumented
Def of param: LoadVFGNode ID: 1282 LoadStmt: [Var1901 <-- Var1857]	
   %20 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1901
   %20 = load i8*, i8** %end_instrumented, align 4 
On edge 1857-->1901
[SelectDef] On node: ValVar ID: 1857
   %end_instrumented = alloca i8*, align 4 
On edge 1858-->1857
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1857
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1858 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1875-->1857
[SelectDef] On node: ValVar ID: 1875
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1871-->1875
[SelectDef] On node: ValVar ID: 1871
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1870-->1871
[SelectDef] On node: ValVar ID: 1870
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1869-->1870
[SelectDef] On node: ValVar ID: 1869
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1869
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %20 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %20 = load i8*, i8** %end_instrumented, align 4
Node:   %20 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Checking aliasing of  with argument state_id of parse_comment_instrumented
Checking aliasing of  with argument args_id of parse_comment_instrumented
Def of param: GepVFGNode ID: 585 GepStmt: [Var1902 <-- Var32]	
   %21 = getelementptr inbounds [4 x i8], [4 x i8]* @parse_comment.ENDTAG, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1902
   %21 = getelementptr inbounds [4 x i8], [4 x i8]* @parse_comment.ENDTAG, i32 0, i32 0 
On edge 32-->1902
[SelectDef] On node: ValVar ID: 32
 @parse_comment.ENDTAG = internal constant [4 x i8] c"-->\00", align 1 { Glob  }
On edge 3-->32
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to printf inside print_prettyxml_instrumented
 Analyzing call to __assert_fail inside parse_instruction_instrumented
 Analyzing call to NameStartChar inside parse_attributes_instrumented
 Analyzing call to str_ltrim_instrumented inside parse_end_instrumented
Function str_ltrim_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1245 LoadStmt: [Var1810 <-- Var1735]	
   %31 = load i8*, i8** %space_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
Node 754 already visited
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
Defs of param 0 are 11
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call14_instrumented, i8** %space_instrumented, align 4
Node:   %31 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call14_instrumented, i8** %space_instrumented, align 4
Node:   %31 = load i8*, i8** %space_instrumented, align 4
Node:   %31 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1242 LoadStmt: [Var1811 <-- Var1733]	
   %32 = load i8*, i8** %gt_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1811
   %32 = load i8*, i8** %gt_instrumented, align 4 
On edge 1733-->1811
[SelectDef] On node: ValVar ID: 1733
   %gt_instrumented = alloca i8*, align 4 
On edge 1734-->1733
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1733
	-  %gt_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1734 (base object)
   %gt_instrumented = alloca i8*, align 4 
On edge 1798-->1733
[SelectDef] On node: ValVar ID: 1798
   %call9_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 62, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1798
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
Node 985 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
Defs of param 1 are 29
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call9_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 62, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call9_instrumented, i8** %gt_instrumented, align 4
Node:   %32 = load i8*, i8** %gt_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call9_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 62, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call9_instrumented, i8** %gt_instrumented, align 4
Node:   %32 = load i8*, i8** %gt_instrumented, align 4
Node:   %32 = load i8*, i8** %gt_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to str_findstr_instrumented inside parse_cdata_instrumented
Function str_findstr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Checking aliasing of  with argument state_id of parse_cdata_instrumented
Checking aliasing of  with argument args_id of parse_cdata_instrumented
Def of param: LoadVFGNode ID: 1303 LoadStmt: [Var1995 <-- Var1949]	
   %20 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1995
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1995
[SelectDef] On node: ValVar ID: 1949
   %start_instrumented = alloca i8*, align 4 
On edge 1950-->1949
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1949
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1961-->1949
On edge 1993-->1949
[SelectDef] On node: ValVar ID: 1993
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %19, i32 9 
On edge 1992-->1993
[SelectDef] On node: ValVar ID: 1992
   %19 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1992
Node 1949 already visited
[SelectDef] On node: ValVar ID: 1961
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1957-->1961
[SelectDef] On node: ValVar ID: 1957
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1956-->1957
[SelectDef] On node: ValVar ID: 1956
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1955-->1956
[SelectDef] On node: ValVar ID: 1955
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1955
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %19, i32 9
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %19, i32 9
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Checking aliasing of  with argument state_id of parse_cdata_instrumented
Checking aliasing of  with argument args_id of parse_cdata_instrumented
Def of param: LoadVFGNode ID: 1307 LoadStmt: [Var1996 <-- Var1951]	
   %21 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1996
   %21 = load i8*, i8** %end_instrumented, align 4 
On edge 1951-->1996
[SelectDef] On node: ValVar ID: 1951
   %end_instrumented = alloca i8*, align 4 
On edge 1952-->1951
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1951
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1952 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1969-->1951
[SelectDef] On node: ValVar ID: 1969
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1965-->1969
[SelectDef] On node: ValVar ID: 1965
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1964-->1965
[SelectDef] On node: ValVar ID: 1964
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1963-->1964
[SelectDef] On node: ValVar ID: 1963
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1963
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %21 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %21 = load i8*, i8** %end_instrumented, align 4
Node:   %21 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Checking aliasing of  with argument state_id of parse_cdata_instrumented
Checking aliasing of  with argument args_id of parse_cdata_instrumented
Def of param: GepVFGNode ID: 551 GepStmt: [Var1997 <-- Var12]	
   %22 = getelementptr inbounds [4 x i8], [4 x i8]* @parse_cdata.ENDTAG, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1997
   %22 = getelementptr inbounds [4 x i8], [4 x i8]* @parse_cdata.ENDTAG, i32 0, i32 0 
On edge 12-->1997
[SelectDef] On node: ValVar ID: 12
 @parse_cdata.ENDTAG = internal constant [4 x i8] c"]]>\00", align 1 { Glob  }
On edge 3-->12
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to state_setpos_instrumented inside parse_end_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of add.ptr21_instrumented with argument state of parse_end_instrumented
Checking aliasing of add.ptr21_instrumented with argument args of parse_end_instrumented
Checking aliasing of add.ptr21_instrumented with argument state_id of parse_end_instrumented
Checking aliasing of add.ptr21_instrumented with argument args_id of parse_end_instrumented
Def of param: GepVFGNode ID: 797 GepStmt: [Var1826 <-- Var1825]	
   %add.ptr21_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
[SelectDef] On node: ValVar ID: 1826
   %add.ptr21_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1825-->1826
[SelectDef] On node: ValVar ID: 1825
   %40 = load i8*, i8** %gt_instrumented, align 4 
On edge 1733-->1825
[SelectDef] On node: ValVar ID: 1733
   %gt_instrumented = alloca i8*, align 4 
On edge 1734-->1733
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1733
	-  %gt_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1734 (base object)
   %gt_instrumented = alloca i8*, align 4 
On edge 1798-->1733
[SelectDef] On node: ValVar ID: 1798
   %call9_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 62, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1798
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
Node 985 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
Defs of param 2 are 29
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call9_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 62, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call9_instrumented, i8** %gt_instrumented, align 4
Node:   %40 = load i8*, i8** %gt_instrumented, align 4
Node:   %add.ptr21_instrumented = getelementptr inbounds i8, i8* %40, i32 1
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call9_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 62, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call9_instrumented, i8** %gt_instrumented, align 4
Node:   %40 = load i8*, i8** %gt_instrumented, align 4
Node:   %add.ptr21_instrumented = getelementptr inbounds i8, i8* %40, i32 1
Node:   %add.ptr21_instrumented = getelementptr inbounds i8, i8* %40, i32 1
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param add.ptr21_instrumented number 2 is 0 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to printf inside parse_start_instrumented
 Analyzing call to printf inside parse_comment_instrumented
 Analyzing call to memchr inside str_findstr_instrumented
 Analyzing call to printf inside main
 Analyzing call to str_ltrim_instrumented inside parse_attributes_instrumented
Function str_ltrim_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1398 LoadStmt: [Var2441 <-- Var2403]	
   %12 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
Defs of param 0 are 5
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %12 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %12 = load i8*, i8** %start_instrumented, align 4
Node:   %12 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1399 LoadStmt: [Var2442 <-- Var2405]	
   %13 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2442
   %13 = load i8*, i8** %end_instrumented, align 4 
On edge 2405-->2442
[SelectDef] On node: ValVar ID: 2405
   %end_instrumented = alloca i8*, align 4 
On edge 2406-->2405
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2405
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2406 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 2439-->2405
[SelectDef] On node: ValVar ID: 2439
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 2435-->2439
[SelectDef] On node: ValVar ID: 2435
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 2434-->2435
[SelectDef] On node: ValVar ID: 2434
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 2433-->2434
[SelectDef] On node: ValVar ID: 2433
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2433
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
Defs of param 1 are 5
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %13 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %13 = load i8*, i8** %end_instrumented, align 4
Node:   %13 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to printf inside parse_instruction_instrumented
 Analyzing call to state_setpos_instrumented inside parse_comment_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of add.ptr12_instrumented with argument state of parse_comment_instrumented
Checking aliasing of add.ptr12_instrumented with argument args of parse_comment_instrumented
Checking aliasing of add.ptr12_instrumented with argument state_id of parse_comment_instrumented
Checking aliasing of add.ptr12_instrumented with argument args_id of parse_comment_instrumented
Def of param: GepVFGNode ID: 805 GepStmt: [Var1920 <-- Var1919]	
   %add.ptr12_instrumented = getelementptr inbounds i8, i8* %30, i32 3 
[SelectDef] On node: ValVar ID: 1920
   %add.ptr12_instrumented = getelementptr inbounds i8, i8* %30, i32 3 
On edge 1919-->1920
[SelectDef] On node: ValVar ID: 1919
   %30 = load i8*, i8** %dash_instrumented, align 4 
On edge 1853-->1919
[SelectDef] On node: ValVar ID: 1853
   %dash_instrumented = alloca i8*, align 4 
On edge 1854-->1853
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1853
	-  %dash_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1854 (base object)
   %dash_instrumented = alloca i8*, align 4 
On edge 1903-->1853
[SelectDef] On node: ValVar ID: 1903
   %call7_instrumented = call i8* @str_findstr_instrumented(i8* %19, i8* %20, i8* %21, i32 0, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2091-->1903
[SelectDef] On node: RetPN ID: 2091 unique return node for function str_findstr_instrumented
On edge 2194-->2091
[SelectDef] On node: ValVar ID: 2194
   %31 = load i8*, i8** %retval_instrumented, align 4 
On edge 2103-->2194
[SelectDef] On node: ValVar ID: 2103
   %retval_instrumented = alloca i8*, align 4 
On edge 2104-->2103
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2103
	-  %retval_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2104 (base object)
   %retval_instrumented = alloca i8*, align 4 
On edge 2183-->2103
On edge 2191-->2103
[SelectDef] On node: ValVar ID: 2191
   %30 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2107-->2191
[SelectDef] On node: ValVar ID: 2107
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2108-->2107
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2107
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2108 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2093-->2107
[SelectDef] On node: ValVar ID: 2093
 i8* %end { 1st arg str_findstr_instrumented  }
On edge 1307-->2093
On edge 1901-->2093
On edge 1996-->2093
[SelectDef] On node: ValVar ID: 1996
   %21 = load i8*, i8** %end_instrumented, align 4 
On edge 1951-->1996
[SelectDef] On node: ValVar ID: 1951
   %end_instrumented = alloca i8*, align 4 
On edge 1952-->1951
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1951
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1952 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1969-->1951
[SelectDef] On node: ValVar ID: 1969
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1965-->1969
[SelectDef] On node: ValVar ID: 1965
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1964-->1965
[SelectDef] On node: ValVar ID: 1964
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1963-->1964
[SelectDef] On node: ValVar ID: 1963
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1963
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1901
   %20 = load i8*, i8** %end_instrumented, align 4 
On edge 1857-->1901
[SelectDef] On node: ValVar ID: 1857
   %end_instrumented = alloca i8*, align 4 
On edge 1858-->1857
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1857
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1858 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1875-->1857
[SelectDef] On node: ValVar ID: 1875
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1871-->1875
[SelectDef] On node: ValVar ID: 1871
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1870-->1871
[SelectDef] On node: ValVar ID: 1870
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1869-->1870
[SelectDef] On node: ValVar ID: 1869
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1869
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
Node 754 already visited
[SelectDef] On node: ValVar ID: 1307
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1264-->1307
[SelectDef] On node: ValVar ID: 1264
   %end_instrumented = alloca i8*, align 4 
On edge 1265-->1264
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1264
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1265 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1282-->1264
[SelectDef] On node: ValVar ID: 1282
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1278-->1282
[SelectDef] On node: ValVar ID: 1278
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1277-->1278
[SelectDef] On node: ValVar ID: 1277
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1276-->1277
[SelectDef] On node: ValVar ID: 1276
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1276
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
Node 754 already visited
[SelectDef] On node: ValVar ID: 2183
   %28 = load i8*, i8** %it_instrumented, align 4 
On edge 2115-->2183
[SelectDef] On node: ValVar ID: 2115
   %it_instrumented = alloca i8*, align 4 
On edge 2116-->2115
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2115
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2116 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2170-->2115
[SelectDef] On node: ValVar ID: 2170
   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7 
On edge 2160-->2170
[SelectDef] On node: ValVar ID: 2160
   %19 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2105-->2160
[SelectDef] On node: ValVar ID: 2105
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2106-->2105
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2105
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2106 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2092-->2105
On edge 2188-->2105
[SelectDef] On node: ValVar ID: 2188
   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1 
On edge 2187-->2188
[SelectDef] On node: ValVar ID: 2187
   %29 = load i8*, i8** %it_instrumented, align 4 
On edge 2115-->2187
Node 2115 already visited
[SelectDef] On node: ValVar ID: 2092
 i8* %start { 0th arg str_findstr_instrumented  }
On edge 1306-->2092
On edge 1900-->2092
On edge 1995-->2092
[SelectDef] On node: ValVar ID: 1995
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1995
[SelectDef] On node: ValVar ID: 1949
   %start_instrumented = alloca i8*, align 4 
On edge 1950-->1949
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1949
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1961-->1949
On edge 1993-->1949
[SelectDef] On node: ValVar ID: 1993
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %19, i32 9 
On edge 1992-->1993
[SelectDef] On node: ValVar ID: 1992
   %19 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1992
Node 1949 already visited
[SelectDef] On node: ValVar ID: 1961
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1957-->1961
[SelectDef] On node: ValVar ID: 1957
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1956-->1957
[SelectDef] On node: ValVar ID: 1956
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1955-->1956
[SelectDef] On node: ValVar ID: 1955
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1955
Node 1945 already visited
[SelectDef] On node: ValVar ID: 1900
   %19 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1900
[SelectDef] On node: ValVar ID: 1855
   %start_instrumented = alloca i8*, align 4 
On edge 1856-->1855
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1855
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1867-->1855
On edge 1898-->1855
[SelectDef] On node: ValVar ID: 1898
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4 
On edge 1897-->1898
[SelectDef] On node: ValVar ID: 1897
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1897
Node 1855 already visited
[SelectDef] On node: ValVar ID: 1867
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1863-->1867
[SelectDef] On node: ValVar ID: 1863
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1862-->1863
[SelectDef] On node: ValVar ID: 1862
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1861-->1862
[SelectDef] On node: ValVar ID: 1861
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1861
Node 1851 already visited
[SelectDef] On node: ValVar ID: 1306
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1306
[SelectDef] On node: ValVar ID: 1262
   %start_instrumented = alloca i8*, align 4 
On edge 1263-->1262
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1262
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1274-->1262
On edge 1304-->1262
[SelectDef] On node: ValVar ID: 1304
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1303-->1304
[SelectDef] On node: ValVar ID: 1303
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1303
Node 1262 already visited
[SelectDef] On node: ValVar ID: 1274
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1270-->1274
[SelectDef] On node: ValVar ID: 1270
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1269-->1270
[SelectDef] On node: ValVar ID: 1269
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1268-->1269
[SelectDef] On node: ValVar ID: 1268
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1268
Node 1258 already visited
Defs of param 2 are 15
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call7_instrumented = call i8* @str_findstr_instrumented(i8* %19, i8* %20, i8* %21, i32 0, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call7_instrumented, i8** %dash_instrumented, align 4
Node:   %30 = load i8*, i8** %dash_instrumented, align 4
Node:   %add.ptr12_instrumented = getelementptr inbounds i8, i8* %30, i32 3
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call7_instrumented = call i8* @str_findstr_instrumented(i8* %19, i8* %20, i8* %21, i32 0, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call7_instrumented, i8** %dash_instrumented, align 4
Node:   %30 = load i8*, i8** %dash_instrumented, align 4
Node:   %add.ptr12_instrumented = getelementptr inbounds i8, i8* %30, i32 3
Node:   %add.ptr12_instrumented = getelementptr inbounds i8, i8* %30, i32 3
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param add.ptr12_instrumented number 2 is 0 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to state_pushtoken_instrumented inside parse_cdata_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Checking aliasing of  with argument state_id of parse_cdata_instrumented
Checking aliasing of  with argument args_id of parse_cdata_instrumented
Def of param: LoadVFGNode ID: 1304 LoadStmt: [Var2008 <-- Var1949]	
   %27 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2008
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->2008
[SelectDef] On node: ValVar ID: 1949
   %start_instrumented = alloca i8*, align 4 
On edge 1950-->1949
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1949
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1961-->1949
On edge 1993-->1949
[SelectDef] On node: ValVar ID: 1993
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %19, i32 9 
On edge 1992-->1993
[SelectDef] On node: ValVar ID: 1992
   %19 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1992
Node 1949 already visited
[SelectDef] On node: ValVar ID: 1961
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1957-->1961
[SelectDef] On node: ValVar ID: 1957
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1956-->1957
[SelectDef] On node: ValVar ID: 1956
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1955-->1956
[SelectDef] On node: ValVar ID: 1955
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1955
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 3 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %19, i32 9
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %27 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %19, i32 9
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %27 = load i8*, i8** %start_instrumented, align 4
Node:   %27 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 0 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Checking aliasing of  with argument state_id of parse_cdata_instrumented
Checking aliasing of  with argument args_id of parse_cdata_instrumented
Def of param: LoadVFGNode ID: 1298 LoadStmt: [Var2009 <-- Var1947]	
   %28 = load i8*, i8** %bracket_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2009
   %28 = load i8*, i8** %bracket_instrumented, align 4 
On edge 1947-->2009
[SelectDef] On node: ValVar ID: 1947
   %bracket_instrumented = alloca i8*, align 4 
On edge 1948-->1947
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1947
	-  %bracket_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1948 (base object)
   %bracket_instrumented = alloca i8*, align 4 
On edge 1998-->1947
[SelectDef] On node: ValVar ID: 1998
   %call7_instrumented = call i8* @str_findstr_instrumented(i8* %20, i8* %21, i8* %22, i32 0, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2091-->1998
[SelectDef] On node: RetPN ID: 2091 unique return node for function str_findstr_instrumented
On edge 2194-->2091
[SelectDef] On node: ValVar ID: 2194
   %31 = load i8*, i8** %retval_instrumented, align 4 
On edge 2103-->2194
[SelectDef] On node: ValVar ID: 2103
   %retval_instrumented = alloca i8*, align 4 
On edge 2104-->2103
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2103
	-  %retval_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2104 (base object)
   %retval_instrumented = alloca i8*, align 4 
On edge 2183-->2103
On edge 2191-->2103
[SelectDef] On node: ValVar ID: 2191
   %30 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2107-->2191
[SelectDef] On node: ValVar ID: 2107
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2108-->2107
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2107
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2108 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2093-->2107
[SelectDef] On node: ValVar ID: 2093
 i8* %end { 1st arg str_findstr_instrumented  }
On edge 1307-->2093
On edge 1901-->2093
On edge 1996-->2093
[SelectDef] On node: ValVar ID: 1996
   %21 = load i8*, i8** %end_instrumented, align 4 
On edge 1951-->1996
[SelectDef] On node: ValVar ID: 1951
   %end_instrumented = alloca i8*, align 4 
On edge 1952-->1951
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1951
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1952 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1969-->1951
[SelectDef] On node: ValVar ID: 1969
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1965-->1969
[SelectDef] On node: ValVar ID: 1965
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1964-->1965
[SelectDef] On node: ValVar ID: 1964
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1963-->1964
[SelectDef] On node: ValVar ID: 1963
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1963
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1901
   %20 = load i8*, i8** %end_instrumented, align 4 
On edge 1857-->1901
[SelectDef] On node: ValVar ID: 1857
   %end_instrumented = alloca i8*, align 4 
On edge 1858-->1857
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1857
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1858 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1875-->1857
[SelectDef] On node: ValVar ID: 1875
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1871-->1875
[SelectDef] On node: ValVar ID: 1871
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1870-->1871
[SelectDef] On node: ValVar ID: 1870
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1869-->1870
[SelectDef] On node: ValVar ID: 1869
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1869
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
Node 754 already visited
[SelectDef] On node: ValVar ID: 1307
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1264-->1307
[SelectDef] On node: ValVar ID: 1264
   %end_instrumented = alloca i8*, align 4 
On edge 1265-->1264
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1264
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1265 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1282-->1264
[SelectDef] On node: ValVar ID: 1282
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1278-->1282
[SelectDef] On node: ValVar ID: 1278
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1277-->1278
[SelectDef] On node: ValVar ID: 1277
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1276-->1277
[SelectDef] On node: ValVar ID: 1276
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1276
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
Node 754 already visited
[SelectDef] On node: ValVar ID: 2183
   %28 = load i8*, i8** %it_instrumented, align 4 
On edge 2115-->2183
[SelectDef] On node: ValVar ID: 2115
   %it_instrumented = alloca i8*, align 4 
On edge 2116-->2115
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2115
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2116 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2170-->2115
[SelectDef] On node: ValVar ID: 2170
   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7 
On edge 2160-->2170
[SelectDef] On node: ValVar ID: 2160
   %19 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2105-->2160
[SelectDef] On node: ValVar ID: 2105
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2106-->2105
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2105
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2106 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2092-->2105
On edge 2188-->2105
[SelectDef] On node: ValVar ID: 2188
   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1 
On edge 2187-->2188
[SelectDef] On node: ValVar ID: 2187
   %29 = load i8*, i8** %it_instrumented, align 4 
On edge 2115-->2187
Node 2115 already visited
[SelectDef] On node: ValVar ID: 2092
 i8* %start { 0th arg str_findstr_instrumented  }
On edge 1306-->2092
On edge 1900-->2092
On edge 1995-->2092
[SelectDef] On node: ValVar ID: 1995
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1995
[SelectDef] On node: ValVar ID: 1949
   %start_instrumented = alloca i8*, align 4 
On edge 1950-->1949
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1949
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1961-->1949
On edge 1993-->1949
[SelectDef] On node: ValVar ID: 1993
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %19, i32 9 
On edge 1992-->1993
[SelectDef] On node: ValVar ID: 1992
   %19 = load i8*, i8** %start_instrumented, align 4 
On edge 1949-->1992
Node 1949 already visited
[SelectDef] On node: ValVar ID: 1961
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1957-->1961
[SelectDef] On node: ValVar ID: 1957
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1956-->1957
[SelectDef] On node: ValVar ID: 1956
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1955-->1956
[SelectDef] On node: ValVar ID: 1955
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->1955
Node 1945 already visited
[SelectDef] On node: ValVar ID: 1900
   %19 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1900
[SelectDef] On node: ValVar ID: 1855
   %start_instrumented = alloca i8*, align 4 
On edge 1856-->1855
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1855
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1867-->1855
On edge 1898-->1855
[SelectDef] On node: ValVar ID: 1898
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4 
On edge 1897-->1898
[SelectDef] On node: ValVar ID: 1897
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1855-->1897
Node 1855 already visited
[SelectDef] On node: ValVar ID: 1867
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1863-->1867
[SelectDef] On node: ValVar ID: 1863
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1862-->1863
[SelectDef] On node: ValVar ID: 1862
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1861-->1862
[SelectDef] On node: ValVar ID: 1861
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1861
Node 1851 already visited
[SelectDef] On node: ValVar ID: 1306
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1306
[SelectDef] On node: ValVar ID: 1262
   %start_instrumented = alloca i8*, align 4 
On edge 1263-->1262
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1262
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1274-->1262
On edge 1304-->1262
[SelectDef] On node: ValVar ID: 1304
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1303-->1304
[SelectDef] On node: ValVar ID: 1303
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1262-->1303
Node 1262 already visited
[SelectDef] On node: ValVar ID: 1274
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1270-->1274
[SelectDef] On node: ValVar ID: 1270
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1269-->1270
[SelectDef] On node: ValVar ID: 1269
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1268-->1269
[SelectDef] On node: ValVar ID: 1268
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1268
Node 1258 already visited
Defs of param 4 are 15
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call7_instrumented = call i8* @str_findstr_instrumented(i8* %20, i8* %21, i8* %22, i32 0, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call7_instrumented, i8** %bracket_instrumented, align 4
Node:   %28 = load i8*, i8** %bracket_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %18, i32 4
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node:   %19 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.19, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call7_instrumented = call i8* @str_findstr_instrumented(i8* %20, i8* %21, i8* %22, i32 0, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call7_instrumented, i8** %bracket_instrumented, align 4
Node:   %28 = load i8*, i8** %bracket_instrumented, align 4
Node:   %28 = load i8*, i8** %bracket_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 0 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to printf inside print_tokenvalue_instrumented
 Analyzing call to __assert_fail inside str_startswith_instrumented
 Analyzing call to __assert_fail inside parse_attributes_instrumented
 Analyzing call to parse_end_instrumented inside sxml_parse_instrumented
Function parse_end_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 187 AddrStmt: [Var750 <-- Var751]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 187 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 189 AddrStmt: [Var754 <-- Var755]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 197 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to str_rtrim_instrumented inside parse_attributes_instrumented
Function str_rtrim_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1411 LoadStmt: [Var2487 <-- Var2407]	
   %29 = load i8*, i8** %name_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2487
   %29 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2487
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
Node 2407 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
Node 754 already visited
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
Node 985 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
Node 2401 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2443
Node 985 already visited
Defs of param 0 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %29 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %29 = load i8*, i8** %name_instrumented, align 4
Node:   %29 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1418 LoadStmt: [Var2488 <-- Var2411]	
   %30 = load i8*, i8** %eq_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2488
   %30 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2488
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
Node 2411 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
Node 985 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
Defs of param 1 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Node:   %30 = load i8*, i8** %eq_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Node:   %30 = load i8*, i8** %eq_instrumented, align 4
Node:   %30 = load i8*, i8** %eq_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to str_startswith_instrumented inside parse_instruction_instrumented
Function str_startswith_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1081 LoadStmt: [Var1220 <-- Var1110]	
   %43 = load i8*, i8** %quest_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1220
   %43 = load i8*, i8** %quest_instrumented, align 4 
On edge 1110-->1220
[SelectDef] On node: ValVar ID: 1110
   %quest_instrumented = alloca i8*, align 4 
On edge 1111-->1110
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1110
	-  %quest_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1111 (base object)
   %quest_instrumented = alloca i8*, align 4 
On edge 1209-->1110
[SelectDef] On node: ValVar ID: 1209
   %add.ptr19_instrumented = getelementptr inbounds i8, i8* %38, i32 %40 
On edge 1205-->1209
[SelectDef] On node: ValVar ID: 1205
   %38 = load i8*, i8** %buffer17_instrumented, align 4 
On edge 1204-->1205
[SelectDef] On node: ValVar ID: 1204
   %buffer17_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %37, i32 0, i32 0 
On edge 1203-->1204
[SelectDef] On node: ValVar ID: 1203
   %37 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1203
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %38 = load i8*, i8** %buffer17_instrumented, align 4
Node:   %add.ptr19_instrumented = getelementptr inbounds i8, i8* %38, i32 %40
Node:   store i8* %add.ptr19_instrumented, i8** %quest_instrumented, align 4
Node:   %43 = load i8*, i8** %quest_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %38 = load i8*, i8** %buffer17_instrumented, align 4
Node:   %add.ptr19_instrumented = getelementptr inbounds i8, i8* %38, i32 %40
Node:   store i8* %add.ptr19_instrumented, i8** %quest_instrumented, align 4
Node:   %43 = load i8*, i8** %quest_instrumented, align 4
Node:   %43 = load i8*, i8** %quest_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1096 LoadStmt: [Var1221 <-- Var1116]	
   %44 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1221
   %44 = load i8*, i8** %end_instrumented, align 4 
On edge 1116-->1221
[SelectDef] On node: ValVar ID: 1116
   %end_instrumented = alloca i8*, align 4 
On edge 1117-->1116
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1116
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1117 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1134-->1116
[SelectDef] On node: ValVar ID: 1134
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1130-->1134
[SelectDef] On node: ValVar ID: 1130
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1129-->1130
[SelectDef] On node: ValVar ID: 1129
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1128-->1129
[SelectDef] On node: ValVar ID: 1128
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1128
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %44 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %44 = load i8*, i8** %end_instrumented, align 4
Node:   %44 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: GepVFGNode ID: 611 GepStmt: [Var1222 <-- Var76]	
   %45 = getelementptr inbounds [3 x i8], [3 x i8]* @parse_instruction.ENDTAG, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1222
   %45 = getelementptr inbounds [3 x i8], [3 x i8]* @parse_instruction.ENDTAG, i32 0, i32 0 
On edge 76-->1222
[SelectDef] On node: ValVar ID: 76
 @parse_instruction.ENDTAG = internal constant [3 x i8] c"?>\00", align 1 { Glob  }
On edge 3-->76
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to __assert_fail inside str_findchr_instrumented
 Analyzing call to __assert_fail inside parse_characters_instrumented
 Analyzing call to strlen inside str_startswith_instrumented
 Analyzing call to memcmp inside str_startswith_instrumented
 Analyzing call to __assert_fail inside str_find_notalnum_instrumented
 Analyzing call to state_pushtoken_instrumented inside parse_attributes_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1412 LoadStmt: [Var2495 <-- Var2407]	
   %33 = load i8*, i8** %name_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2495
   %33 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2495
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
Node 2407 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
Node 754 already visited
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
Node 985 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
Node 2401 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2443
Node 985 already visited
Defs of param 3 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %33 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %33 = load i8*, i8** %name_instrumented, align 4
Node:   %33 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 0 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1420 LoadStmt: [Var2496 <-- Var2413]	
   %34 = load i8*, i8** %space_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2496
   %34 = load i8*, i8** %space_instrumented, align 4 
On edge 2413-->2496
[SelectDef] On node: ValVar ID: 2413
   %space_instrumented = alloca i8*, align 4 
On edge 2414-->2413
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2413
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2414 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 2489-->2413
[SelectDef] On node: ValVar ID: 2489
   %call11_instrumented = call i8* @str_rtrim_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2595-->2489
[SelectDef] On node: RetPN ID: 2595 unique return node for function str_rtrim_instrumented
On edge 2658-->2595
[SelectDef] On node: ValVar ID: 2658
   %18 = load i8*, i8** %retval_instrumented, align 4 
On edge 2605-->2658
[SelectDef] On node: ValVar ID: 2605
   %retval_instrumented = alloca i8*, align 4 
On edge 2606-->2605
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2605
	-  %retval_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2606 (base object)
   %retval_instrumented = alloca i8*, align 4 
On edge 2646-->2605
On edge 2655-->2605
[SelectDef] On node: ValVar ID: 2655
   %17 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2607-->2655
[SelectDef] On node: ValVar ID: 2607
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2608-->2607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2607
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2608 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2596-->2607
[SelectDef] On node: ValVar ID: 2596
 i8* %start { 0th arg str_rtrim_instrumented  }
On edge 2487-->2596
[SelectDef] On node: ValVar ID: 2487
   %29 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2487
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
Node 2407 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
Node 754 already visited
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
Node 985 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
Node 2401 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 2646
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2611-->2646
[SelectDef] On node: ValVar ID: 2611
   %it_instrumented = alloca i8*, align 4 
On edge 2612-->2611
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2611
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2612 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2629-->2611
On edge 2652-->2611
[SelectDef] On node: ValVar ID: 2652
   %16 = load i8*, i8** %prev_instrumented, align 4 
On edge 2613-->2652
[SelectDef] On node: ValVar ID: 2613
   %prev_instrumented = alloca i8*, align 4 
On edge 2614-->2613
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2613
	-  %prev_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2614 (base object)
   %prev_instrumented = alloca i8*, align 4 
On edge 2638-->2613
[SelectDef] On node: ValVar ID: 2638
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %12, i32 -1 
On edge 2637-->2638
[SelectDef] On node: ValVar ID: 2637
   %12 = load i8*, i8** %it_instrumented, align 4 
On edge 2611-->2637
Node 2611 already visited
[SelectDef] On node: ValVar ID: 2629
   %9 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2609-->2629
[SelectDef] On node: ValVar ID: 2609
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2610-->2609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2609
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2610 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2597-->2609
[SelectDef] On node: ValVar ID: 2597
 i8* %end { 1st arg str_rtrim_instrumented  }
On edge 2488-->2597
[SelectDef] On node: ValVar ID: 2488
   %30 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2488
Node 2411 already visited
Defs of param 4 are 34
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Node:   %30 = load i8*, i8** %eq_instrumented, align 4
Node:   %30 = load i8*, i8** %eq_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %end.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %15 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %15, i8** %retval_instrumented, align 4
Node:   %18 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_rtrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  %prev_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_rtrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 221, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %start.addr_instrumented, align 4
  %11 = load i8*, i8** %it_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %12, i32 -1
  store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4
  %13 = load i8*, i8** %prev_instrumented, align 4
  %14 = load i8, i8* %13, align 1
  %conv_instrumented = zext i8 %14 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br i1 %tobool_instrumented, label %if.end3_instrumented, label %if.then2_instrumented

if.then2_instrumented:                            ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  store i8* %15, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end3_instrumented:                             ; preds = %for.body_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %if.end3_instrumented
  %16 = load i8*, i8** %prev_instrumented, align 4
  store i8* %16, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %for.cond_instrumented
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %17, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %for.end_instrumented, %if.then2_instrumented
  %18 = load i8*, i8** %retval_instrumented, align 4
  %19 = load i16, i16* @zbouncer_recursion_counter, align 2
  %20 = sext i16 %19 to i32
  %21 = add i32 %20, -1
  %22 = trunc i32 %21 to i16
  store i16 %22, i16* @zbouncer_recursion_counter, align 2
  ret i8* %18
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_rtrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  %prev_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_rtrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 221, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %start.addr_instrumented, align 4
  %11 = load i8*, i8** %it_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %12, i32 -1
  store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4
  %13 = load i8*, i8** %prev_instrumented, align 4
  %14 = load i8, i8* %13, align 1
  %conv_instrumented = zext i8 %14 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br i1 %tobool_instrumented, label %if.end3_instrumented, label %if.then2_instrumented

if.then2_instrumented:                            ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  store i8* %15, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end3_instrumented:                             ; preds = %for.body_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %if.end3_instrumented
  %16 = load i8*, i8** %prev_instrumented, align 4
  store i8* %16, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %for.cond_instrumented
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %17, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %for.end_instrumented, %if.then2_instrumented
  %18 = load i8*, i8** %retval_instrumented, align 4
  %19 = load i16, i16* @zbouncer_recursion_counter, align 2
  %20 = sext i16 %19 to i32
  %21 = add i32 %20, -1
  %22 = trunc i32 %21 to i16
  store i16 %22, i16* @zbouncer_recursion_counter, align 2
  ret i8* %18
}

Node:   %call11_instrumented = call i8* @str_rtrim_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Node:   %34 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Node:   %30 = load i8*, i8** %eq_instrumented, align 4
Node:   %30 = load i8*, i8** %eq_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %end.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %15 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %15, i8** %retval_instrumented, align 4
Node:   %18 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_rtrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  %prev_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_rtrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 221, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %start.addr_instrumented, align 4
  %11 = load i8*, i8** %it_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %12, i32 -1
  store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4
  %13 = load i8*, i8** %prev_instrumented, align 4
  %14 = load i8, i8* %13, align 1
  %conv_instrumented = zext i8 %14 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br i1 %tobool_instrumented, label %if.end3_instrumented, label %if.then2_instrumented

if.then2_instrumented:                            ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  store i8* %15, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end3_instrumented:                             ; preds = %for.body_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %if.end3_instrumented
  %16 = load i8*, i8** %prev_instrumented, align 4
  store i8* %16, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %for.cond_instrumented
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %17, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %for.end_instrumented, %if.then2_instrumented
  %18 = load i8*, i8** %retval_instrumented, align 4
  %19 = load i16, i16* @zbouncer_recursion_counter, align 2
  %20 = sext i16 %19 to i32
  %21 = add i32 %20, -1
  %22 = trunc i32 %21 to i16
  store i16 %22, i16* @zbouncer_recursion_counter, align 2
  ret i8* %18
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_rtrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  %prev_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_rtrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 221, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %start.addr_instrumented, align 4
  %11 = load i8*, i8** %it_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %12, i32 -1
  store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4
  %13 = load i8*, i8** %prev_instrumented, align 4
  %14 = load i8, i8* %13, align 1
  %conv_instrumented = zext i8 %14 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br i1 %tobool_instrumented, label %if.end3_instrumented, label %if.then2_instrumented

if.then2_instrumented:                            ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  store i8* %15, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end3_instrumented:                             ; preds = %for.body_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %if.end3_instrumented
  %16 = load i8*, i8** %prev_instrumented, align 4
  store i8* %16, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %for.cond_instrumented
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %17, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %for.end_instrumented, %if.then2_instrumented
  %18 = load i8*, i8** %retval_instrumented, align 4
  %19 = load i16, i16* @zbouncer_recursion_counter, align 2
  %20 = sext i16 %19 to i32
  %21 = add i32 %20, -1
  %22 = trunc i32 %21 to i16
  store i16 %22, i16* @zbouncer_recursion_counter, align 2
  ret i8* %18
}

Node:   %call11_instrumented = call i8* @str_rtrim_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Node:   %34 = load i8*, i8** %space_instrumented, align 4
Node:   %34 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 0 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to str_ltrim_instrumented inside parse_attributes_instrumented
Function str_ltrim_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of add.ptr13_instrumented with argument state of parse_attributes_instrumented
Checking aliasing of add.ptr13_instrumented with argument args of parse_attributes_instrumented
Checking aliasing of add.ptr13_instrumented with argument state_id of parse_attributes_instrumented
Checking aliasing of add.ptr13_instrumented with argument args_id of parse_attributes_instrumented
Def of param: GepVFGNode ID: 839 GepStmt: [Var2499 <-- Var2498]	
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 985-->2501
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
Node 2499 already visited
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
Node 985 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
Defs of param 0 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Node:   %35 = load i8*, i8** %eq_instrumented, align 4
Node:   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Node:   %35 = load i8*, i8** %eq_instrumented, align 4
Node:   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1
Node:   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param add.ptr13_instrumented number 0 is 0 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1403 LoadStmt: [Var2500 <-- Var2405]	
   %36 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2500
   %36 = load i8*, i8** %end_instrumented, align 4 
On edge 2405-->2500
[SelectDef] On node: ValVar ID: 2405
   %end_instrumented = alloca i8*, align 4 
On edge 2406-->2405
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2405
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2406 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 2439-->2405
[SelectDef] On node: ValVar ID: 2439
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 2435-->2439
[SelectDef] On node: ValVar ID: 2435
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 2434-->2435
[SelectDef] On node: ValVar ID: 2434
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 2433-->2434
[SelectDef] On node: ValVar ID: 2433
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2433
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
Defs of param 1 are 5
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %36 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %36 = load i8*, i8** %end_instrumented, align 4
Node:   %36 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 0 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to printf inside parse_attributes_instrumented
 Analyzing call to state_setpos_instrumented inside parse_attributes_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1430 LoadStmt: [Var2545 <-- Var2417]	
   %53 = load i8*, i8** %value_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2545
   %53 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2545
[SelectDef] On node: ValVar ID: 2417
   %value_instrumented = alloca i8*, align 4 
On edge 2418-->2417
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2417
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2528-->2417
[SelectDef] On node: ValVar ID: 2528
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1 
On edge 2527-->2528
[SelectDef] On node: ValVar ID: 2527
   %44 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2527
[SelectDef] On node: ValVar ID: 2415
   %quot_instrumented = alloca i8*, align 4 
On edge 2416-->2415
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2415
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2501-->2415
On edge 2535-->2415
[SelectDef] On node: ValVar ID: 2535
   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2535
[SelectDef] On node: RetPN ID: 1508 unique return node for function str_findchr_instrumented
On edge 1575-->1508
[SelectDef] On node: ValVar ID: 1575
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1570-->1575
[SelectDef] On node: ValVar ID: 1570
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1525-->1570
[SelectDef] On node: ValVar ID: 1525
   %it_instrumented = alloca i8*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1565-->1525
[SelectDef] On node: ValVar ID: 1565
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1558-->1565
[SelectDef] On node: ValVar ID: 1558
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1519-->1558
[SelectDef] On node: ValVar ID: 1519
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1520-->1519
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1519
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1509-->1519
[SelectDef] On node: ValVar ID: 1509
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 889-->1509
On edge 1622-->1509
On edge 1680-->1509
On edge 1796-->1509
On edge 2475-->1509
On edge 2530-->1509
[SelectDef] On node: ValVar ID: 2530
   %45 = load i8*, i8** %value_instrumented, align 4 
On edge 2417-->2530
Node 2417 already visited
[SelectDef] On node: ValVar ID: 2475
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2407-->2475
[SelectDef] On node: ValVar ID: 2407
   %name_instrumented = alloca i8*, align 4 
On edge 2408-->2407
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2407
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2443-->2407
On edge 2563-->2407
[SelectDef] On node: ValVar ID: 2563
   %call43_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr42_instrumented, i8* %60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2563
[SelectDef] On node: RetPN ID: 985 unique return node for function str_ltrim_instrumented
On edge 1038-->985
[SelectDef] On node: ValVar ID: 1038
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1038
[SelectDef] On node: ValVar ID: 999
   %it_instrumented = alloca i8*, align 4 
On edge 1000-->999
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 999
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1015-->999
On edge 1035-->999
[SelectDef] On node: ValVar ID: 1035
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 1034-->1035
[SelectDef] On node: ValVar ID: 1034
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 999-->1034
Node 999 already visited
[SelectDef] On node: ValVar ID: 1015
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 995-->1015
[SelectDef] On node: ValVar ID: 995
   %start.addr_instrumented = alloca i8*, align 4 
On edge 996-->995
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 995
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 986-->995
[SelectDef] On node: ValVar ID: 986
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 809-->986
On edge 1810-->986
On edge 2441-->986
On edge 2499-->986
On edge 2561-->986
[SelectDef] On node: ValVar ID: 2561
   %add.ptr42_instrumented = getelementptr inbounds i8, i8* %59, i32 1 
On edge 2560-->2561
[SelectDef] On node: ValVar ID: 2560
   %59 = load i8*, i8** %quot_instrumented, align 4 
On edge 2415-->2560
Node 2415 already visited
[SelectDef] On node: ValVar ID: 2499
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2498-->2499
[SelectDef] On node: ValVar ID: 2498
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2411-->2498
[SelectDef] On node: ValVar ID: 2411
   %eq_instrumented = alloca i8*, align 4 
On edge 2412-->2411
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2411
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2477-->2411
[SelectDef] On node: ValVar ID: 2477
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->2477
Node 1508 already visited
[SelectDef] On node: ValVar ID: 2441
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2403-->2441
[SelectDef] On node: ValVar ID: 2403
   %start_instrumented = alloca i8*, align 4 
On edge 2404-->2403
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2403
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2431-->2403
[SelectDef] On node: ValVar ID: 2431
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2427-->2431
[SelectDef] On node: ValVar ID: 2427
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2426-->2427
[SelectDef] On node: ValVar ID: 2426
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2425-->2426
[SelectDef] On node: ValVar ID: 2425
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2425
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 1810
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1735-->1810
[SelectDef] On node: ValVar ID: 1735
   %space_instrumented = alloca i8*, align 4 
On edge 1736-->1735
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1735
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1808-->1735
[SelectDef] On node: ValVar ID: 1808
   %call14_instrumented = call i8* @str_find_notalnum_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2327-->1808
[SelectDef] On node: RetPN ID: 2327 unique return node for function str_find_notalnum_instrumented
On edge 2380-->2327
[SelectDef] On node: ValVar ID: 2380
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2380
[SelectDef] On node: ValVar ID: 2341
   %it_instrumented = alloca i8*, align 4 
On edge 2342-->2341
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2341
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2357-->2341
On edge 2377-->2341
[SelectDef] On node: ValVar ID: 2377
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2376-->2377
[SelectDef] On node: ValVar ID: 2376
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2341-->2376
Node 2341 already visited
[SelectDef] On node: ValVar ID: 2357
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2337-->2357
[SelectDef] On node: ValVar ID: 2337
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2338-->2337
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2337
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2328-->2337
[SelectDef] On node: ValVar ID: 2328
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1167-->2328
On edge 1421-->2328
On edge 1806-->2328
[SelectDef] On node: ValVar ID: 1806
   %29 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1806
[SelectDef] On node: ValVar ID: 1737
   %start_instrumented = alloca i8*, align 4 
On edge 1738-->1737
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1737
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1749-->1737
On edge 1794-->1737
[SelectDef] On node: ValVar ID: 1794
   %add.ptr8_instrumented = getelementptr inbounds i8, i8* %24, i32 2 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %24 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1793
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1749
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1745-->1749
[SelectDef] On node: ValVar ID: 1745
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1744-->1745
[SelectDef] On node: ValVar ID: 1744
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1743-->1744
[SelectDef] On node: ValVar ID: 1743
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1743
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1421
   %23 = load i8*, i8** %name_instrumented, align 4 
On edge 1359-->1421
[SelectDef] On node: ValVar ID: 1359
   %name_instrumented = alloca i8*, align 4 
On edge 1360-->1359
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1359
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1419-->1359
[SelectDef] On node: ValVar ID: 1419
   %add.ptr10_instrumented = getelementptr inbounds i8, i8* %22, i32 1 
On edge 1418-->1419
[SelectDef] On node: ValVar ID: 1418
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1363-->1418
[SelectDef] On node: ValVar ID: 1363
   %start_instrumented = alloca i8*, align 4 
On edge 1364-->1363
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1363
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1375-->1363
[SelectDef] On node: ValVar ID: 1375
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1371-->1375
[SelectDef] On node: ValVar ID: 1371
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1370-->1371
[SelectDef] On node: ValVar ID: 1370
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1369-->1370
[SelectDef] On node: ValVar ID: 1369
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1369
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1167
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1167
[SelectDef] On node: ValVar ID: 1114
   %start_instrumented = alloca i8*, align 4 
On edge 1115-->1114
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1114
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1126-->1114
On edge 1165-->1114
[SelectDef] On node: ValVar ID: 1165
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %21, i32 2 
On edge 1164-->1165
[SelectDef] On node: ValVar ID: 1164
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1114-->1164
Node 1114 already visited
[SelectDef] On node: ValVar ID: 1126
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1122-->1126
[SelectDef] On node: ValVar ID: 1122
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1121-->1122
[SelectDef] On node: ValVar ID: 1121
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1120-->1121
[SelectDef] On node: ValVar ID: 1120
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1120
Node 1106 already visited
[SelectDef] On node: ValVar ID: 809
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 758-->809
[SelectDef] On node: ValVar ID: 758
   %start_instrumented = alloca i8*, align 4 
On edge 759-->758
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 758
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 807-->758
[SelectDef] On node: ValVar ID: 807
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 804-->807
[SelectDef] On node: ValVar ID: 804
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 803-->804
[SelectDef] On node: ValVar ID: 803
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->803
Node 754 already visited
[SelectDef] On node: ValVar ID: 2443
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2443
Node 985 already visited
[SelectDef] On node: ValVar ID: 1796
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1737-->1796
Node 1737 already visited
[SelectDef] On node: ValVar ID: 1680
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1609-->1680
[SelectDef] On node: ValVar ID: 1609
   %ampr_instrumented = alloca i8*, align 4 
On edge 1610-->1609
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1609
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1624-->1609
[SelectDef] On node: ValVar ID: 1624
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1624
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1622
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1603-->1622
[SelectDef] On node: ValVar ID: 1603
   %start_instrumented = alloca i8*, align 4 
On edge 1604-->1603
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1603
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1620-->1603
On edge 1697-->1603
[SelectDef] On node: ValVar ID: 1697
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1696-->1697
[SelectDef] On node: ValVar ID: 1696
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1607-->1696
[SelectDef] On node: ValVar ID: 1607
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1607
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1607
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1682-->1607
[SelectDef] On node: ValVar ID: 1682
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1508-->1682
Node 1508 already visited
[SelectDef] On node: ValVar ID: 1620
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1616-->1620
[SelectDef] On node: ValVar ID: 1616
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1615-->1616
[SelectDef] On node: ValVar ID: 1615
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1614-->1615
[SelectDef] On node: ValVar ID: 1614
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1614
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 889
   %38 = load i8*, i8** %start30_instrumented, align 4 
On edge 764-->889
[SelectDef] On node: ValVar ID: 764
   %start30_instrumented = alloca i8*, align 4 
On edge 765-->764
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 764
	-  %start30_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
On edge 887-->764
[SelectDef] On node: ValVar ID: 887
   %add.ptr33_instrumented = getelementptr inbounds i8, i8* %36, i32 %37 
On edge 884-->887
[SelectDef] On node: ValVar ID: 884
   %36 = load i8*, i8** %buffer31_instrumented, align 4 
On edge 883-->884
[SelectDef] On node: ValVar ID: 883
   %buffer31_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 754-->883
Node 754 already visited
[SelectDef] On node: ValVar ID: 2501
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 985-->2501
Node 985 already visited
Defs of param 2 are 28
Ignoring FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call31_instrumented, i8** %quot_instrumented, align 4
Node:   store i8* %call14_instrumented, i8** %quot_instrumented, align 4
Node:   %44 = load i8*, i8** %quot_instrumented, align 4
Node:   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1
Node:   store i8* %add.ptr29_instrumented, i8** %value_instrumented, align 4
Node:   %53 = load i8*, i8** %value_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.12, i32 0, i32 0
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* @.str.6, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call31_instrumented = call i8* @str_findchr_instrumented(i8* %45, i8* %46, i32 %conv30_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call31_instrumented, i8** %quot_instrumented, align 4
Node:   store i8* %call14_instrumented, i8** %quot_instrumented, align 4
Node:   %44 = load i8*, i8** %quot_instrumented, align 4
Node:   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %44, i32 1
Node:   store i8* %add.ptr29_instrumented, i8** %value_instrumented, align 4
Node:   %53 = load i8*, i8** %value_instrumented, align 4
Node:   %53 = load i8*, i8** %value_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 0 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
Checking function hook_exit
Checking function llvm.memcpy.p0i8.p0i8.i32
Checking function fprintf
Checking function __assert_fail
Checking function strlen
Checking function memchr
Checking function memcmp
Checking function printf
Checking function NameStartChar
Checking function NameChar
Checking function WhiteSpace
Checking function main
Checking function gettimeofday
Checking function sprintf
Checking function fopen
Checking function fgets
Checking function fclose
Checking function llvm.memmove.p0i8.p0i8.i32
Checking function fread
Checking function sleep
Checking function print_indent
Checking function puts
Checking function sxml_init_instrumented
Checking function sxml_parse_instrumented
Checking function str_ltrim_instrumented
Checking function state_setpos_instrumented
Checking function parse_instruction_instrumented
Checking function parse_doctype_instrumented
Checking function parse_start_instrumented
Checking function str_findchr_instrumented
Checking function parse_characters_instrumented
Checking function parse_end_instrumented
Checking function parse_comment_instrumented
Checking function parse_cdata_instrumented
Checking function str_startswith_instrumented
Checking function str_findstr_instrumented
Checking function state_pushtoken_instrumented
Checking function str_find_notalnum_instrumented
Checking function parse_attributes_instrumented
Checking function str_rtrim_instrumented
Checking function parse_attrvalue_instrumented
Checking function print_prettyxml_instrumented
Checking function count_lines_instrumented
Checking function print_tokenvalue_instrumented
Checking function print_chartokens_instrumented
Checking function hook_exit
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i16 %7, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %7, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function llvm.memcpy.p0i8.p0i8.i32
Checking function fprintf
Checking function __assert_fail
Checking function strlen
Checking function memchr
Checking function memcmp
Checking function printf
Checking function NameStartChar
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %c, i32* %c.addr, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 195
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 196
[SelectDef] On node: FIObjVar ID: 196 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 196 (base object)
   %c.addr = alloca i32, align 4  to result
Found:
	- NodeId: 196 Instr:   %c.addr = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval, align 4
Target of   store i32 1, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 193
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 194
[SelectDef] On node: FIObjVar ID: 194 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 194 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 194 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 %lor.ext, i32* %retval, align 4
Target of   store i32 %lor.ext, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 193
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 194
[SelectDef] On node: FIObjVar ID: 194 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 194 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 194 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i16 %17, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %17, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function NameChar
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %c, i32* %c.addr, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 255
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 256
[SelectDef] On node: FIObjVar ID: 256 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 256 (base object)
   %c.addr = alloca i32, align 4  to result
Found:
	- NodeId: 256 Instr:   %c.addr = alloca i32, align 4
Finding defs for:   store i16 %19, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %19, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function WhiteSpace
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %c, i32* %c.addr, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 322
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 323
[SelectDef] On node: FIObjVar ID: 323 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 323 (base object)
   %c.addr = alloca i32, align 4  to result
Found:
	- NodeId: 323 Instr:   %c.addr = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval, align 4
Target of   store i32 1, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 320
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 321
[SelectDef] On node: FIObjVar ID: 321 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 321 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 321 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval, align 4
Target of   store i32 0, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 320
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 321
[SelectDef] On node: FIObjVar ID: 321 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 321 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 321 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i16 %9, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %9, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function main
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 0, i32* %retval, align 4
Target of   store i32 0, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 349
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 350
[SelectDef] On node: FIObjVar ID: 350 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 350 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 350 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 %argc, i32* %argc.addr, align 4
Target of   store i32 %argc, i32* %argc.addr, align 4 is   %argc.addr = alloca i32, align 4 with PAG id 351
Checking PagEdge node associated to:   %argc.addr = alloca i32, align 4
Visist starts at PAGNode 352
[SelectDef] On node: FIObjVar ID: 352 (base object)
   %argc.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 352 (base object)
   %argc.addr = alloca i32, align 4  to result
Found:
	- NodeId: 352 Instr:   %argc.addr = alloca i32, align 4
Finding defs for:   store i8** %argv, i8*** %argv.addr, align 4
Target of   store i8** %argv, i8*** %argv.addr, align 4 is   %argv.addr = alloca i8**, align 4 with PAG id 353
Checking PagEdge node associated to:   %argv.addr = alloca i8**, align 4
Visist starts at PAGNode 354
[SelectDef] On node: FIObjVar ID: 354 (base object)
   %argv.addr = alloca i8**, align 4 
Start node is a Def already, adding FIObjVar ID: 354 (base object)
   %argv.addr = alloca i8**, align 4  to result
Found:
	- NodeId: 354 Instr:   %argv.addr = alloca i8**, align 4
Finding defs for:   store i32 0, i32* %bufferlen, align 4
Target of   store i32 0, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 361
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 362
[SelectDef] On node: FIObjVar ID: 362 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 362 (base object)
   %bufferlen = alloca i32, align 4  to result
Found:
	- NodeId: 362 Instr:   %bufferlen = alloca i32, align 4
Finding defs for:   store i32 0, i32* %indent, align 4
Target of   store i32 0, i32* %indent, align 4 is   %indent = alloca i32, align 4 with PAG id 365
Checking PagEdge node associated to:   %indent = alloca i32, align 4
Visist starts at PAGNode 366
[SelectDef] On node: FIObjVar ID: 366 (base object)
   %indent = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 366 (base object)
   %indent = alloca i32, align 4  to result
Found:
	- NodeId: 366 Instr:   %indent = alloca i32, align 4
Finding defs for:   store i32 1, i32* %lineno, align 4
Target of   store i32 1, i32* %lineno, align 4 is   %lineno = alloca i32, align 4 with PAG id 367
Checking PagEdge node associated to:   %lineno = alloca i32, align 4
Visist starts at PAGNode 368
[SelectDef] On node: FIObjVar ID: 368 (base object)
   %lineno = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 368 (base object)
   %lineno = alloca i32, align 4  to result
Found:
	- NodeId: 368 Instr:   %lineno = alloca i32, align 4
Finding defs for:   store i32 1, i32* %i, align 4
Target of   store i32 1, i32* %i, align 4 is   %i = alloca i32, align 4 with PAG id 377
Checking PagEdge node associated to:   %i = alloca i32, align 4
Visist starts at PAGNode 378
[SelectDef] On node: FIObjVar ID: 378 (base object)
   %i = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 378 (base object)
   %i = alloca i32, align 4  to result
Found:
	- NodeId: 378 Instr:   %i = alloca i32, align 4
Finding defs for:   store %struct._IO_FILE* %call5, %struct._IO_FILE** %file, align 4
Target of   store %struct._IO_FILE* %call5, %struct._IO_FILE** %file, align 4 is   %file = alloca %struct._IO_FILE*, align 4 with PAG id 373
Checking PagEdge node associated to:   %file = alloca %struct._IO_FILE*, align 4
Visist starts at PAGNode 374
[SelectDef] On node: FIObjVar ID: 374 (base object)
   %file = alloca %struct._IO_FILE*, align 4 
Start node is a Def already, adding FIObjVar ID: 374 (base object)
   %file = alloca %struct._IO_FILE*, align 4  to result
Found:
	- NodeId: 374 Instr:   %file = alloca %struct._IO_FILE*, align 4
Finding defs for:   store i32 %call14, i32* %err, align 4
Target of   store i32 %call14, i32* %err, align 4 is   %err = alloca i32, align 4 with PAG id 379
Checking PagEdge node associated to:   %err = alloca i32, align 4
Visist starts at PAGNode 380
[SelectDef] On node: FIObjVar ID: 380 (base object)
   %err = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 380 (base object)
   %err = alloca i32, align 4  to result
Found:
	- NodeId: 380 Instr:   %err = alloca i32, align 4
Finding defs for:   store i32 0, i32* %ntokens18, align 4
Target of   store i32 0, i32* %ntokens18, align 4 is   %ntokens18 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1 with PAG id 462
Checking PagEdge node associated to:   %ntokens18 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1
Visist starts at PAGNode 371
[SelectDef] On node: ValVar ID: 371
   %parser = alloca %struct.sxml_t, align 4 
On edge 372-->371
[SelectDefs] Adding node: FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 372 Instr:   %parser = alloca %struct.sxml_t, align 4
Finding defs for:   store i32 0, i32* %ntokens23, align 4
Target of   store i32 0, i32* %ntokens23, align 4 is   %ntokens23 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1 with PAG id 471
Checking PagEdge node associated to:   %ntokens23 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1
Visist starts at PAGNode 371
[SelectDef] On node: ValVar ID: 371
   %parser = alloca %struct.sxml_t, align 4 
On edge 372-->371
[SelectDefs] Adding node: FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 372 Instr:   %parser = alloca %struct.sxml_t, align 4
Finding defs for:   store i32 %add, i32* %lineno, align 4
Target of   store i32 %add, i32* %lineno, align 4 is   %lineno = alloca i32, align 4 with PAG id 367
Checking PagEdge node associated to:   %lineno = alloca i32, align 4
Visist starts at PAGNode 368
[SelectDef] On node: FIObjVar ID: 368 (base object)
   %lineno = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 368 (base object)
   %lineno = alloca i32, align 4  to result
Found:
	- NodeId: 368 Instr:   %lineno = alloca i32, align 4
Finding defs for:   store i32 %sub, i32* %bufferlen, align 4
Target of   store i32 %sub, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 361
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 362
[SelectDef] On node: FIObjVar ID: 362 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 362 (base object)
   %bufferlen = alloca i32, align 4  to result
Found:
	- NodeId: 362 Instr:   %bufferlen = alloca i32, align 4
Finding defs for:   store i32 %call36, i32* %len, align 4
Target of   store i32 %call36, i32* %len, align 4 is   %len = alloca i32, align 4 with PAG id 381
Checking PagEdge node associated to:   %len = alloca i32, align 4
Visist starts at PAGNode 382
[SelectDef] On node: FIObjVar ID: 382 (base object)
   %len = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 382 (base object)
   %len = alloca i32, align 4  to result
Found:
	- NodeId: 382 Instr:   %len = alloca i32, align 4
Finding defs for:   store i32 %add41, i32* %bufferlen, align 4
Target of   store i32 %add41, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 361
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 362
[SelectDef] On node: FIObjVar ID: 362 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 362 (base object)
   %bufferlen = alloca i32, align 4  to result
Found:
	- NodeId: 362 Instr:   %bufferlen = alloca i32, align 4
Finding defs for:   store i32 0, i32* %bufferpos42, align 4
Target of   store i32 0, i32* %bufferpos42, align 4 is   %bufferpos42 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0 with PAG id 533
Checking PagEdge node associated to:   %bufferpos42 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Visist starts at PAGNode 371
[SelectDef] On node: ValVar ID: 371
   %parser = alloca %struct.sxml_t, align 4 
On edge 372-->371
[SelectDefs] Adding node: FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 372 Instr:   %parser = alloca %struct.sxml_t, align 4
Finding defs for:   store i32 %add47, i32* %lineno, align 4
Target of   store i32 %add47, i32* %lineno, align 4 is   %lineno = alloca i32, align 4 with PAG id 367
Checking PagEdge node associated to:   %lineno = alloca i32, align 4
Visist starts at PAGNode 368
[SelectDef] On node: FIObjVar ID: 368 (base object)
   %lineno = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 368 (base object)
   %lineno = alloca i32, align 4  to result
Found:
	- NodeId: 368 Instr:   %lineno = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval, align 4
Target of   store i32 1, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 349
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 350
[SelectDef] On node: FIObjVar ID: 350 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 350 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 350 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 %inc, i32* %i, align 4
Target of   store i32 %inc, i32* %i, align 4 is   %i = alloca i32, align 4 with PAG id 377
Checking PagEdge node associated to:   %i = alloca i32, align 4
Visist starts at PAGNode 378
[SelectDef] On node: FIObjVar ID: 378 (base object)
   %i = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 378 (base object)
   %i = alloca i32, align 4  to result
Found:
	- NodeId: 378 Instr:   %i = alloca i32, align 4
Finding defs for:   store i32 %sub68, i32* %seconds, align 4
Target of   store i32 %sub68, i32* %seconds, align 4 is   %seconds = alloca i32, align 4 with PAG id 385
Checking PagEdge node associated to:   %seconds = alloca i32, align 4
Visist starts at PAGNode 386
[SelectDef] On node: FIObjVar ID: 386 (base object)
   %seconds = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 386 (base object)
   %seconds = alloca i32, align 4  to result
Found:
	- NodeId: 386 Instr:   %seconds = alloca i32, align 4
Finding defs for:   store i32 %sub70, i32* %microseconds, align 4
Target of   store i32 %sub70, i32* %microseconds, align 4 is   %microseconds = alloca i32, align 4 with PAG id 387
Checking PagEdge node associated to:   %microseconds = alloca i32, align 4
Visist starts at PAGNode 388
[SelectDef] On node: FIObjVar ID: 388 (base object)
   %microseconds = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 388 (base object)
   %microseconds = alloca i32, align 4  to result
Found:
	- NodeId: 388 Instr:   %microseconds = alloca i32, align 4
Finding defs for:   store double %add72, double* %elapsed, align 8
Target of   store double %add72, double* %elapsed, align 8 is   %elapsed = alloca double, align 8 with PAG id 389
Checking PagEdge node associated to:   %elapsed = alloca double, align 8
Visist starts at PAGNode 390
[SelectDef] On node: FIObjVar ID: 390 (base object)
   %elapsed = alloca double, align 8 
Start node is a Def already, adding FIObjVar ID: 390 (base object)
   %elapsed = alloca double, align 8  to result
Found:
	- NodeId: 390 Instr:   %elapsed = alloca double, align 8
Finding defs for:   store i32 0, i32* %retval, align 4
Target of   store i32 0, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 349
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 350
[SelectDef] On node: FIObjVar ID: 350 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 350 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 350 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i16 %65, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %65, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function gettimeofday
Checking function sprintf
Checking function fopen
Checking function fgets
Checking function fclose
Checking function llvm.memmove.p0i8.p0i8.i32
Checking function fread
Checking function sleep
Checking function print_indent
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %indentlevel, i32* %indentlevel.addr, align 4
Target of   store i32 %indentlevel, i32* %indentlevel.addr, align 4 is   %indentlevel.addr = alloca i32, align 4 with PAG id 669
Checking PagEdge node associated to:   %indentlevel.addr = alloca i32, align 4
Visist starts at PAGNode 670
[SelectDef] On node: FIObjVar ID: 670 (base object)
   %indentlevel.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 670 (base object)
   %indentlevel.addr = alloca i32, align 4  to result
Found:
	- NodeId: 670 Instr:   %indentlevel.addr = alloca i32, align 4
Finding defs for:   store i16 %11, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %11, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function puts
Checking function sxml_init_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 706
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 707
[SelectDef] On node: FIObjVar ID: 707 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 707 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 707 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 0, i32* %bufferpos_instrumented, align 4
Target of   store i32 0, i32* %bufferpos_instrumented, align 4 is   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 0 with PAG id 710
Checking PagEdge node associated to:   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 0
Visist starts at PAGNode 709
[SelectDef] On node: ValVar ID: 709
   %4 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 706-->709
[SelectDef] On node: ValVar ID: 706
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 707-->706
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 706
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 707 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 699-->706
[SelectDef] On node: ValVar ID: 699
 %struct.sxml_t* %state { 0th arg sxml_init_instrumented  }
On edge 371-->699
[SelectDef] On node: ValVar ID: 371
   %parser = alloca %struct.sxml_t, align 4 
On edge 372-->371
[SelectDefs] Adding node: FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 372 Instr:   %parser = alloca %struct.sxml_t, align 4
	- NodeId: 707 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 0, i32* %ntokens_instrumented, align 4
Target of   store i32 0, i32* %ntokens_instrumented, align 4 is   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %5, i32 0, i32 1 with PAG id 713
Checking PagEdge node associated to:   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %5, i32 0, i32 1
Visist starts at PAGNode 712
[SelectDef] On node: ValVar ID: 712
   %5 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 706-->712
[SelectDef] On node: ValVar ID: 706
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 707-->706
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 706
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 707 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 699-->706
[SelectDef] On node: ValVar ID: 699
 %struct.sxml_t* %state { 0th arg sxml_init_instrumented  }
On edge 371-->699
[SelectDef] On node: ValVar ID: 371
   %parser = alloca %struct.sxml_t, align 4 
On edge 372-->371
[SelectDefs] Adding node: FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 372 Instr:   %parser = alloca %struct.sxml_t, align 4
	- NodeId: 707 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 0, i32* %taglevel_instrumented, align 4
Target of   store i32 0, i32* %taglevel_instrumented, align 4 is   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %6, i32 0, i32 2 with PAG id 716
Checking PagEdge node associated to:   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %6, i32 0, i32 2
Visist starts at PAGNode 715
[SelectDef] On node: ValVar ID: 715
   %6 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 706-->715
[SelectDef] On node: ValVar ID: 706
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 707-->706
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 706
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 707 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 699-->706
[SelectDef] On node: ValVar ID: 699
 %struct.sxml_t* %state { 0th arg sxml_init_instrumented  }
On edge 371-->699
[SelectDef] On node: ValVar ID: 371
   %parser = alloca %struct.sxml_t, align 4 
On edge 372-->371
[SelectDefs] Adding node: FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 372 Instr:   %parser = alloca %struct.sxml_t, align 4
	- NodeId: 707 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i16 %10, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %10, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function sxml_parse_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 740
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 741
[SelectDef] On node: FIObjVar ID: 741 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 741 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 741 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 742
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 743
[SelectDef] On node: FIObjVar ID: 743 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 743 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 743 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Target of   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 is   %bufferlen.addr_instrumented = alloca i32, align 4 with PAG id 744
Checking PagEdge node associated to:   %bufferlen.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 745
[SelectDef] On node: FIObjVar ID: 745 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 745 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 745 Instr:   %bufferlen.addr_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4 is   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 746
Checking PagEdge node associated to:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 747
[SelectDef] On node: FIObjVar ID: 747 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 747 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 747 Instr:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4
Target of   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4 is   %num_tokens.addr_instrumented = alloca i32, align 4 with PAG id 748
Checking PagEdge node associated to:   %num_tokens.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 749
[SelectDef] On node: FIObjVar ID: 749 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 749 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 749 Instr:   %num_tokens.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 752
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 753
[SelectDef] On node: FIObjVar ID: 753 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 753 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 753 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %buffer1_instrumented, align 4
Target of   store i8* %9, i8** %buffer1_instrumented, align 4 is   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 with PAG id 785
Checking PagEdge node associated to:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Visist starts at PAGNode 754
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store i32 %10, i32* %bufferlen2_instrumented, align 4
Target of   store i32 %10, i32* %bufferlen2_instrumented, align 4 is   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1 with PAG id 788
Checking PagEdge node associated to:   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Visist starts at PAGNode 754
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store %struct.sxmltok_t* %11, %struct.sxmltok_t** %tokens3_instrumented, align 4
Target of   store %struct.sxmltok_t* %11, %struct.sxmltok_t** %tokens3_instrumented, align 4 is   %tokens3_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 2 with PAG id 791
Checking PagEdge node associated to:   %tokens3_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 2
Visist starts at PAGNode 754
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store i32 %12, i32* %num_tokens4_instrumented, align 4
Target of   store i32 %12, i32* %num_tokens4_instrumented, align 4 is   %num_tokens4_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 3 with PAG id 794
Checking PagEdge node associated to:   %num_tokens4_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 3
Visist starts at PAGNode 754
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 758
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 759
[SelectDef] On node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 759 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call_instrumented, i8** %lt_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %lt_instrumented, align 4 is   %lt_instrumented = alloca i8*, align 4 with PAG id 760
Checking PagEdge node associated to:   %lt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 761
[SelectDef] On node: FIObjVar ID: 761 (base object)
   %lt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 761 (base object)
   %lt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 761 Instr:   %lt_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 738
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 739
[SelectDef] On node: FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 739 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 738
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 739
[SelectDef] On node: FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 739 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call15_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call15_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 756
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 757
[SelectDef] On node: FIObjVar ID: 757 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 757 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 757 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call17_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call17_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 756
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 757
[SelectDef] On node: FIObjVar ID: 757 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 757 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 757 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call18_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call18_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 756
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 757
[SelectDef] On node: FIObjVar ID: 757 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 757 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 757 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %31, i32* %retval_instrumented, align 4
Target of   store i32 %31, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 738
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 739
[SelectDef] On node: FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 739 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr33_instrumented, i8** %start30_instrumented, align 4
Target of   store i8* %add.ptr33_instrumented, i8** %start30_instrumented, align 4 is   %start30_instrumented = alloca i8*, align 4 with PAG id 764
Checking PagEdge node associated to:   %start30_instrumented = alloca i8*, align 4
Visist starts at PAGNode 765
[SelectDef] On node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 765 Instr:   %start30_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call35_instrumented, i8** %lt34_instrumented, align 4
Target of   store i8* %call35_instrumented, i8** %lt34_instrumented, align 4 is   %lt34_instrumented = alloca i8*, align 4 with PAG id 766
Checking PagEdge node associated to:   %lt34_instrumented = alloca i8*, align 4
Visist starts at PAGNode 767
[SelectDef] On node: FIObjVar ID: 767 (base object)
   %lt34_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 767 (base object)
   %lt34_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 767 Instr:   %lt34_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call44_instrumented, i32* %err43_instrumented, align 4
Target of   store i32 %call44_instrumented, i32* %err43_instrumented, align 4 is   %err43_instrumented = alloca i32, align 4 with PAG id 768
Checking PagEdge node associated to:   %err43_instrumented = alloca i32, align 4
Visist starts at PAGNode 769
[SelectDef] On node: FIObjVar ID: 769 (base object)
   %err43_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 769 (base object)
   %err43_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 769 Instr:   %err43_instrumented = alloca i32, align 4
Finding defs for:   store i32 %45, i32* %retval_instrumented, align 4
Target of   store i32 %45, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 738
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 739
[SelectDef] On node: FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 739 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 738
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 739
[SelectDef] On node: FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 739 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call60_instrumented, i32* %err29_instrumented, align 4
Target of   store i32 %call60_instrumented, i32* %err29_instrumented, align 4 is   %err29_instrumented = alloca i32, align 4 with PAG id 762
Checking PagEdge node associated to:   %err29_instrumented = alloca i32, align 4
Visist starts at PAGNode 763
[SelectDef] On node: FIObjVar ID: 763 (base object)
   %err29_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 763 (base object)
   %err29_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 763 Instr:   %err29_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call62_instrumented, i32* %err29_instrumented, align 4
Target of   store i32 %call62_instrumented, i32* %err29_instrumented, align 4 is   %err29_instrumented = alloca i32, align 4 with PAG id 762
Checking PagEdge node associated to:   %err29_instrumented = alloca i32, align 4
Visist starts at PAGNode 763
[SelectDef] On node: FIObjVar ID: 763 (base object)
   %err29_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 763 (base object)
   %err29_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 763 Instr:   %err29_instrumented = alloca i32, align 4
Finding defs for:   store i32 %cond_instrumented, i32* %err29_instrumented, align 4
Target of   store i32 %cond_instrumented, i32* %err29_instrumented, align 4 is   %err29_instrumented = alloca i32, align 4 with PAG id 762
Checking PagEdge node associated to:   %err29_instrumented = alloca i32, align 4
Visist starts at PAGNode 763
[SelectDef] On node: FIObjVar ID: 763 (base object)
   %err29_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 763 (base object)
   %err29_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 763 Instr:   %err29_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call71_instrumented, i32* %err29_instrumented, align 4
Target of   store i32 %call71_instrumented, i32* %err29_instrumented, align 4 is   %err29_instrumented = alloca i32, align 4 with PAG id 762
Checking PagEdge node associated to:   %err29_instrumented = alloca i32, align 4
Visist starts at PAGNode 763
[SelectDef] On node: FIObjVar ID: 763 (base object)
   %err29_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 763 (base object)
   %err29_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 763 Instr:   %err29_instrumented = alloca i32, align 4
Finding defs for:   store i32 %56, i32* %retval_instrumented, align 4
Target of   store i32 %56, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 738
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 739
[SelectDef] On node: FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 739 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 738
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 739
[SelectDef] On node: FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 739 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %64, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %64, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_ltrim_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 995
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 996
[SelectDef] On node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 996 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 997
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 998
[SelectDef] On node: FIObjVar ID: 998 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 998 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 998 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %it_instrumented, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 999
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1000
[SelectDef] On node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1000 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 999
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1000
[SelectDef] On node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1000 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %20, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %20, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function state_setpos_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1057
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1058
[SelectDef] On node: FIObjVar ID: 1058 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1058 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1058 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1059
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1060
[SelectDef] On node: FIObjVar ID: 1060 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1060 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1060 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %ptr, i8** %ptr.addr_instrumented, align 4
Target of   store i8* %ptr, i8** %ptr.addr_instrumented, align 4 is   %ptr.addr_instrumented = alloca i8*, align 4 with PAG id 1061
Checking PagEdge node associated to:   %ptr.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1062
[SelectDef] On node: FIObjVar ID: 1062 (base object)
   %ptr.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1062 (base object)
   %ptr.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1062 Instr:   %ptr.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4
Target of   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4 is   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0 with PAG id 1074
Checking PagEdge node associated to:   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0
Visist starts at PAGNode 1073
[SelectDef] On node: ValVar ID: 1073
   %7 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1057-->1073
[SelectDef] On node: ValVar ID: 1057
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1058-->1057
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1057
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1058 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1046-->1057
[SelectDef] On node: ValVar ID: 1046
 %struct.sxml_t* %state { 0th arg state_setpos_instrumented  }
On edge 750-->1046
On edge 1187-->1046
On edge 1230-->1046
On edge 1325-->1046
On edge 1436-->1046
On edge 1494-->1046
On edge 1660-->1046
On edge 1704-->1046
On edge 1823-->1046
On edge 1917-->1046
On edge 2011-->1046
On edge 2543-->1046
On edge 2582-->1046
[SelectDef] On node: ValVar ID: 2582
   %68 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2582
[SelectDef] On node: ValVar ID: 2399
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2400-->2399
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2399
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2400 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2388-->2399
[SelectDef] On node: ValVar ID: 2388
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1191-->2388
On edge 1440-->2388
[SelectDef] On node: ValVar ID: 1440
   %34 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1440
[SelectDef] On node: ValVar ID: 1351
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1352-->1351
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1351
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1352 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1340-->1351
[SelectDef] On node: ValVar ID: 1340
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 750-->1340
Node 750 already visited
On edge 750-->1340
Node 750 already visited
[SelectDef] On node: ValVar ID: 1191
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1191
[SelectDef] On node: ValVar ID: 1104
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1105-->1104
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1104
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1105 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1093-->1104
[SelectDef] On node: ValVar ID: 1093
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 750-->1093
Node 750 already visited
On edge 750-->1093
Node 750 already visited
[SelectDef] On node: ValVar ID: 2543
   %51 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2543
Node 2399 already visited
[SelectDef] On node: ValVar ID: 2011
   %29 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1943-->2011
[SelectDef] On node: ValVar ID: 1943
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1944-->1943
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1943
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1944 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1932-->1943
[SelectDef] On node: ValVar ID: 1932
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 750-->1932
Node 750 already visited
[SelectDef] On node: ValVar ID: 1917
   %28 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1849-->1917
[SelectDef] On node: ValVar ID: 1849
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1850-->1849
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1849
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1850 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1838-->1849
[SelectDef] On node: ValVar ID: 1838
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 750-->1838
Node 750 already visited
[SelectDef] On node: ValVar ID: 1823
   %38 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1729-->1823
[SelectDef] On node: ValVar ID: 1729
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1730-->1729
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1729
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1730 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1718-->1729
[SelectDef] On node: ValVar ID: 1718
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 750-->1718
Node 750 already visited
[SelectDef] On node: ValVar ID: 1704
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1597-->1704
[SelectDef] On node: ValVar ID: 1597
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1598-->1597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1597
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1598 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1584-->1597
[SelectDef] On node: ValVar ID: 1584
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 750-->1584
Node 750 already visited
On edge 2702-->1584
[SelectDef] On node: ValVar ID: 2702
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2679-->2702
[SelectDef] On node: ValVar ID: 2679
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2680-->2679
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2679
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2680 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2666-->2679
[SelectDef] On node: ValVar ID: 2666
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2547-->2666
[SelectDef] On node: ValVar ID: 2547
   %54 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2547
Node 2399 already visited
[SelectDef] On node: ValVar ID: 1660
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1597-->1660
Node 1597 already visited
[SelectDef] On node: ValVar ID: 1494
   %56 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1494
Node 1351 already visited
[SelectDef] On node: ValVar ID: 1436
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1436
Node 1351 already visited
[SelectDef] On node: ValVar ID: 1325
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1256-->1325
[SelectDef] On node: ValVar ID: 1256
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1257-->1256
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1256
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1257 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1245-->1256
[SelectDef] On node: ValVar ID: 1245
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 750-->1245
Node 750 already visited
[SelectDef] On node: ValVar ID: 1230
   %47 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1230
Node 1104 already visited
[SelectDef] On node: ValVar ID: 1187
   %30 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1187
Node 1104 already visited
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 1058 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 751 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1944 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1105 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1257 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1352 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1598 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1730 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1850 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2400 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2680 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i16 %16, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %16, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_instruction_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1104
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1105
[SelectDef] On node: FIObjVar ID: 1105 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1105 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1105 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1106
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1107
[SelectDef] On node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1107 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1114
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1115
[SelectDef] On node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1115 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1116
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1117
[SelectDef] On node: FIObjVar ID: 1117 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1117 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1117 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1102
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1103
[SelectDef] On node: FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1103 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1114
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1115
[SelectDef] On node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1115 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call7_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call7_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1112
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1113
[SelectDef] On node: FIObjVar ID: 1113 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1113 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1113 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1102
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1103
[SelectDef] On node: FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1103 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call13_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call13_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 1108
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 1109
[SelectDef] On node: FIObjVar ID: 1109 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1109 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1109 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %36, i32* %retval_instrumented, align 4
Target of   store i32 %36, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1102
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1103
[SelectDef] On node: FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1103 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr19_instrumented, i8** %quest_instrumented, align 4
Target of   store i8* %add.ptr19_instrumented, i8** %quest_instrumented, align 4 is   %quest_instrumented = alloca i8*, align 4 with PAG id 1110
Checking PagEdge node associated to:   %quest_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1111
[SelectDef] On node: FIObjVar ID: 1111 (base object)
   %quest_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1111 (base object)
   %quest_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1111 Instr:   %quest_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1102
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1103
[SelectDef] On node: FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1103 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1102
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1103
[SelectDef] On node: FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1103 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call32_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call32_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1102
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1103
[SelectDef] On node: FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1103 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %54, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %54, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_doctype_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1256
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1257
[SelectDef] On node: FIObjVar ID: 1257 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1257 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1257 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1258
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1259
[SelectDef] On node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1259 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1262
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1263
[SelectDef] On node: FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1263 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1264
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1265
[SelectDef] On node: FIObjVar ID: 1265 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1265 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1265 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1254
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1255
[SelectDef] On node: FIObjVar ID: 1255 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1255 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1255 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1254
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1255
[SelectDef] On node: FIObjVar ID: 1255 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1255 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1255 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1262
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1263
[SelectDef] On node: FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1263 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 is   %bracket_instrumented = alloca i8*, align 4 with PAG id 1260
Checking PagEdge node associated to:   %bracket_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1261
[SelectDef] On node: FIObjVar ID: 1261 (base object)
   %bracket_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1261 (base object)
   %bracket_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1261 Instr:   %bracket_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1254
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1255
[SelectDef] On node: FIObjVar ID: 1255 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1255 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1255 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call12_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call12_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1254
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1255
[SelectDef] On node: FIObjVar ID: 1255 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1255 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1255 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %34, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %34, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_start_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1351
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1352
[SelectDef] On node: FIObjVar ID: 1352 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1352 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1352 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1353
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1354
[SelectDef] On node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1354 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1363
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1364
[SelectDef] On node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1364 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1365
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1366
[SelectDef] On node: FIObjVar ID: 1366 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1366 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1366 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1349
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1350
[SelectDef] On node: FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1350 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr10_instrumented, i8** %name_instrumented, align 4
Target of   store i8* %add.ptr10_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 1359
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1360
[SelectDef] On node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1360 Instr:   %name_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call11_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1361
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1362
[SelectDef] On node: FIObjVar ID: 1362 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1362 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1362 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1349
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1350
[SelectDef] On node: FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1350 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call18_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call18_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 1355
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 1356
[SelectDef] On node: FIObjVar ID: 1356 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1356 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1356 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %37, i32* %retval_instrumented, align 4
Target of   store i32 %37, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1349
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1350
[SelectDef] On node: FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1350 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr25_instrumented, i8** %gt_instrumented, align 4
Target of   store i8* %add.ptr25_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1357
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1358
[SelectDef] On node: FIObjVar ID: 1358 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1358 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1358 Instr:   %gt_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1357
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1358
[SelectDef] On node: FIObjVar ID: 1358 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1358 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1358 Instr:   %gt_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1349
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1350
[SelectDef] On node: FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1350 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1349
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1350
[SelectDef] On node: FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1350 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call46_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call46_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1349
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1350
[SelectDef] On node: FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1350 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %63, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %63, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_findchr_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 1519
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1520
[SelectDef] On node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1520 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 1521
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1522
[SelectDef] On node: FIObjVar ID: 1522 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1522 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1522 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %c, i32* %c.addr_instrumented, align 4
Target of   store i32 %c, i32* %c.addr_instrumented, align 4 is   %c.addr_instrumented = alloca i32, align 4 with PAG id 1523
Checking PagEdge node associated to:   %c.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 1524
[SelectDef] On node: FIObjVar ID: 1524 (base object)
   %c.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1524 (base object)
   %c.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1524 Instr:   %c.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 1525
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1526
[SelectDef] On node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1526 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %24, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %24, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_characters_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1597
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1598
[SelectDef] On node: FIObjVar ID: 1598 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1598 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1598 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1599
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1600
[SelectDef] On node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1600 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 1601
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1602
[SelectDef] On node: FIObjVar ID: 1602 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1602 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1602 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1603
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1604
[SelectDef] On node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1604 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %ampr_instrumented, align 4 is   %ampr_instrumented = alloca i8*, align 4 with PAG id 1609
Checking PagEdge node associated to:   %ampr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1610
[SelectDef] On node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1610 Instr:   %ampr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call9_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call9_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1595
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1596
[SelectDef] On node: FIObjVar ID: 1596 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1596 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1596 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %cond_instrumented, i8** %limit_instrumented, align 4
Target of   store i8* %cond_instrumented, i8** %limit_instrumented, align 4 is   %limit_instrumented = alloca i8*, align 4 with PAG id 1605
Checking PagEdge node associated to:   %limit_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1606
[SelectDef] On node: FIObjVar ID: 1606 (base object)
   %limit_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1606 (base object)
   %limit_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1606 Instr:   %limit_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call14_instrumented, i8** %colon_instrumented, align 4
Target of   store i8* %call14_instrumented, i8** %colon_instrumented, align 4 is   %colon_instrumented = alloca i8*, align 4 with PAG id 1607
Checking PagEdge node associated to:   %colon_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1608
[SelectDef] On node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1608 Instr:   %colon_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %cond18_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %cond18_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1595
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1596
[SelectDef] On node: FIObjVar ID: 1596 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1596 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1596 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1603
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1604
[SelectDef] On node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1604 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call22_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call22_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1595
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1596
[SelectDef] On node: FIObjVar ID: 1596 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1596 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1596 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %52, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %52, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_end_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1729
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1730
[SelectDef] On node: FIObjVar ID: 1730 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1730 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1730 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1731
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1732
[SelectDef] On node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1732 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1737
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1738
[SelectDef] On node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1738 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1739
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1740
[SelectDef] On node: FIObjVar ID: 1740 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1740 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1740 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1727
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1728
[SelectDef] On node: FIObjVar ID: 1728 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1728 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1728 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr8_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr8_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1737
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1738
[SelectDef] On node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1738 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call9_instrumented, i8** %gt_instrumented, align 4
Target of   store i8* %call9_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1733
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1734
[SelectDef] On node: FIObjVar ID: 1734 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1734 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1734 Instr:   %gt_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1727
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1728
[SelectDef] On node: FIObjVar ID: 1728 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1728 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1728 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call14_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call14_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1735
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1736
[SelectDef] On node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1736 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1727
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1728
[SelectDef] On node: FIObjVar ID: 1728 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1728 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1728 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call22_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call22_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1727
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1728
[SelectDef] On node: FIObjVar ID: 1728 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1728 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1728 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %45, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %45, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_comment_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1849
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1850
[SelectDef] On node: FIObjVar ID: 1850 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1850 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1850 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1851
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1852
[SelectDef] On node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1852 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1855
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1856
[SelectDef] On node: FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1856 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1857
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1858
[SelectDef] On node: FIObjVar ID: 1858 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1858 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1858 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1847
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1848
[SelectDef] On node: FIObjVar ID: 1848 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1848 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1848 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1847
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1848
[SelectDef] On node: FIObjVar ID: 1848 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1848 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1848 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1855
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1856
[SelectDef] On node: FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1856 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call7_instrumented, i8** %dash_instrumented, align 4
Target of   store i8* %call7_instrumented, i8** %dash_instrumented, align 4 is   %dash_instrumented = alloca i8*, align 4 with PAG id 1853
Checking PagEdge node associated to:   %dash_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1854
[SelectDef] On node: FIObjVar ID: 1854 (base object)
   %dash_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1854 (base object)
   %dash_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1854 Instr:   %dash_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1847
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1848
[SelectDef] On node: FIObjVar ID: 1848 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1848 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1848 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call13_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call13_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1847
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1848
[SelectDef] On node: FIObjVar ID: 1848 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1848 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1848 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %35, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %35, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_cdata_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1943
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1944
[SelectDef] On node: FIObjVar ID: 1944 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1944 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1944 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1945
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1946
[SelectDef] On node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1946 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1949
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1950
[SelectDef] On node: FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1950 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1951
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1952
[SelectDef] On node: FIObjVar ID: 1952 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1952 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1952 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1941
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1942
[SelectDef] On node: FIObjVar ID: 1942 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1942 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1942 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1941
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1942
[SelectDef] On node: FIObjVar ID: 1942 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1942 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1942 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1949
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1950
[SelectDef] On node: FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1950 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call7_instrumented, i8** %bracket_instrumented, align 4
Target of   store i8* %call7_instrumented, i8** %bracket_instrumented, align 4 is   %bracket_instrumented = alloca i8*, align 4 with PAG id 1947
Checking PagEdge node associated to:   %bracket_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1948
[SelectDef] On node: FIObjVar ID: 1948 (base object)
   %bracket_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1948 (base object)
   %bracket_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1948 Instr:   %bracket_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1941
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1942
[SelectDef] On node: FIObjVar ID: 1942 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1942 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1942 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call13_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call13_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1941
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1942
[SelectDef] On node: FIObjVar ID: 1942 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1942 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1942 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %36, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %36, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_startswith_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2039
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2040
[SelectDef] On node: FIObjVar ID: 2040 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2040 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2040 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2041
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2042
[SelectDef] On node: FIObjVar ID: 2042 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2042 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2042 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %prefix, i8** %prefix.addr_instrumented, align 4
Target of   store i8* %prefix, i8** %prefix.addr_instrumented, align 4 is   %prefix.addr_instrumented = alloca i8*, align 4 with PAG id 2043
Checking PagEdge node associated to:   %prefix.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2044
[SelectDef] On node: FIObjVar ID: 2044 (base object)
   %prefix.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2044 (base object)
   %prefix.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2044 Instr:   %prefix.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call_instrumented, i32* %nbytes_instrumented, align 4
Target of   store i32 %call_instrumented, i32* %nbytes_instrumented, align 4 is   %nbytes_instrumented = alloca i32, align 4 with PAG id 2045
Checking PagEdge node associated to:   %nbytes_instrumented = alloca i32, align 4
Visist starts at PAGNode 2046
[SelectDef] On node: FIObjVar ID: 2046 (base object)
   %nbytes_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2046 (base object)
   %nbytes_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2046 Instr:   %nbytes_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2037
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2038
[SelectDef] On node: FIObjVar ID: 2038 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2038 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2038 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %conv_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %conv_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2037
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2038
[SelectDef] On node: FIObjVar ID: 2038 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2038 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2038 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %20, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %20, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_findstr_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2105
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2106
[SelectDef] On node: FIObjVar ID: 2106 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2106 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2106 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2107
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2108
[SelectDef] On node: FIObjVar ID: 2108 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2108 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2108 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %needle, i8** %needle.addr_instrumented, align 4
Target of   store i8* %needle, i8** %needle.addr_instrumented, align 4 is   %needle.addr_instrumented = alloca i8*, align 4 with PAG id 2109
Checking PagEdge node associated to:   %needle.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2110
[SelectDef] On node: FIObjVar ID: 2110 (base object)
   %needle.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2110 (base object)
   %needle.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2110 Instr:   %needle.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
Target of   store i32 %call_instrumented, i32* %needlelen_instrumented, align 4 is   %needlelen_instrumented = alloca i32, align 4 with PAG id 2111
Checking PagEdge node associated to:   %needlelen_instrumented = alloca i32, align 4
Visist starts at PAGNode 2112
[SelectDef] On node: FIObjVar ID: 2112 (base object)
   %needlelen_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2112 (base object)
   %needlelen_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2112 Instr:   %needlelen_instrumented = alloca i32, align 4
Finding defs for:   store i32 %conv_instrumented, i32* %first_instrumented, align 4
Target of   store i32 %conv_instrumented, i32* %first_instrumented, align 4 is   %first_instrumented = alloca i32, align 4 with PAG id 2113
Checking PagEdge node associated to:   %first_instrumented = alloca i32, align 4
Visist starts at PAGNode 2114
[SelectDef] On node: FIObjVar ID: 2114 (base object)
   %first_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2114 (base object)
   %first_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2114 Instr:   %first_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %call8_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2115
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2116
[SelectDef] On node: FIObjVar ID: 2116 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2116 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2116 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %28, i8** %retval_instrumented, align 4
Target of   store i8* %28, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2103
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2104
[SelectDef] On node: FIObjVar ID: 2104 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2104 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2104 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
Target of   store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2105
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2106
[SelectDef] On node: FIObjVar ID: 2106 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2106 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2106 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %30, i8** %retval_instrumented, align 4
Target of   store i8* %30, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2103
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2104
[SelectDef] On node: FIObjVar ID: 2104 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2104 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2104 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %35, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %35, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function state_pushtoken_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 2219
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 2220
[SelectDef] On node: FIObjVar ID: 2220 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2220 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 2220 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 2221
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 2222
[SelectDef] On node: FIObjVar ID: 2222 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2222 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 2222 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %type, i32* %type.addr_instrumented, align 4
Target of   store i32 %type, i32* %type.addr_instrumented, align 4 is   %type.addr_instrumented = alloca i32, align 4 with PAG id 2223
Checking PagEdge node associated to:   %type.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2224
[SelectDef] On node: FIObjVar ID: 2224 (base object)
   %type.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2224 (base object)
   %type.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2224 Instr:   %type.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2225
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2226
[SelectDef] On node: FIObjVar ID: 2226 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2226 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2226 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2227
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2228
[SelectDef] On node: FIObjVar ID: 2228 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2228 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2228 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %ntokens_instrumented, align 4
Target of   store i32 %inc_instrumented, i32* %ntokens_instrumented, align 4 is   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 1 with PAG id 2239
Checking PagEdge node associated to:   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 1
Visist starts at PAGNode 2238
[SelectDef] On node: ValVar ID: 2238
   %4 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2219-->2238
[SelectDef] On node: ValVar ID: 2219
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2220-->2219
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2219
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2220 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2203-->2219
[SelectDef] On node: ValVar ID: 2203
 %struct.sxml_t* %state { 0th arg state_pushtoken_instrumented  }
On edge 1179-->2203
On edge 1319-->2203
On edge 1431-->2203
On edge 1468-->2203
On edge 1649-->2203
On edge 1699-->2203
On edge 1818-->2203
On edge 1911-->2203
On edge 2006-->2203
On edge 2493-->2203
[SelectDef] On node: ValVar ID: 2493
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2493
[SelectDef] On node: ValVar ID: 2399
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2400-->2399
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2399
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2400 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2388-->2399
[SelectDef] On node: ValVar ID: 2388
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1191-->2388
On edge 1440-->2388
[SelectDef] On node: ValVar ID: 1440
   %34 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1440
[SelectDef] On node: ValVar ID: 1351
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1352-->1351
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1351
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1352 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1340-->1351
[SelectDef] On node: ValVar ID: 1340
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 750-->1340
On edge 750-->1340
Node 750 already visited
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 1191
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1191
[SelectDef] On node: ValVar ID: 1104
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1105-->1104
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1104
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1105 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1093-->1104
[SelectDef] On node: ValVar ID: 1093
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 750-->1093
Node 750 already visited
On edge 750-->1093
Node 750 already visited
[SelectDef] On node: ValVar ID: 2006
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1943-->2006
[SelectDef] On node: ValVar ID: 1943
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1944-->1943
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1943
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1944 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1932-->1943
[SelectDef] On node: ValVar ID: 1932
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 750-->1932
Node 750 already visited
[SelectDef] On node: ValVar ID: 1911
   %24 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1849-->1911
[SelectDef] On node: ValVar ID: 1849
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1850-->1849
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1849
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1850 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1838-->1849
[SelectDef] On node: ValVar ID: 1838
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 750-->1838
Node 750 already visited
[SelectDef] On node: ValVar ID: 1818
   %34 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1729-->1818
[SelectDef] On node: ValVar ID: 1729
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1730-->1729
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1729
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1730 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1718-->1729
[SelectDef] On node: ValVar ID: 1718
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 750-->1718
Node 750 already visited
[SelectDef] On node: ValVar ID: 1699
   %41 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1597-->1699
[SelectDef] On node: ValVar ID: 1597
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1598-->1597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1597
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1598 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1584-->1597
[SelectDef] On node: ValVar ID: 1584
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 750-->1584
Node 750 already visited
On edge 2702-->1584
[SelectDef] On node: ValVar ID: 2702
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2679-->2702
[SelectDef] On node: ValVar ID: 2679
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2680-->2679
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2679
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2680 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2666-->2679
[SelectDef] On node: ValVar ID: 2666
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2547-->2666
[SelectDef] On node: ValVar ID: 2547
   %54 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2547
Node 2399 already visited
[SelectDef] On node: ValVar ID: 1649
   %20 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1597-->1649
Node 1597 already visited
[SelectDef] On node: ValVar ID: 1468
   %46 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1468
Node 1351 already visited
[SelectDef] On node: ValVar ID: 1431
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1431
Node 1351 already visited
[SelectDef] On node: ValVar ID: 1319
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1256-->1319
[SelectDef] On node: ValVar ID: 1256
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1257-->1256
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1256
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1257 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1245-->1256
[SelectDef] On node: ValVar ID: 1245
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 750-->1245
Node 750 already visited
[SelectDef] On node: ValVar ID: 1179
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1179
Node 1104 already visited
Found:
	- NodeId: 751 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1944 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1105 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1257 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1352 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1598 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1730 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1850 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2220 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2400 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2680 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 %5, i32* %i_instrumented, align 4
Target of   store i32 %5, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2231
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2232
[SelectDef] On node: FIObjVar ID: 2232 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2232 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2232 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2217
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2218
[SelectDef] On node: FIObjVar ID: 2218 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2218 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2218 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2229
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2230
[SelectDef] On node: FIObjVar ID: 2230 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2230 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2230 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i16 %conv_instrumented, i16* %type2_instrumented, align 4
Target of   store i16 %conv_instrumented, i16* %type2_instrumented, align 4 is   %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0 with PAG id 2264
Checking PagEdge node associated to:   %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0
Visist starts at PAGNode 2263
[SelectDef] On node: ValVar ID: 2263
   %14 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2229-->2263
[SelectDef] On node: ValVar ID: 2229
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2230-->2229
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2229
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2230 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2259-->2229
[SelectDef] On node: ValVar ID: 2259
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2257-->2259
[SelectDef] On node: ValVar ID: 2257
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2256-->2257
[SelectDef] On node: ValVar ID: 2256
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2255-->2256
[SelectDef] On node: ValVar ID: 2255
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2221-->2255
[SelectDef] On node: ValVar ID: 2221
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2222-->2221
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2221
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2222 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2204-->2221
[SelectDef] On node: ValVar ID: 2204
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1180-->2204
On edge 1320-->2204
On edge 1432-->2204
On edge 1469-->2204
On edge 1650-->2204
On edge 1700-->2204
On edge 1819-->2204
On edge 1912-->2204
On edge 2007-->2204
On edge 2494-->2204
[SelectDef] On node: ValVar ID: 2494
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2494
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 2007
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->2007
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
Node 754 already visited
[SelectDef] On node: ValVar ID: 1912
   %25 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1912
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
Node 754 already visited
[SelectDef] On node: ValVar ID: 1819
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1819
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1700
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1700
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 1650
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1650
Node 1599 already visited
[SelectDef] On node: ValVar ID: 1469
   %47 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1469
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1432
   %28 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1432
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1320
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1320
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
Node 754 already visited
[SelectDef] On node: ValVar ID: 1180
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1180
Node 1106 already visited
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1946 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1107 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1259 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1354 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1600 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1732 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1852 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2222 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2230 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2402 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2682 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4
Target of   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4 is   %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2 with PAG id 2274
Checking PagEdge node associated to:   %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2
Visist starts at PAGNode 2273
[SelectDef] On node: ValVar ID: 2273
   %18 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2229-->2273
[SelectDef] On node: ValVar ID: 2229
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2230-->2229
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2229
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2230 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2259-->2229
[SelectDef] On node: ValVar ID: 2259
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2257-->2259
[SelectDef] On node: ValVar ID: 2257
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2256-->2257
[SelectDef] On node: ValVar ID: 2256
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2255-->2256
[SelectDef] On node: ValVar ID: 2255
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2221-->2255
[SelectDef] On node: ValVar ID: 2221
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2222-->2221
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2221
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2222 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2204-->2221
[SelectDef] On node: ValVar ID: 2204
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1180-->2204
On edge 1320-->2204
On edge 1432-->2204
On edge 1469-->2204
On edge 1650-->2204
On edge 1700-->2204
On edge 1819-->2204
On edge 1912-->2204
On edge 2007-->2204
On edge 2494-->2204
[SelectDef] On node: ValVar ID: 2494
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2494
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 2007
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->2007
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
Node 754 already visited
[SelectDef] On node: ValVar ID: 1912
   %25 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1912
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
Node 754 already visited
[SelectDef] On node: ValVar ID: 1819
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1819
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1700
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1700
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 1650
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1650
Node 1599 already visited
[SelectDef] On node: ValVar ID: 1469
   %47 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1469
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1432
   %28 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1432
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1320
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1320
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
Node 754 already visited
[SelectDef] On node: ValVar ID: 1180
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1180
Node 1106 already visited
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1946 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1107 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1259 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1354 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1600 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1732 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1852 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2222 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2230 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2402 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2682 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4
Target of   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4 is   %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3 with PAG id 2284
Checking PagEdge node associated to:   %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3
Visist starts at PAGNode 2283
[SelectDef] On node: ValVar ID: 2283
   %22 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2229-->2283
[SelectDef] On node: ValVar ID: 2229
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2230-->2229
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2229
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2230 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2259-->2229
[SelectDef] On node: ValVar ID: 2259
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2257-->2259
[SelectDef] On node: ValVar ID: 2257
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2256-->2257
[SelectDef] On node: ValVar ID: 2256
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2255-->2256
[SelectDef] On node: ValVar ID: 2255
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2221-->2255
[SelectDef] On node: ValVar ID: 2221
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2222-->2221
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2221
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2222 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2204-->2221
[SelectDef] On node: ValVar ID: 2204
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1180-->2204
On edge 1320-->2204
On edge 1432-->2204
On edge 1469-->2204
On edge 1650-->2204
On edge 1700-->2204
On edge 1819-->2204
On edge 1912-->2204
On edge 2007-->2204
On edge 2494-->2204
[SelectDef] On node: ValVar ID: 2494
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2494
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 2007
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->2007
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
Node 754 already visited
[SelectDef] On node: ValVar ID: 1912
   %25 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1912
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
Node 754 already visited
[SelectDef] On node: ValVar ID: 1819
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1819
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1700
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1700
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 1650
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1650
Node 1599 already visited
[SelectDef] On node: ValVar ID: 1469
   %47 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1469
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1432
   %28 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1432
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1320
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1320
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
Node 754 already visited
[SelectDef] On node: ValVar ID: 1180
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1180
Node 1106 already visited
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1946 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1107 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1259 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1354 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1600 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1732 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1852 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2222 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2230 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2402 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2682 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i16 0, i16* %size_instrumented, align 2
Target of   store i16 0, i16* %size_instrumented, align 2 is   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1 with PAG id 2287
Checking PagEdge node associated to:   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1
Visist starts at PAGNode 2286
[SelectDef] On node: ValVar ID: 2286
   %23 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2229-->2286
[SelectDef] On node: ValVar ID: 2229
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2230-->2229
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2229
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2230 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2259-->2229
[SelectDef] On node: ValVar ID: 2259
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2257-->2259
[SelectDef] On node: ValVar ID: 2257
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2256-->2257
[SelectDef] On node: ValVar ID: 2256
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2255-->2256
[SelectDef] On node: ValVar ID: 2255
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2221-->2255
[SelectDef] On node: ValVar ID: 2221
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2222-->2221
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2221
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2222 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2204-->2221
[SelectDef] On node: ValVar ID: 2204
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1180-->2204
On edge 1320-->2204
On edge 1432-->2204
On edge 1469-->2204
On edge 1650-->2204
On edge 1700-->2204
On edge 1819-->2204
On edge 1912-->2204
On edge 2007-->2204
On edge 2494-->2204
[SelectDef] On node: ValVar ID: 2494
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2494
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 2007
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->2007
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
Node 754 already visited
[SelectDef] On node: ValVar ID: 1912
   %25 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1912
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
Node 754 already visited
[SelectDef] On node: ValVar ID: 1819
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1819
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1700
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1700
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 1650
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1650
Node 1599 already visited
[SelectDef] On node: ValVar ID: 1469
   %47 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1469
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1432
   %28 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1432
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1320
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1320
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
Node 754 already visited
[SelectDef] On node: ValVar ID: 1180
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1180
Node 1106 already visited
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1946 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1107 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1259 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1354 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1600 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1732 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1852 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2222 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2230 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2402 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2682 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %inc7_instrumented, i32* %taglevel_instrumented, align 4
Target of   store i32 %inc7_instrumented, i32* %taglevel_instrumented, align 4 is   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %25, i32 0, i32 2 with PAG id 2292
Checking PagEdge node associated to:   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %25, i32 0, i32 2
Visist starts at PAGNode 2291
[SelectDef] On node: ValVar ID: 2291
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2219-->2291
[SelectDef] On node: ValVar ID: 2219
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2220-->2219
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2219
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2220 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2203-->2219
[SelectDef] On node: ValVar ID: 2203
 %struct.sxml_t* %state { 0th arg state_pushtoken_instrumented  }
On edge 1179-->2203
On edge 1319-->2203
On edge 1431-->2203
On edge 1468-->2203
On edge 1649-->2203
On edge 1699-->2203
On edge 1818-->2203
On edge 1911-->2203
On edge 2006-->2203
On edge 2493-->2203
[SelectDef] On node: ValVar ID: 2493
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2493
[SelectDef] On node: ValVar ID: 2399
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2400-->2399
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2399
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2400 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2388-->2399
[SelectDef] On node: ValVar ID: 2388
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1191-->2388
On edge 1440-->2388
[SelectDef] On node: ValVar ID: 1440
   %34 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1440
[SelectDef] On node: ValVar ID: 1351
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1352-->1351
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1351
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1352 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1340-->1351
[SelectDef] On node: ValVar ID: 1340
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 750-->1340
On edge 750-->1340
Node 750 already visited
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 1191
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1191
[SelectDef] On node: ValVar ID: 1104
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1105-->1104
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1104
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1105 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1093-->1104
[SelectDef] On node: ValVar ID: 1093
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 750-->1093
Node 750 already visited
On edge 750-->1093
Node 750 already visited
[SelectDef] On node: ValVar ID: 2006
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1943-->2006
[SelectDef] On node: ValVar ID: 1943
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1944-->1943
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1943
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1944 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1932-->1943
[SelectDef] On node: ValVar ID: 1932
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 750-->1932
Node 750 already visited
[SelectDef] On node: ValVar ID: 1911
   %24 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1849-->1911
[SelectDef] On node: ValVar ID: 1849
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1850-->1849
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1849
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1850 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1838-->1849
[SelectDef] On node: ValVar ID: 1838
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 750-->1838
Node 750 already visited
[SelectDef] On node: ValVar ID: 1818
   %34 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1729-->1818
[SelectDef] On node: ValVar ID: 1729
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1730-->1729
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1729
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1730 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1718-->1729
[SelectDef] On node: ValVar ID: 1718
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 750-->1718
Node 750 already visited
[SelectDef] On node: ValVar ID: 1699
   %41 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1597-->1699
[SelectDef] On node: ValVar ID: 1597
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1598-->1597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1597
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1598 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1584-->1597
[SelectDef] On node: ValVar ID: 1584
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 750-->1584
Node 750 already visited
On edge 2702-->1584
[SelectDef] On node: ValVar ID: 2702
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2679-->2702
[SelectDef] On node: ValVar ID: 2679
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2680-->2679
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2679
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2680 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2666-->2679
[SelectDef] On node: ValVar ID: 2666
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2547-->2666
[SelectDef] On node: ValVar ID: 2547
   %54 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2547
Node 2399 already visited
[SelectDef] On node: ValVar ID: 1649
   %20 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1597-->1649
Node 1597 already visited
[SelectDef] On node: ValVar ID: 1468
   %46 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1468
Node 1351 already visited
[SelectDef] On node: ValVar ID: 1431
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1431
Node 1351 already visited
[SelectDef] On node: ValVar ID: 1319
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1256-->1319
[SelectDef] On node: ValVar ID: 1256
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1257-->1256
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1256
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1257 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1245-->1256
[SelectDef] On node: ValVar ID: 1245
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 750-->1245
Node 750 already visited
[SelectDef] On node: ValVar ID: 1179
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1179
Node 1104 already visited
Found:
	- NodeId: 751 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1944 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1105 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1257 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1352 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1598 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1730 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1850 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2220 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2400 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2680 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 %dec_instrumented, i32* %taglevel14_instrumented, align 4
Target of   store i32 %dec_instrumented, i32* %taglevel14_instrumented, align 4 is   %taglevel14_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %32, i32 0, i32 2 with PAG id 2312
Checking PagEdge node associated to:   %taglevel14_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %32, i32 0, i32 2
Visist starts at PAGNode 2311
[SelectDef] On node: ValVar ID: 2311
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2219-->2311
[SelectDef] On node: ValVar ID: 2219
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2220-->2219
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2219
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2220 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2203-->2219
[SelectDef] On node: ValVar ID: 2203
 %struct.sxml_t* %state { 0th arg state_pushtoken_instrumented  }
On edge 1179-->2203
On edge 1319-->2203
On edge 1431-->2203
On edge 1468-->2203
On edge 1649-->2203
On edge 1699-->2203
On edge 1818-->2203
On edge 1911-->2203
On edge 2006-->2203
On edge 2493-->2203
[SelectDef] On node: ValVar ID: 2493
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2493
[SelectDef] On node: ValVar ID: 2399
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2400-->2399
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2399
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2400 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2388-->2399
[SelectDef] On node: ValVar ID: 2388
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1191-->2388
On edge 1440-->2388
[SelectDef] On node: ValVar ID: 1440
   %34 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1440
[SelectDef] On node: ValVar ID: 1351
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1352-->1351
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1351
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1352 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1340-->1351
[SelectDef] On node: ValVar ID: 1340
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 750-->1340
On edge 750-->1340
Node 750 already visited
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 1191
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1191
[SelectDef] On node: ValVar ID: 1104
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1105-->1104
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1104
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1105 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1093-->1104
[SelectDef] On node: ValVar ID: 1093
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 750-->1093
Node 750 already visited
On edge 750-->1093
Node 750 already visited
[SelectDef] On node: ValVar ID: 2006
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1943-->2006
[SelectDef] On node: ValVar ID: 1943
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1944-->1943
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1943
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1944 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1932-->1943
[SelectDef] On node: ValVar ID: 1932
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 750-->1932
Node 750 already visited
[SelectDef] On node: ValVar ID: 1911
   %24 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1849-->1911
[SelectDef] On node: ValVar ID: 1849
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1850-->1849
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1849
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1850 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1838-->1849
[SelectDef] On node: ValVar ID: 1838
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 750-->1838
Node 750 already visited
[SelectDef] On node: ValVar ID: 1818
   %34 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1729-->1818
[SelectDef] On node: ValVar ID: 1729
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1730-->1729
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1729
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1730 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1718-->1729
[SelectDef] On node: ValVar ID: 1718
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 750-->1718
Node 750 already visited
[SelectDef] On node: ValVar ID: 1699
   %41 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1597-->1699
[SelectDef] On node: ValVar ID: 1597
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1598-->1597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1597
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1598 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1584-->1597
[SelectDef] On node: ValVar ID: 1584
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 750-->1584
Node 750 already visited
On edge 2702-->1584
[SelectDef] On node: ValVar ID: 2702
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2679-->2702
[SelectDef] On node: ValVar ID: 2679
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2680-->2679
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2679
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2680 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2666-->2679
[SelectDef] On node: ValVar ID: 2666
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2547-->2666
[SelectDef] On node: ValVar ID: 2547
   %54 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2547
Node 2399 already visited
[SelectDef] On node: ValVar ID: 1649
   %20 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1597-->1649
Node 1597 already visited
[SelectDef] On node: ValVar ID: 1468
   %46 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1468
Node 1351 already visited
[SelectDef] On node: ValVar ID: 1431
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1431
Node 1351 already visited
[SelectDef] On node: ValVar ID: 1319
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1256-->1319
[SelectDef] On node: ValVar ID: 1256
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1257-->1256
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1256
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1257 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1245-->1256
[SelectDef] On node: ValVar ID: 1245
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 750-->1245
Node 750 already visited
[SelectDef] On node: ValVar ID: 1179
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1179
Node 1104 already visited
Found:
	- NodeId: 751 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1944 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1105 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1257 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1352 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1598 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1730 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1850 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2220 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2400 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2680 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2217
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2218
[SelectDef] On node: FIObjVar ID: 2218 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2218 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2218 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %38, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %38, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_find_notalnum_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2337
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2338
[SelectDef] On node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2338 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2339
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2340
[SelectDef] On node: FIObjVar ID: 2340 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2340 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2340 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %it_instrumented, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2341
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2342
[SelectDef] On node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2342 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2341
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2342
[SelectDef] On node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2342 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %20, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %20, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_attributes_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 2399
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 2400
[SelectDef] On node: FIObjVar ID: 2400 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2400 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 2400 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 2401
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 2402
[SelectDef] On node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 2402 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 2403
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2404
[SelectDef] On node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2404 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 2405
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2406
[SelectDef] On node: FIObjVar ID: 2406 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2406 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2406 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 2407
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2408
[SelectDef] On node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2408 Instr:   %name_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %15, i32* %ntokens_instrumented, align 4
Target of   store i32 %15, i32* %ntokens_instrumented, align 4 is   %ntokens_instrumented = alloca i32, align 4 with PAG id 2409
Checking PagEdge node associated to:   %ntokens_instrumented = alloca i32, align 4
Visist starts at PAGNode 2410
[SelectDef] On node: FIObjVar ID: 2410 (base object)
   %ntokens_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2410 (base object)
   %ntokens_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2410 Instr:   %ntokens_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %eq_instrumented, align 4 is   %eq_instrumented = alloca i8*, align 4 with PAG id 2411
Checking PagEdge node associated to:   %eq_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2412
[SelectDef] On node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2412 Instr:   %eq_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2397
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2398
[SelectDef] On node: FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2398 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call11_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 2413
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2414
[SelectDef] On node: FIObjVar ID: 2414 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2414 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2414 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call14_instrumented, i8** %quot_instrumented, align 4
Target of   store i8* %call14_instrumented, i8** %quot_instrumented, align 4 is   %quot_instrumented = alloca i8*, align 4 with PAG id 2415
Checking PagEdge node associated to:   %quot_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2416
[SelectDef] On node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2416 Instr:   %quot_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2397
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2398
[SelectDef] On node: FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2398 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2397
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2398
[SelectDef] On node: FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2398 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr29_instrumented, i8** %value_instrumented, align 4
Target of   store i8* %add.ptr29_instrumented, i8** %value_instrumented, align 4 is   %value_instrumented = alloca i8*, align 4 with PAG id 2417
Checking PagEdge node associated to:   %value_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2418
[SelectDef] On node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2418 Instr:   %value_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call31_instrumented, i8** %quot_instrumented, align 4
Target of   store i8* %call31_instrumented, i8** %quot_instrumented, align 4 is   %quot_instrumented = alloca i8*, align 4 with PAG id 2415
Checking PagEdge node associated to:   %quot_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2416
[SelectDef] On node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2416 Instr:   %quot_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2397
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2398
[SelectDef] On node: FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2398 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call37_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call37_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 2419
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 2420
[SelectDef] On node: FIObjVar ID: 2420 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2420 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2420 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %58, i32* %retval_instrumented, align 4
Target of   store i32 %58, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2397
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2398
[SelectDef] On node: FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2398 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call43_instrumented, i8** %name_instrumented, align 4
Target of   store i8* %call43_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 2407
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2408
[SelectDef] On node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2408 Instr:   %name_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %add.ptr44_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %add.ptr44_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2421
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2422
[SelectDef] On node: FIObjVar ID: 2422 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2422 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2422 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i16 %conv47_instrumented, i16* %size_instrumented, align 2
Target of   store i16 %conv47_instrumented, i16* %size_instrumented, align 2 is   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %67, i32 0, i32 1 with PAG id 2580
Checking PagEdge node associated to:   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %67, i32 0, i32 1
Visist starts at PAGNode 2579
[SelectDef] On node: ValVar ID: 2579
   %67 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2421-->2579
[SelectDef] On node: ValVar ID: 2421
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2422-->2421
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2421
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2422 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2571-->2421
[SelectDef] On node: ValVar ID: 2571
   %add.ptr44_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %62, i32 %sub_instrumented 
On edge 2568-->2571
[SelectDef] On node: ValVar ID: 2568
   %62 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2567-->2568
[SelectDef] On node: ValVar ID: 2567
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %61, i32 0, i32 2 
On edge 2566-->2567
[SelectDef] On node: ValVar ID: 2566
   %61 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2566
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1107 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1354 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2402 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2422 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %call48_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call48_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2397
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2398
[SelectDef] On node: FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2398 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %75, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %75, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_rtrim_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2607
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2608
[SelectDef] On node: FIObjVar ID: 2608 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2608 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2608 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2609
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2610
[SelectDef] On node: FIObjVar ID: 2610 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2610 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2610 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %it_instrumented, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2611
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2612
[SelectDef] On node: FIObjVar ID: 2612 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2612 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2612 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4 is   %prev_instrumented = alloca i8*, align 4 with PAG id 2613
Checking PagEdge node associated to:   %prev_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2614
[SelectDef] On node: FIObjVar ID: 2614 (base object)
   %prev_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2614 (base object)
   %prev_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2614 Instr:   %prev_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %15, i8** %retval_instrumented, align 4
Target of   store i8* %15, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2605
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2606
[SelectDef] On node: FIObjVar ID: 2606 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2606 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2606 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %16, i8** %it_instrumented, align 4
Target of   store i8* %16, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2611
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2612
[SelectDef] On node: FIObjVar ID: 2612 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2612 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2612 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %17, i8** %retval_instrumented, align 4
Target of   store i8* %17, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2605
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2606
[SelectDef] On node: FIObjVar ID: 2606 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2606 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2606 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %22, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %22, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_attrvalue_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 2679
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 2680
[SelectDef] On node: FIObjVar ID: 2680 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2680 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 2680 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 2681
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 2682
[SelectDef] On node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 2682 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2683
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2684
[SelectDef] On node: FIObjVar ID: 2684 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2684 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2684 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 2685
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 2686
[SelectDef] On node: FIObjVar ID: 2686 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2686 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2686 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %13, i32* %retval_instrumented, align 4
Target of   store i32 %13, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2677
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2678
[SelectDef] On node: FIObjVar ID: 2678 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2678 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2678 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2677
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2678
[SelectDef] On node: FIObjVar ID: 2678 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2678 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2678 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %18, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %18, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function print_prettyxml_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2737
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2738
[SelectDef] On node: FIObjVar ID: 2738 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2738 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2738 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4 is   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2739
Checking PagEdge node associated to:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2740
[SelectDef] On node: FIObjVar ID: 2740 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2740 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2740 Instr:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4
Target of   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4 is   %num_tokens.addr_instrumented = alloca i32, align 4 with PAG id 2741
Checking PagEdge node associated to:   %num_tokens.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2742
[SelectDef] On node: FIObjVar ID: 2742 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2742 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2742 Instr:   %num_tokens.addr_instrumented = alloca i32, align 4
Finding defs for:   store i32* %indentlevel, i32** %indentlevel.addr_instrumented, align 4
Target of   store i32* %indentlevel, i32** %indentlevel.addr_instrumented, align 4 is   %indentlevel.addr_instrumented = alloca i32*, align 4 with PAG id 2743
Checking PagEdge node associated to:   %indentlevel.addr_instrumented = alloca i32*, align 4
Visist starts at PAGNode 2744
[SelectDef] On node: FIObjVar ID: 2744 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4 
Start node is a Def already, adding FIObjVar ID: 2744 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4  to result
Found:
	- NodeId: 2744 Instr:   %indentlevel.addr_instrumented = alloca i32*, align 4
Finding defs for:   store i32 0, i32* %i_instrumented, align 4
Target of   store i32 0, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2745
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2746
[SelectDef] On node: FIObjVar ID: 2746 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2746 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2746 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2747
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2748
[SelectDef] On node: FIObjVar ID: 2748 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2748 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2748 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %10, align 4
Target of   store i32 %inc_instrumented, i32* %10, align 4 is   %10 = load i32*, i32** %indentlevel.addr_instrumented, align 4 with PAG id 2771
Checking PagEdge node associated to:   %10 = load i32*, i32** %indentlevel.addr_instrumented, align 4
Visist starts at PAGNode 2743
[SelectDef] On node: ValVar ID: 2743
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2744-->2743
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2743
	-  %indentlevel.addr_instrumented = alloca i32*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2744 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2728-->2743
[SelectDef] On node: ValVar ID: 2728
 i32* %indentlevel { 3rd arg print_prettyxml_instrumented  }
On edge 365-->2728
On edge 365-->2728
Node 365 already visited
On edge 365-->2728
Node 365 already visited
[SelectDef] On node: ValVar ID: 365
   %indent = alloca i32, align 4 
On edge 366-->365
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 365
	-  %indent = alloca i32, align 4
[SelectDefs] Adding node: FIObjVar ID: 366 (base object)
   %indent = alloca i32, align 4 
On edge 261-->365
[SelectDef] On node: ValVar ID: 261
 i32 0 { constant data }
On edge 3-->261
Discarding edge
Found:
	- NodeId: 366 Instr:   %indent = alloca i32, align 4
	- NodeId: 2744 Instr:   %indentlevel.addr_instrumented = alloca i32*, align 4
Finding defs for:   store i32 0, i32* %j_instrumented, align 4
Target of   store i32 0, i32* %j_instrumented, align 4 is   %j_instrumented = alloca i32, align 4 with PAG id 2749
Checking PagEdge node associated to:   %j_instrumented = alloca i32, align 4
Visist starts at PAGNode 2750
[SelectDef] On node: FIObjVar ID: 2750 (base object)
   %j_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2750 (base object)
   %j_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2750 Instr:   %j_instrumented = alloca i32, align 4
Finding defs for:   store i32 %add14_instrumented, i32* %j_instrumented, align 4
Target of   store i32 %add14_instrumented, i32* %j_instrumented, align 4 is   %j_instrumented = alloca i32, align 4 with PAG id 2749
Checking PagEdge node associated to:   %j_instrumented = alloca i32, align 4
Visist starts at PAGNode 2750
[SelectDef] On node: FIObjVar ID: 2750 (base object)
   %j_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2750 (base object)
   %j_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2750 Instr:   %j_instrumented = alloca i32, align 4
Finding defs for:   store i32 %inc16_instrumented, i32* %j_instrumented, align 4
Target of   store i32 %inc16_instrumented, i32* %j_instrumented, align 4 is   %j_instrumented = alloca i32, align 4 with PAG id 2749
Checking PagEdge node associated to:   %j_instrumented = alloca i32, align 4
Visist starts at PAGNode 2750
[SelectDef] On node: FIObjVar ID: 2750 (base object)
   %j_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2750 (base object)
   %j_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2750 Instr:   %j_instrumented = alloca i32, align 4
Finding defs for:   store i32 %dec_instrumented, i32* %33, align 4
Target of   store i32 %dec_instrumented, i32* %33, align 4 is   %33 = load i32*, i32** %indentlevel.addr_instrumented, align 4 with PAG id 2833
Checking PagEdge node associated to:   %33 = load i32*, i32** %indentlevel.addr_instrumented, align 4
Visist starts at PAGNode 2743
[SelectDef] On node: ValVar ID: 2743
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2744-->2743
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2743
	-  %indentlevel.addr_instrumented = alloca i32*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2744 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2728-->2743
[SelectDef] On node: ValVar ID: 2728
 i32* %indentlevel { 3rd arg print_prettyxml_instrumented  }
On edge 365-->2728
On edge 365-->2728
Node 365 already visited
On edge 365-->2728
Node 365 already visited
[SelectDef] On node: ValVar ID: 365
   %indent = alloca i32, align 4 
On edge 366-->365
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 365
	-  %indent = alloca i32, align 4
[SelectDefs] Adding node: FIObjVar ID: 366 (base object)
   %indent = alloca i32, align 4 
On edge 261-->365
[SelectDef] On node: ValVar ID: 261
 i32 0 { constant data }
On edge 3-->261
Discarding edge
Found:
	- NodeId: 366 Instr:   %indent = alloca i32, align 4
	- NodeId: 2744 Instr:   %indentlevel.addr_instrumented = alloca i32*, align 4
Finding defs for:   store i32 %add23_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %add23_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2745
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2746
[SelectDef] On node: FIObjVar ID: 2746 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2746 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2746 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i32 %inc25_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %inc25_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2745
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2746
[SelectDef] On node: FIObjVar ID: 2746 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2746 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2746 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i16 %46, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %46, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function count_lines_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2875
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2876
[SelectDef] On node: FIObjVar ID: 2876 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2876 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2876 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Target of   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 is   %bufferlen.addr_instrumented = alloca i32, align 4 with PAG id 2877
Checking PagEdge node associated to:   %bufferlen.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2878
[SelectDef] On node: FIObjVar ID: 2878 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2878 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2878 Instr:   %bufferlen.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 2879
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2880
[SelectDef] On node: FIObjVar ID: 2880 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2880 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2880 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %6, i8** %it_instrumented, align 4
Target of   store i8* %6, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2881
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2882
[SelectDef] On node: FIObjVar ID: 2882 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2882 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2882 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i32 0, i32* %i_instrumented, align 4
Target of   store i32 0, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2883
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2884
[SelectDef] On node: FIObjVar ID: 2884 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2884 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2884 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2881
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2882
[SelectDef] On node: FIObjVar ID: 2882 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2882 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2882 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %15, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %15, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2881
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2882
[SelectDef] On node: FIObjVar ID: 2882 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2882 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2882 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %inc_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2883
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2884
[SelectDef] On node: FIObjVar ID: 2884 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2884 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2884 Instr:   %i_instrumented = alloca i32, align 4
Checking function print_tokenvalue_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2933
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2934
[SelectDef] On node: FIObjVar ID: 2934 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2934 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2934 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %token, %struct.sxmltok_t** %token.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %token, %struct.sxmltok_t** %token.addr_instrumented, align 4 is   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2935
Checking PagEdge node associated to:   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2936
[SelectDef] On node: FIObjVar ID: 2936 (base object)
   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2936 (base object)
   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2936 Instr:   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i16 %15, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %15, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function print_chartokens_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2977
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2978
[SelectDef] On node: FIObjVar ID: 2978 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2978 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2978 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4 is   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2979
Checking PagEdge node associated to:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2980
[SelectDef] On node: FIObjVar ID: 2980 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2980 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2980 Instr:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4
Target of   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4 is   %num_tokens.addr_instrumented = alloca i32, align 4 with PAG id 2981
Checking PagEdge node associated to:   %num_tokens.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2982
[SelectDef] On node: FIObjVar ID: 2982 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2982 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2982 Instr:   %num_tokens.addr_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %i_instrumented, align 4
Target of   store i32 0, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2983
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2984
[SelectDef] On node: FIObjVar ID: 2984 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2984 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2984 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2987
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2988
[SelectDef] On node: FIObjVar ID: 2988 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2988 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2988 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %10, i32* %retval_instrumented, align 4
Target of   store i32 %10, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2975
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2976
[SelectDef] On node: FIObjVar ID: 2976 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2976 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2976 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr3_instrumented, i8** %ampr_instrumented, align 4
Target of   store i8* %add.ptr3_instrumented, i8** %ampr_instrumented, align 4 is   %ampr_instrumented = alloca i8*, align 4 with PAG id 2985
Checking PagEdge node associated to:   %ampr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2986
[SelectDef] On node: FIObjVar ID: 2986 (base object)
   %ampr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2986 (base object)
   %ampr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2986 Instr:   %ampr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %inc_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2983
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2984
[SelectDef] On node: FIObjVar ID: 2984 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2984 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2984 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i32 %39, i32* %retval_instrumented, align 4
Target of   store i32 %39, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2975
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2976
[SelectDef] On node: FIObjVar ID: 2976 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2976 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2976 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %44, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %44, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function hook_exit
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i16 %7, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %7, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function llvm.memcpy.p0i8.p0i8.i32
Checking function fprintf
Checking function __assert_fail
Checking function strlen
Checking function memchr
Checking function memcmp
Checking function printf
Checking function NameStartChar
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %c, i32* %c.addr, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 195
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 196
[SelectDef] On node: FIObjVar ID: 196 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 196 (base object)
   %c.addr = alloca i32, align 4  to result
Found:
	- NodeId: 196 Instr:   %c.addr = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval, align 4
Target of   store i32 1, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 193
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 194
[SelectDef] On node: FIObjVar ID: 194 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 194 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 194 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 %lor.ext, i32* %retval, align 4
Target of   store i32 %lor.ext, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 193
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 194
[SelectDef] On node: FIObjVar ID: 194 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 194 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 194 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i16 %17, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %17, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function NameChar
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %c, i32* %c.addr, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 255
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 256
[SelectDef] On node: FIObjVar ID: 256 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 256 (base object)
   %c.addr = alloca i32, align 4  to result
Found:
	- NodeId: 256 Instr:   %c.addr = alloca i32, align 4
Finding defs for:   store i16 %19, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %19, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function WhiteSpace
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %c, i32* %c.addr, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 322
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 323
[SelectDef] On node: FIObjVar ID: 323 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 323 (base object)
   %c.addr = alloca i32, align 4  to result
Found:
	- NodeId: 323 Instr:   %c.addr = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval, align 4
Target of   store i32 1, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 320
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 321
[SelectDef] On node: FIObjVar ID: 321 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 321 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 321 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval, align 4
Target of   store i32 0, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 320
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 321
[SelectDef] On node: FIObjVar ID: 321 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 321 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 321 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i16 %9, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %9, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function main
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 0, i32* %retval, align 4
Target of   store i32 0, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 349
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 350
[SelectDef] On node: FIObjVar ID: 350 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 350 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 350 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 %argc, i32* %argc.addr, align 4
Target of   store i32 %argc, i32* %argc.addr, align 4 is   %argc.addr = alloca i32, align 4 with PAG id 351
Checking PagEdge node associated to:   %argc.addr = alloca i32, align 4
Visist starts at PAGNode 352
[SelectDef] On node: FIObjVar ID: 352 (base object)
   %argc.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 352 (base object)
   %argc.addr = alloca i32, align 4  to result
Found:
	- NodeId: 352 Instr:   %argc.addr = alloca i32, align 4
Finding defs for:   store i8** %argv, i8*** %argv.addr, align 4
Target of   store i8** %argv, i8*** %argv.addr, align 4 is   %argv.addr = alloca i8**, align 4 with PAG id 353
Checking PagEdge node associated to:   %argv.addr = alloca i8**, align 4
Visist starts at PAGNode 354
[SelectDef] On node: FIObjVar ID: 354 (base object)
   %argv.addr = alloca i8**, align 4 
Start node is a Def already, adding FIObjVar ID: 354 (base object)
   %argv.addr = alloca i8**, align 4  to result
Found:
	- NodeId: 354 Instr:   %argv.addr = alloca i8**, align 4
Finding defs for:   store i32 0, i32* %bufferlen, align 4
Target of   store i32 0, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 361
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 362
[SelectDef] On node: FIObjVar ID: 362 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 362 (base object)
   %bufferlen = alloca i32, align 4  to result
Found:
	- NodeId: 362 Instr:   %bufferlen = alloca i32, align 4
Finding defs for:   store i32 0, i32* %indent, align 4
Target of   store i32 0, i32* %indent, align 4 is   %indent = alloca i32, align 4 with PAG id 365
Checking PagEdge node associated to:   %indent = alloca i32, align 4
Visist starts at PAGNode 366
[SelectDef] On node: FIObjVar ID: 366 (base object)
   %indent = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 366 (base object)
   %indent = alloca i32, align 4  to result
Found:
	- NodeId: 366 Instr:   %indent = alloca i32, align 4
Finding defs for:   store i32 1, i32* %lineno, align 4
Target of   store i32 1, i32* %lineno, align 4 is   %lineno = alloca i32, align 4 with PAG id 367
Checking PagEdge node associated to:   %lineno = alloca i32, align 4
Visist starts at PAGNode 368
[SelectDef] On node: FIObjVar ID: 368 (base object)
   %lineno = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 368 (base object)
   %lineno = alloca i32, align 4  to result
Found:
	- NodeId: 368 Instr:   %lineno = alloca i32, align 4
Finding defs for:   store i32 1, i32* %i, align 4
Target of   store i32 1, i32* %i, align 4 is   %i = alloca i32, align 4 with PAG id 377
Checking PagEdge node associated to:   %i = alloca i32, align 4
Visist starts at PAGNode 378
[SelectDef] On node: FIObjVar ID: 378 (base object)
   %i = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 378 (base object)
   %i = alloca i32, align 4  to result
Found:
	- NodeId: 378 Instr:   %i = alloca i32, align 4
Finding defs for:   store %struct._IO_FILE* %call5, %struct._IO_FILE** %file, align 4
Target of   store %struct._IO_FILE* %call5, %struct._IO_FILE** %file, align 4 is   %file = alloca %struct._IO_FILE*, align 4 with PAG id 373
Checking PagEdge node associated to:   %file = alloca %struct._IO_FILE*, align 4
Visist starts at PAGNode 374
[SelectDef] On node: FIObjVar ID: 374 (base object)
   %file = alloca %struct._IO_FILE*, align 4 
Start node is a Def already, adding FIObjVar ID: 374 (base object)
   %file = alloca %struct._IO_FILE*, align 4  to result
Found:
	- NodeId: 374 Instr:   %file = alloca %struct._IO_FILE*, align 4
Finding defs for:   store i32 %call14, i32* %err, align 4
Target of   store i32 %call14, i32* %err, align 4 is   %err = alloca i32, align 4 with PAG id 379
Checking PagEdge node associated to:   %err = alloca i32, align 4
Visist starts at PAGNode 380
[SelectDef] On node: FIObjVar ID: 380 (base object)
   %err = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 380 (base object)
   %err = alloca i32, align 4  to result
Found:
	- NodeId: 380 Instr:   %err = alloca i32, align 4
Finding defs for:   store i32 0, i32* %ntokens18, align 4
Target of   store i32 0, i32* %ntokens18, align 4 is   %ntokens18 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1 with PAG id 462
Checking PagEdge node associated to:   %ntokens18 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1
Visist starts at PAGNode 371
[SelectDef] On node: ValVar ID: 371
   %parser = alloca %struct.sxml_t, align 4 
On edge 372-->371
[SelectDefs] Adding node: FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 372 Instr:   %parser = alloca %struct.sxml_t, align 4
Finding defs for:   store i32 0, i32* %ntokens23, align 4
Target of   store i32 0, i32* %ntokens23, align 4 is   %ntokens23 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1 with PAG id 471
Checking PagEdge node associated to:   %ntokens23 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1
Visist starts at PAGNode 371
[SelectDef] On node: ValVar ID: 371
   %parser = alloca %struct.sxml_t, align 4 
On edge 372-->371
[SelectDefs] Adding node: FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 372 Instr:   %parser = alloca %struct.sxml_t, align 4
Finding defs for:   store i32 %add, i32* %lineno, align 4
Target of   store i32 %add, i32* %lineno, align 4 is   %lineno = alloca i32, align 4 with PAG id 367
Checking PagEdge node associated to:   %lineno = alloca i32, align 4
Visist starts at PAGNode 368
[SelectDef] On node: FIObjVar ID: 368 (base object)
   %lineno = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 368 (base object)
   %lineno = alloca i32, align 4  to result
Found:
	- NodeId: 368 Instr:   %lineno = alloca i32, align 4
Finding defs for:   store i32 %sub, i32* %bufferlen, align 4
Target of   store i32 %sub, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 361
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 362
[SelectDef] On node: FIObjVar ID: 362 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 362 (base object)
   %bufferlen = alloca i32, align 4  to result
Found:
	- NodeId: 362 Instr:   %bufferlen = alloca i32, align 4
Finding defs for:   store i32 %call36, i32* %len, align 4
Target of   store i32 %call36, i32* %len, align 4 is   %len = alloca i32, align 4 with PAG id 381
Checking PagEdge node associated to:   %len = alloca i32, align 4
Visist starts at PAGNode 382
[SelectDef] On node: FIObjVar ID: 382 (base object)
   %len = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 382 (base object)
   %len = alloca i32, align 4  to result
Found:
	- NodeId: 382 Instr:   %len = alloca i32, align 4
Finding defs for:   store i32 %add41, i32* %bufferlen, align 4
Target of   store i32 %add41, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 361
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 362
[SelectDef] On node: FIObjVar ID: 362 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 362 (base object)
   %bufferlen = alloca i32, align 4  to result
Found:
	- NodeId: 362 Instr:   %bufferlen = alloca i32, align 4
Finding defs for:   store i32 0, i32* %bufferpos42, align 4
Target of   store i32 0, i32* %bufferpos42, align 4 is   %bufferpos42 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0 with PAG id 533
Checking PagEdge node associated to:   %bufferpos42 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Visist starts at PAGNode 371
[SelectDef] On node: ValVar ID: 371
   %parser = alloca %struct.sxml_t, align 4 
On edge 372-->371
[SelectDefs] Adding node: FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 372 Instr:   %parser = alloca %struct.sxml_t, align 4
Finding defs for:   store i32 %add47, i32* %lineno, align 4
Target of   store i32 %add47, i32* %lineno, align 4 is   %lineno = alloca i32, align 4 with PAG id 367
Checking PagEdge node associated to:   %lineno = alloca i32, align 4
Visist starts at PAGNode 368
[SelectDef] On node: FIObjVar ID: 368 (base object)
   %lineno = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 368 (base object)
   %lineno = alloca i32, align 4  to result
Found:
	- NodeId: 368 Instr:   %lineno = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval, align 4
Target of   store i32 1, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 349
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 350
[SelectDef] On node: FIObjVar ID: 350 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 350 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 350 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 %inc, i32* %i, align 4
Target of   store i32 %inc, i32* %i, align 4 is   %i = alloca i32, align 4 with PAG id 377
Checking PagEdge node associated to:   %i = alloca i32, align 4
Visist starts at PAGNode 378
[SelectDef] On node: FIObjVar ID: 378 (base object)
   %i = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 378 (base object)
   %i = alloca i32, align 4  to result
Found:
	- NodeId: 378 Instr:   %i = alloca i32, align 4
Finding defs for:   store i32 %sub68, i32* %seconds, align 4
Target of   store i32 %sub68, i32* %seconds, align 4 is   %seconds = alloca i32, align 4 with PAG id 385
Checking PagEdge node associated to:   %seconds = alloca i32, align 4
Visist starts at PAGNode 386
[SelectDef] On node: FIObjVar ID: 386 (base object)
   %seconds = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 386 (base object)
   %seconds = alloca i32, align 4  to result
Found:
	- NodeId: 386 Instr:   %seconds = alloca i32, align 4
Finding defs for:   store i32 %sub70, i32* %microseconds, align 4
Target of   store i32 %sub70, i32* %microseconds, align 4 is   %microseconds = alloca i32, align 4 with PAG id 387
Checking PagEdge node associated to:   %microseconds = alloca i32, align 4
Visist starts at PAGNode 388
[SelectDef] On node: FIObjVar ID: 388 (base object)
   %microseconds = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 388 (base object)
   %microseconds = alloca i32, align 4  to result
Found:
	- NodeId: 388 Instr:   %microseconds = alloca i32, align 4
Finding defs for:   store double %add72, double* %elapsed, align 8
Target of   store double %add72, double* %elapsed, align 8 is   %elapsed = alloca double, align 8 with PAG id 389
Checking PagEdge node associated to:   %elapsed = alloca double, align 8
Visist starts at PAGNode 390
[SelectDef] On node: FIObjVar ID: 390 (base object)
   %elapsed = alloca double, align 8 
Start node is a Def already, adding FIObjVar ID: 390 (base object)
   %elapsed = alloca double, align 8  to result
Found:
	- NodeId: 390 Instr:   %elapsed = alloca double, align 8
Finding defs for:   store i32 0, i32* %retval, align 4
Target of   store i32 0, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 349
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 350
[SelectDef] On node: FIObjVar ID: 350 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 350 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 350 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i16 %65, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %65, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function gettimeofday
Checking function sprintf
Checking function fopen
Checking function fgets
Checking function fclose
Checking function llvm.memmove.p0i8.p0i8.i32
Checking function fread
Checking function sleep
Checking function print_indent
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %indentlevel, i32* %indentlevel.addr, align 4
Target of   store i32 %indentlevel, i32* %indentlevel.addr, align 4 is   %indentlevel.addr = alloca i32, align 4 with PAG id 669
Checking PagEdge node associated to:   %indentlevel.addr = alloca i32, align 4
Visist starts at PAGNode 670
[SelectDef] On node: FIObjVar ID: 670 (base object)
   %indentlevel.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 670 (base object)
   %indentlevel.addr = alloca i32, align 4  to result
Found:
	- NodeId: 670 Instr:   %indentlevel.addr = alloca i32, align 4
Finding defs for:   store i16 %11, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %11, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function puts
Checking function sxml_init_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 706
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 707
[SelectDef] On node: FIObjVar ID: 707 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 707 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 707 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 0, i32* %bufferpos_instrumented, align 4
Target of   store i32 0, i32* %bufferpos_instrumented, align 4 is   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 0 with PAG id 710
Checking PagEdge node associated to:   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 0
Visist starts at PAGNode 709
[SelectDef] On node: ValVar ID: 709
   %4 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 706-->709
[SelectDef] On node: ValVar ID: 706
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 707-->706
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 706
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 707 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 699-->706
[SelectDef] On node: ValVar ID: 699
 %struct.sxml_t* %state { 0th arg sxml_init_instrumented  }
On edge 371-->699
[SelectDef] On node: ValVar ID: 371
   %parser = alloca %struct.sxml_t, align 4 
On edge 372-->371
[SelectDefs] Adding node: FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 372 Instr:   %parser = alloca %struct.sxml_t, align 4
	- NodeId: 707 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 0, i32* %ntokens_instrumented, align 4
Target of   store i32 0, i32* %ntokens_instrumented, align 4 is   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %5, i32 0, i32 1 with PAG id 713
Checking PagEdge node associated to:   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %5, i32 0, i32 1
Visist starts at PAGNode 712
[SelectDef] On node: ValVar ID: 712
   %5 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 706-->712
[SelectDef] On node: ValVar ID: 706
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 707-->706
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 706
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 707 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 699-->706
[SelectDef] On node: ValVar ID: 699
 %struct.sxml_t* %state { 0th arg sxml_init_instrumented  }
On edge 371-->699
[SelectDef] On node: ValVar ID: 371
   %parser = alloca %struct.sxml_t, align 4 
On edge 372-->371
[SelectDefs] Adding node: FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 372 Instr:   %parser = alloca %struct.sxml_t, align 4
	- NodeId: 707 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 0, i32* %taglevel_instrumented, align 4
Target of   store i32 0, i32* %taglevel_instrumented, align 4 is   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %6, i32 0, i32 2 with PAG id 716
Checking PagEdge node associated to:   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %6, i32 0, i32 2
Visist starts at PAGNode 715
[SelectDef] On node: ValVar ID: 715
   %6 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 706-->715
[SelectDef] On node: ValVar ID: 706
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 707-->706
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 706
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 707 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 699-->706
[SelectDef] On node: ValVar ID: 699
 %struct.sxml_t* %state { 0th arg sxml_init_instrumented  }
On edge 371-->699
[SelectDef] On node: ValVar ID: 371
   %parser = alloca %struct.sxml_t, align 4 
On edge 372-->371
[SelectDefs] Adding node: FIObjVar ID: 372 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 372 Instr:   %parser = alloca %struct.sxml_t, align 4
	- NodeId: 707 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i16 %10, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %10, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function sxml_parse_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 740
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 741
[SelectDef] On node: FIObjVar ID: 741 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 741 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 741 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 742
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 743
[SelectDef] On node: FIObjVar ID: 743 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 743 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 743 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Target of   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 is   %bufferlen.addr_instrumented = alloca i32, align 4 with PAG id 744
Checking PagEdge node associated to:   %bufferlen.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 745
[SelectDef] On node: FIObjVar ID: 745 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 745 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 745 Instr:   %bufferlen.addr_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4 is   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 746
Checking PagEdge node associated to:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 747
[SelectDef] On node: FIObjVar ID: 747 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 747 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 747 Instr:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4
Target of   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4 is   %num_tokens.addr_instrumented = alloca i32, align 4 with PAG id 748
Checking PagEdge node associated to:   %num_tokens.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 749
[SelectDef] On node: FIObjVar ID: 749 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 749 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 749 Instr:   %num_tokens.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 752
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 753
[SelectDef] On node: FIObjVar ID: 753 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 753 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 753 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %buffer1_instrumented, align 4
Target of   store i8* %9, i8** %buffer1_instrumented, align 4 is   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 with PAG id 785
Checking PagEdge node associated to:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Visist starts at PAGNode 754
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store i32 %10, i32* %bufferlen2_instrumented, align 4
Target of   store i32 %10, i32* %bufferlen2_instrumented, align 4 is   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1 with PAG id 788
Checking PagEdge node associated to:   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Visist starts at PAGNode 754
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store %struct.sxmltok_t* %11, %struct.sxmltok_t** %tokens3_instrumented, align 4
Target of   store %struct.sxmltok_t* %11, %struct.sxmltok_t** %tokens3_instrumented, align 4 is   %tokens3_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 2 with PAG id 791
Checking PagEdge node associated to:   %tokens3_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 2
Visist starts at PAGNode 754
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store i32 %12, i32* %num_tokens4_instrumented, align 4
Target of   store i32 %12, i32* %num_tokens4_instrumented, align 4 is   %num_tokens4_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 3 with PAG id 794
Checking PagEdge node associated to:   %num_tokens4_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 3
Visist starts at PAGNode 754
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 758
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 759
[SelectDef] On node: FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 759 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 759 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call_instrumented, i8** %lt_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %lt_instrumented, align 4 is   %lt_instrumented = alloca i8*, align 4 with PAG id 760
Checking PagEdge node associated to:   %lt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 761
[SelectDef] On node: FIObjVar ID: 761 (base object)
   %lt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 761 (base object)
   %lt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 761 Instr:   %lt_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 738
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 739
[SelectDef] On node: FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 739 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 738
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 739
[SelectDef] On node: FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 739 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call15_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call15_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 756
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 757
[SelectDef] On node: FIObjVar ID: 757 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 757 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 757 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call17_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call17_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 756
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 757
[SelectDef] On node: FIObjVar ID: 757 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 757 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 757 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call18_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call18_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 756
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 757
[SelectDef] On node: FIObjVar ID: 757 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 757 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 757 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %31, i32* %retval_instrumented, align 4
Target of   store i32 %31, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 738
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 739
[SelectDef] On node: FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 739 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr33_instrumented, i8** %start30_instrumented, align 4
Target of   store i8* %add.ptr33_instrumented, i8** %start30_instrumented, align 4 is   %start30_instrumented = alloca i8*, align 4 with PAG id 764
Checking PagEdge node associated to:   %start30_instrumented = alloca i8*, align 4
Visist starts at PAGNode 765
[SelectDef] On node: FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 765 (base object)
   %start30_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 765 Instr:   %start30_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call35_instrumented, i8** %lt34_instrumented, align 4
Target of   store i8* %call35_instrumented, i8** %lt34_instrumented, align 4 is   %lt34_instrumented = alloca i8*, align 4 with PAG id 766
Checking PagEdge node associated to:   %lt34_instrumented = alloca i8*, align 4
Visist starts at PAGNode 767
[SelectDef] On node: FIObjVar ID: 767 (base object)
   %lt34_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 767 (base object)
   %lt34_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 767 Instr:   %lt34_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call44_instrumented, i32* %err43_instrumented, align 4
Target of   store i32 %call44_instrumented, i32* %err43_instrumented, align 4 is   %err43_instrumented = alloca i32, align 4 with PAG id 768
Checking PagEdge node associated to:   %err43_instrumented = alloca i32, align 4
Visist starts at PAGNode 769
[SelectDef] On node: FIObjVar ID: 769 (base object)
   %err43_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 769 (base object)
   %err43_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 769 Instr:   %err43_instrumented = alloca i32, align 4
Finding defs for:   store i32 %45, i32* %retval_instrumented, align 4
Target of   store i32 %45, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 738
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 739
[SelectDef] On node: FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 739 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 738
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 739
[SelectDef] On node: FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 739 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call60_instrumented, i32* %err29_instrumented, align 4
Target of   store i32 %call60_instrumented, i32* %err29_instrumented, align 4 is   %err29_instrumented = alloca i32, align 4 with PAG id 762
Checking PagEdge node associated to:   %err29_instrumented = alloca i32, align 4
Visist starts at PAGNode 763
[SelectDef] On node: FIObjVar ID: 763 (base object)
   %err29_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 763 (base object)
   %err29_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 763 Instr:   %err29_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call62_instrumented, i32* %err29_instrumented, align 4
Target of   store i32 %call62_instrumented, i32* %err29_instrumented, align 4 is   %err29_instrumented = alloca i32, align 4 with PAG id 762
Checking PagEdge node associated to:   %err29_instrumented = alloca i32, align 4
Visist starts at PAGNode 763
[SelectDef] On node: FIObjVar ID: 763 (base object)
   %err29_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 763 (base object)
   %err29_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 763 Instr:   %err29_instrumented = alloca i32, align 4
Finding defs for:   store i32 %cond_instrumented, i32* %err29_instrumented, align 4
Target of   store i32 %cond_instrumented, i32* %err29_instrumented, align 4 is   %err29_instrumented = alloca i32, align 4 with PAG id 762
Checking PagEdge node associated to:   %err29_instrumented = alloca i32, align 4
Visist starts at PAGNode 763
[SelectDef] On node: FIObjVar ID: 763 (base object)
   %err29_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 763 (base object)
   %err29_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 763 Instr:   %err29_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call71_instrumented, i32* %err29_instrumented, align 4
Target of   store i32 %call71_instrumented, i32* %err29_instrumented, align 4 is   %err29_instrumented = alloca i32, align 4 with PAG id 762
Checking PagEdge node associated to:   %err29_instrumented = alloca i32, align 4
Visist starts at PAGNode 763
[SelectDef] On node: FIObjVar ID: 763 (base object)
   %err29_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 763 (base object)
   %err29_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 763 Instr:   %err29_instrumented = alloca i32, align 4
Finding defs for:   store i32 %56, i32* %retval_instrumented, align 4
Target of   store i32 %56, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 738
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 739
[SelectDef] On node: FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 739 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 738
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 739
[SelectDef] On node: FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 739 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 739 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %64, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %64, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_ltrim_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 995
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 996
[SelectDef] On node: FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 996 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 996 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 997
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 998
[SelectDef] On node: FIObjVar ID: 998 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 998 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 998 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %it_instrumented, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 999
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1000
[SelectDef] On node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1000 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 999
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1000
[SelectDef] On node: FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1000 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1000 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %20, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %20, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function state_setpos_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1057
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1058
[SelectDef] On node: FIObjVar ID: 1058 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1058 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1058 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1059
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1060
[SelectDef] On node: FIObjVar ID: 1060 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1060 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1060 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %ptr, i8** %ptr.addr_instrumented, align 4
Target of   store i8* %ptr, i8** %ptr.addr_instrumented, align 4 is   %ptr.addr_instrumented = alloca i8*, align 4 with PAG id 1061
Checking PagEdge node associated to:   %ptr.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1062
[SelectDef] On node: FIObjVar ID: 1062 (base object)
   %ptr.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1062 (base object)
   %ptr.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1062 Instr:   %ptr.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4
Target of   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4 is   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0 with PAG id 1074
Checking PagEdge node associated to:   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0
Visist starts at PAGNode 1073
[SelectDef] On node: ValVar ID: 1073
   %7 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1057-->1073
[SelectDef] On node: ValVar ID: 1057
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1058-->1057
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1057
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1058 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1046-->1057
[SelectDef] On node: ValVar ID: 1046
 %struct.sxml_t* %state { 0th arg state_setpos_instrumented  }
On edge 750-->1046
On edge 1187-->1046
On edge 1230-->1046
On edge 1325-->1046
On edge 1436-->1046
On edge 1494-->1046
On edge 1660-->1046
On edge 1704-->1046
On edge 1823-->1046
On edge 1917-->1046
On edge 2011-->1046
On edge 2543-->1046
On edge 2582-->1046
[SelectDef] On node: ValVar ID: 2582
   %68 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2582
[SelectDef] On node: ValVar ID: 2399
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2400-->2399
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2399
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2400 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2388-->2399
[SelectDef] On node: ValVar ID: 2388
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1191-->2388
On edge 1440-->2388
[SelectDef] On node: ValVar ID: 1440
   %34 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1440
[SelectDef] On node: ValVar ID: 1351
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1352-->1351
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1351
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1352 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1340-->1351
[SelectDef] On node: ValVar ID: 1340
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 750-->1340
Node 750 already visited
On edge 750-->1340
Node 750 already visited
[SelectDef] On node: ValVar ID: 1191
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1191
[SelectDef] On node: ValVar ID: 1104
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1105-->1104
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1104
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1105 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1093-->1104
[SelectDef] On node: ValVar ID: 1093
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 750-->1093
Node 750 already visited
On edge 750-->1093
Node 750 already visited
[SelectDef] On node: ValVar ID: 2543
   %51 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2543
Node 2399 already visited
[SelectDef] On node: ValVar ID: 2011
   %29 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1943-->2011
[SelectDef] On node: ValVar ID: 1943
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1944-->1943
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1943
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1944 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1932-->1943
[SelectDef] On node: ValVar ID: 1932
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 750-->1932
Node 750 already visited
[SelectDef] On node: ValVar ID: 1917
   %28 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1849-->1917
[SelectDef] On node: ValVar ID: 1849
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1850-->1849
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1849
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1850 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1838-->1849
[SelectDef] On node: ValVar ID: 1838
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 750-->1838
Node 750 already visited
[SelectDef] On node: ValVar ID: 1823
   %38 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1729-->1823
[SelectDef] On node: ValVar ID: 1729
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1730-->1729
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1729
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1730 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1718-->1729
[SelectDef] On node: ValVar ID: 1718
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 750-->1718
Node 750 already visited
[SelectDef] On node: ValVar ID: 1704
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1597-->1704
[SelectDef] On node: ValVar ID: 1597
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1598-->1597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1597
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1598 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1584-->1597
[SelectDef] On node: ValVar ID: 1584
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 750-->1584
Node 750 already visited
On edge 2702-->1584
[SelectDef] On node: ValVar ID: 2702
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2679-->2702
[SelectDef] On node: ValVar ID: 2679
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2680-->2679
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2679
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2680 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2666-->2679
[SelectDef] On node: ValVar ID: 2666
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2547-->2666
[SelectDef] On node: ValVar ID: 2547
   %54 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2547
Node 2399 already visited
[SelectDef] On node: ValVar ID: 1660
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1597-->1660
Node 1597 already visited
[SelectDef] On node: ValVar ID: 1494
   %56 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1494
Node 1351 already visited
[SelectDef] On node: ValVar ID: 1436
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1436
Node 1351 already visited
[SelectDef] On node: ValVar ID: 1325
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1256-->1325
[SelectDef] On node: ValVar ID: 1256
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1257-->1256
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1256
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1257 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1245-->1256
[SelectDef] On node: ValVar ID: 1245
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 750-->1245
Node 750 already visited
[SelectDef] On node: ValVar ID: 1230
   %47 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1230
Node 1104 already visited
[SelectDef] On node: ValVar ID: 1187
   %30 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1187
Node 1104 already visited
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 1058 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 751 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1944 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1105 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1257 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1352 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1598 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1730 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1850 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2400 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2680 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i16 %16, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %16, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_instruction_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1104
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1105
[SelectDef] On node: FIObjVar ID: 1105 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1105 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1105 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1106
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1107
[SelectDef] On node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1107 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1114
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1115
[SelectDef] On node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1115 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1116
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1117
[SelectDef] On node: FIObjVar ID: 1117 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1117 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1117 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1102
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1103
[SelectDef] On node: FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1103 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1114
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1115
[SelectDef] On node: FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1115 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1115 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call7_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call7_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1112
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1113
[SelectDef] On node: FIObjVar ID: 1113 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1113 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1113 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1102
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1103
[SelectDef] On node: FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1103 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call13_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call13_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 1108
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 1109
[SelectDef] On node: FIObjVar ID: 1109 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1109 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1109 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %36, i32* %retval_instrumented, align 4
Target of   store i32 %36, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1102
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1103
[SelectDef] On node: FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1103 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr19_instrumented, i8** %quest_instrumented, align 4
Target of   store i8* %add.ptr19_instrumented, i8** %quest_instrumented, align 4 is   %quest_instrumented = alloca i8*, align 4 with PAG id 1110
Checking PagEdge node associated to:   %quest_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1111
[SelectDef] On node: FIObjVar ID: 1111 (base object)
   %quest_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1111 (base object)
   %quest_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1111 Instr:   %quest_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1102
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1103
[SelectDef] On node: FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1103 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1102
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1103
[SelectDef] On node: FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1103 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call32_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call32_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1102
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1103
[SelectDef] On node: FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1103 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1103 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %54, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %54, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_doctype_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1256
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1257
[SelectDef] On node: FIObjVar ID: 1257 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1257 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1257 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1258
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1259
[SelectDef] On node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1259 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1262
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1263
[SelectDef] On node: FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1263 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1264
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1265
[SelectDef] On node: FIObjVar ID: 1265 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1265 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1265 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1254
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1255
[SelectDef] On node: FIObjVar ID: 1255 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1255 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1255 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1254
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1255
[SelectDef] On node: FIObjVar ID: 1255 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1255 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1255 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1262
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1263
[SelectDef] On node: FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1263 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1263 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 is   %bracket_instrumented = alloca i8*, align 4 with PAG id 1260
Checking PagEdge node associated to:   %bracket_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1261
[SelectDef] On node: FIObjVar ID: 1261 (base object)
   %bracket_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1261 (base object)
   %bracket_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1261 Instr:   %bracket_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1254
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1255
[SelectDef] On node: FIObjVar ID: 1255 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1255 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1255 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call12_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call12_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1254
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1255
[SelectDef] On node: FIObjVar ID: 1255 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1255 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1255 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %34, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %34, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_start_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1351
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1352
[SelectDef] On node: FIObjVar ID: 1352 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1352 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1352 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1353
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1354
[SelectDef] On node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1354 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1363
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1364
[SelectDef] On node: FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1364 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1364 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1365
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1366
[SelectDef] On node: FIObjVar ID: 1366 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1366 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1366 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1349
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1350
[SelectDef] On node: FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1350 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr10_instrumented, i8** %name_instrumented, align 4
Target of   store i8* %add.ptr10_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 1359
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1360
[SelectDef] On node: FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1360 (base object)
   %name_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1360 Instr:   %name_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call11_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1361
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1362
[SelectDef] On node: FIObjVar ID: 1362 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1362 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1362 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1349
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1350
[SelectDef] On node: FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1350 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call18_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call18_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 1355
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 1356
[SelectDef] On node: FIObjVar ID: 1356 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1356 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1356 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %37, i32* %retval_instrumented, align 4
Target of   store i32 %37, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1349
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1350
[SelectDef] On node: FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1350 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr25_instrumented, i8** %gt_instrumented, align 4
Target of   store i8* %add.ptr25_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1357
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1358
[SelectDef] On node: FIObjVar ID: 1358 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1358 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1358 Instr:   %gt_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1357
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1358
[SelectDef] On node: FIObjVar ID: 1358 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1358 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1358 Instr:   %gt_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1349
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1350
[SelectDef] On node: FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1350 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1349
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1350
[SelectDef] On node: FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1350 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call46_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call46_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1349
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1350
[SelectDef] On node: FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1350 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1350 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %63, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %63, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_findchr_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 1519
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1520
[SelectDef] On node: FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1520 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1520 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 1521
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1522
[SelectDef] On node: FIObjVar ID: 1522 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1522 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1522 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %c, i32* %c.addr_instrumented, align 4
Target of   store i32 %c, i32* %c.addr_instrumented, align 4 is   %c.addr_instrumented = alloca i32, align 4 with PAG id 1523
Checking PagEdge node associated to:   %c.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 1524
[SelectDef] On node: FIObjVar ID: 1524 (base object)
   %c.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1524 (base object)
   %c.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1524 Instr:   %c.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 1525
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1526
[SelectDef] On node: FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1526 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1526 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %24, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %24, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_characters_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1597
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1598
[SelectDef] On node: FIObjVar ID: 1598 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1598 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1598 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1599
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1600
[SelectDef] On node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1600 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 1601
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1602
[SelectDef] On node: FIObjVar ID: 1602 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1602 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1602 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1603
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1604
[SelectDef] On node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1604 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %ampr_instrumented, align 4 is   %ampr_instrumented = alloca i8*, align 4 with PAG id 1609
Checking PagEdge node associated to:   %ampr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1610
[SelectDef] On node: FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1610 (base object)
   %ampr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1610 Instr:   %ampr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call9_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call9_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1595
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1596
[SelectDef] On node: FIObjVar ID: 1596 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1596 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1596 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %cond_instrumented, i8** %limit_instrumented, align 4
Target of   store i8* %cond_instrumented, i8** %limit_instrumented, align 4 is   %limit_instrumented = alloca i8*, align 4 with PAG id 1605
Checking PagEdge node associated to:   %limit_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1606
[SelectDef] On node: FIObjVar ID: 1606 (base object)
   %limit_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1606 (base object)
   %limit_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1606 Instr:   %limit_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call14_instrumented, i8** %colon_instrumented, align 4
Target of   store i8* %call14_instrumented, i8** %colon_instrumented, align 4 is   %colon_instrumented = alloca i8*, align 4 with PAG id 1607
Checking PagEdge node associated to:   %colon_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1608
[SelectDef] On node: FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1608 (base object)
   %colon_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1608 Instr:   %colon_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %cond18_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %cond18_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1595
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1596
[SelectDef] On node: FIObjVar ID: 1596 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1596 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1596 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1603
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1604
[SelectDef] On node: FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1604 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1604 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call22_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call22_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1595
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1596
[SelectDef] On node: FIObjVar ID: 1596 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1596 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1596 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %52, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %52, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_end_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1729
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1730
[SelectDef] On node: FIObjVar ID: 1730 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1730 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1730 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1731
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1732
[SelectDef] On node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1732 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1737
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1738
[SelectDef] On node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1738 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1739
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1740
[SelectDef] On node: FIObjVar ID: 1740 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1740 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1740 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1727
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1728
[SelectDef] On node: FIObjVar ID: 1728 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1728 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1728 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr8_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr8_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1737
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1738
[SelectDef] On node: FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1738 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1738 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call9_instrumented, i8** %gt_instrumented, align 4
Target of   store i8* %call9_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1733
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1734
[SelectDef] On node: FIObjVar ID: 1734 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1734 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1734 Instr:   %gt_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1727
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1728
[SelectDef] On node: FIObjVar ID: 1728 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1728 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1728 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call14_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call14_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1735
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1736
[SelectDef] On node: FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1736 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1736 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1727
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1728
[SelectDef] On node: FIObjVar ID: 1728 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1728 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1728 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call22_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call22_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1727
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1728
[SelectDef] On node: FIObjVar ID: 1728 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1728 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1728 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %45, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %45, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_comment_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1849
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1850
[SelectDef] On node: FIObjVar ID: 1850 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1850 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1850 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1851
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1852
[SelectDef] On node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1852 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1855
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1856
[SelectDef] On node: FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1856 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1857
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1858
[SelectDef] On node: FIObjVar ID: 1858 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1858 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1858 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1847
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1848
[SelectDef] On node: FIObjVar ID: 1848 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1848 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1848 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1847
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1848
[SelectDef] On node: FIObjVar ID: 1848 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1848 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1848 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1855
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1856
[SelectDef] On node: FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1856 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1856 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call7_instrumented, i8** %dash_instrumented, align 4
Target of   store i8* %call7_instrumented, i8** %dash_instrumented, align 4 is   %dash_instrumented = alloca i8*, align 4 with PAG id 1853
Checking PagEdge node associated to:   %dash_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1854
[SelectDef] On node: FIObjVar ID: 1854 (base object)
   %dash_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1854 (base object)
   %dash_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1854 Instr:   %dash_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1847
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1848
[SelectDef] On node: FIObjVar ID: 1848 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1848 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1848 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call13_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call13_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1847
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1848
[SelectDef] On node: FIObjVar ID: 1848 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1848 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1848 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %35, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %35, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_cdata_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1943
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1944
[SelectDef] On node: FIObjVar ID: 1944 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1944 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1944 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1945
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1946
[SelectDef] On node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1946 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1949
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1950
[SelectDef] On node: FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1950 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1951
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1952
[SelectDef] On node: FIObjVar ID: 1952 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1952 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1952 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1941
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1942
[SelectDef] On node: FIObjVar ID: 1942 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1942 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1942 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1941
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1942
[SelectDef] On node: FIObjVar ID: 1942 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1942 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1942 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1949
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1950
[SelectDef] On node: FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1950 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1950 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call7_instrumented, i8** %bracket_instrumented, align 4
Target of   store i8* %call7_instrumented, i8** %bracket_instrumented, align 4 is   %bracket_instrumented = alloca i8*, align 4 with PAG id 1947
Checking PagEdge node associated to:   %bracket_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1948
[SelectDef] On node: FIObjVar ID: 1948 (base object)
   %bracket_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1948 (base object)
   %bracket_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1948 Instr:   %bracket_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1941
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1942
[SelectDef] On node: FIObjVar ID: 1942 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1942 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1942 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call13_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call13_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1941
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1942
[SelectDef] On node: FIObjVar ID: 1942 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1942 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1942 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %36, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %36, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_startswith_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2039
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2040
[SelectDef] On node: FIObjVar ID: 2040 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2040 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2040 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2041
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2042
[SelectDef] On node: FIObjVar ID: 2042 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2042 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2042 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %prefix, i8** %prefix.addr_instrumented, align 4
Target of   store i8* %prefix, i8** %prefix.addr_instrumented, align 4 is   %prefix.addr_instrumented = alloca i8*, align 4 with PAG id 2043
Checking PagEdge node associated to:   %prefix.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2044
[SelectDef] On node: FIObjVar ID: 2044 (base object)
   %prefix.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2044 (base object)
   %prefix.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2044 Instr:   %prefix.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call_instrumented, i32* %nbytes_instrumented, align 4
Target of   store i32 %call_instrumented, i32* %nbytes_instrumented, align 4 is   %nbytes_instrumented = alloca i32, align 4 with PAG id 2045
Checking PagEdge node associated to:   %nbytes_instrumented = alloca i32, align 4
Visist starts at PAGNode 2046
[SelectDef] On node: FIObjVar ID: 2046 (base object)
   %nbytes_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2046 (base object)
   %nbytes_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2046 Instr:   %nbytes_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2037
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2038
[SelectDef] On node: FIObjVar ID: 2038 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2038 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2038 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %conv_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %conv_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2037
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2038
[SelectDef] On node: FIObjVar ID: 2038 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2038 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2038 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %20, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %20, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_findstr_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2105
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2106
[SelectDef] On node: FIObjVar ID: 2106 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2106 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2106 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2107
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2108
[SelectDef] On node: FIObjVar ID: 2108 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2108 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2108 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %needle, i8** %needle.addr_instrumented, align 4
Target of   store i8* %needle, i8** %needle.addr_instrumented, align 4 is   %needle.addr_instrumented = alloca i8*, align 4 with PAG id 2109
Checking PagEdge node associated to:   %needle.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2110
[SelectDef] On node: FIObjVar ID: 2110 (base object)
   %needle.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2110 (base object)
   %needle.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2110 Instr:   %needle.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
Target of   store i32 %call_instrumented, i32* %needlelen_instrumented, align 4 is   %needlelen_instrumented = alloca i32, align 4 with PAG id 2111
Checking PagEdge node associated to:   %needlelen_instrumented = alloca i32, align 4
Visist starts at PAGNode 2112
[SelectDef] On node: FIObjVar ID: 2112 (base object)
   %needlelen_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2112 (base object)
   %needlelen_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2112 Instr:   %needlelen_instrumented = alloca i32, align 4
Finding defs for:   store i32 %conv_instrumented, i32* %first_instrumented, align 4
Target of   store i32 %conv_instrumented, i32* %first_instrumented, align 4 is   %first_instrumented = alloca i32, align 4 with PAG id 2113
Checking PagEdge node associated to:   %first_instrumented = alloca i32, align 4
Visist starts at PAGNode 2114
[SelectDef] On node: FIObjVar ID: 2114 (base object)
   %first_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2114 (base object)
   %first_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2114 Instr:   %first_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %call8_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2115
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2116
[SelectDef] On node: FIObjVar ID: 2116 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2116 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2116 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %28, i8** %retval_instrumented, align 4
Target of   store i8* %28, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2103
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2104
[SelectDef] On node: FIObjVar ID: 2104 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2104 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2104 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
Target of   store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2105
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2106
[SelectDef] On node: FIObjVar ID: 2106 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2106 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2106 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %30, i8** %retval_instrumented, align 4
Target of   store i8* %30, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2103
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2104
[SelectDef] On node: FIObjVar ID: 2104 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2104 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2104 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %35, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %35, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function state_pushtoken_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 2219
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 2220
[SelectDef] On node: FIObjVar ID: 2220 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2220 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 2220 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 2221
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 2222
[SelectDef] On node: FIObjVar ID: 2222 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2222 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 2222 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %type, i32* %type.addr_instrumented, align 4
Target of   store i32 %type, i32* %type.addr_instrumented, align 4 is   %type.addr_instrumented = alloca i32, align 4 with PAG id 2223
Checking PagEdge node associated to:   %type.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2224
[SelectDef] On node: FIObjVar ID: 2224 (base object)
   %type.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2224 (base object)
   %type.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2224 Instr:   %type.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2225
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2226
[SelectDef] On node: FIObjVar ID: 2226 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2226 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2226 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2227
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2228
[SelectDef] On node: FIObjVar ID: 2228 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2228 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2228 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %ntokens_instrumented, align 4
Target of   store i32 %inc_instrumented, i32* %ntokens_instrumented, align 4 is   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 1 with PAG id 2239
Checking PagEdge node associated to:   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 1
Visist starts at PAGNode 2238
[SelectDef] On node: ValVar ID: 2238
   %4 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2219-->2238
[SelectDef] On node: ValVar ID: 2219
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2220-->2219
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2219
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2220 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2203-->2219
[SelectDef] On node: ValVar ID: 2203
 %struct.sxml_t* %state { 0th arg state_pushtoken_instrumented  }
On edge 1179-->2203
On edge 1319-->2203
On edge 1431-->2203
On edge 1468-->2203
On edge 1649-->2203
On edge 1699-->2203
On edge 1818-->2203
On edge 1911-->2203
On edge 2006-->2203
On edge 2493-->2203
[SelectDef] On node: ValVar ID: 2493
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2493
[SelectDef] On node: ValVar ID: 2399
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2400-->2399
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2399
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2400 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2388-->2399
[SelectDef] On node: ValVar ID: 2388
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1191-->2388
On edge 1440-->2388
[SelectDef] On node: ValVar ID: 1440
   %34 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1440
[SelectDef] On node: ValVar ID: 1351
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1352-->1351
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1351
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1352 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1340-->1351
[SelectDef] On node: ValVar ID: 1340
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 750-->1340
On edge 750-->1340
Node 750 already visited
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 1191
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1191
[SelectDef] On node: ValVar ID: 1104
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1105-->1104
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1104
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1105 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1093-->1104
[SelectDef] On node: ValVar ID: 1093
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 750-->1093
Node 750 already visited
On edge 750-->1093
Node 750 already visited
[SelectDef] On node: ValVar ID: 2006
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1943-->2006
[SelectDef] On node: ValVar ID: 1943
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1944-->1943
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1943
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1944 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1932-->1943
[SelectDef] On node: ValVar ID: 1932
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 750-->1932
Node 750 already visited
[SelectDef] On node: ValVar ID: 1911
   %24 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1849-->1911
[SelectDef] On node: ValVar ID: 1849
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1850-->1849
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1849
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1850 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1838-->1849
[SelectDef] On node: ValVar ID: 1838
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 750-->1838
Node 750 already visited
[SelectDef] On node: ValVar ID: 1818
   %34 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1729-->1818
[SelectDef] On node: ValVar ID: 1729
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1730-->1729
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1729
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1730 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1718-->1729
[SelectDef] On node: ValVar ID: 1718
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 750-->1718
Node 750 already visited
[SelectDef] On node: ValVar ID: 1699
   %41 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1597-->1699
[SelectDef] On node: ValVar ID: 1597
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1598-->1597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1597
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1598 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1584-->1597
[SelectDef] On node: ValVar ID: 1584
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 750-->1584
Node 750 already visited
On edge 2702-->1584
[SelectDef] On node: ValVar ID: 2702
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2679-->2702
[SelectDef] On node: ValVar ID: 2679
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2680-->2679
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2679
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2680 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2666-->2679
[SelectDef] On node: ValVar ID: 2666
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2547-->2666
[SelectDef] On node: ValVar ID: 2547
   %54 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2547
Node 2399 already visited
[SelectDef] On node: ValVar ID: 1649
   %20 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1597-->1649
Node 1597 already visited
[SelectDef] On node: ValVar ID: 1468
   %46 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1468
Node 1351 already visited
[SelectDef] On node: ValVar ID: 1431
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1431
Node 1351 already visited
[SelectDef] On node: ValVar ID: 1319
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1256-->1319
[SelectDef] On node: ValVar ID: 1256
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1257-->1256
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1256
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1257 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1245-->1256
[SelectDef] On node: ValVar ID: 1245
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 750-->1245
Node 750 already visited
[SelectDef] On node: ValVar ID: 1179
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1179
Node 1104 already visited
Found:
	- NodeId: 751 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1944 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1105 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1257 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1352 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1598 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1730 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1850 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2220 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2400 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2680 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 %5, i32* %i_instrumented, align 4
Target of   store i32 %5, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2231
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2232
[SelectDef] On node: FIObjVar ID: 2232 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2232 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2232 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2217
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2218
[SelectDef] On node: FIObjVar ID: 2218 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2218 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2218 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2229
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2230
[SelectDef] On node: FIObjVar ID: 2230 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2230 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2230 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i16 %conv_instrumented, i16* %type2_instrumented, align 4
Target of   store i16 %conv_instrumented, i16* %type2_instrumented, align 4 is   %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0 with PAG id 2264
Checking PagEdge node associated to:   %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0
Visist starts at PAGNode 2263
[SelectDef] On node: ValVar ID: 2263
   %14 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2229-->2263
[SelectDef] On node: ValVar ID: 2229
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2230-->2229
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2229
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2230 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2259-->2229
[SelectDef] On node: ValVar ID: 2259
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2257-->2259
[SelectDef] On node: ValVar ID: 2257
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2256-->2257
[SelectDef] On node: ValVar ID: 2256
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2255-->2256
[SelectDef] On node: ValVar ID: 2255
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2221-->2255
[SelectDef] On node: ValVar ID: 2221
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2222-->2221
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2221
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2222 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2204-->2221
[SelectDef] On node: ValVar ID: 2204
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1180-->2204
On edge 1320-->2204
On edge 1432-->2204
On edge 1469-->2204
On edge 1650-->2204
On edge 1700-->2204
On edge 1819-->2204
On edge 1912-->2204
On edge 2007-->2204
On edge 2494-->2204
[SelectDef] On node: ValVar ID: 2494
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2494
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 2007
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->2007
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
Node 754 already visited
[SelectDef] On node: ValVar ID: 1912
   %25 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1912
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
Node 754 already visited
[SelectDef] On node: ValVar ID: 1819
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1819
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1700
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1700
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 1650
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1650
Node 1599 already visited
[SelectDef] On node: ValVar ID: 1469
   %47 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1469
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1432
   %28 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1432
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1320
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1320
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
Node 754 already visited
[SelectDef] On node: ValVar ID: 1180
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1180
Node 1106 already visited
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1946 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1107 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1259 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1354 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1600 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1732 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1852 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2222 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2230 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2402 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2682 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4
Target of   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4 is   %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2 with PAG id 2274
Checking PagEdge node associated to:   %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2
Visist starts at PAGNode 2273
[SelectDef] On node: ValVar ID: 2273
   %18 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2229-->2273
[SelectDef] On node: ValVar ID: 2229
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2230-->2229
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2229
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2230 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2259-->2229
[SelectDef] On node: ValVar ID: 2259
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2257-->2259
[SelectDef] On node: ValVar ID: 2257
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2256-->2257
[SelectDef] On node: ValVar ID: 2256
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2255-->2256
[SelectDef] On node: ValVar ID: 2255
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2221-->2255
[SelectDef] On node: ValVar ID: 2221
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2222-->2221
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2221
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2222 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2204-->2221
[SelectDef] On node: ValVar ID: 2204
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1180-->2204
On edge 1320-->2204
On edge 1432-->2204
On edge 1469-->2204
On edge 1650-->2204
On edge 1700-->2204
On edge 1819-->2204
On edge 1912-->2204
On edge 2007-->2204
On edge 2494-->2204
[SelectDef] On node: ValVar ID: 2494
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2494
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 2007
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->2007
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
Node 754 already visited
[SelectDef] On node: ValVar ID: 1912
   %25 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1912
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
Node 754 already visited
[SelectDef] On node: ValVar ID: 1819
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1819
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1700
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1700
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 1650
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1650
Node 1599 already visited
[SelectDef] On node: ValVar ID: 1469
   %47 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1469
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1432
   %28 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1432
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1320
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1320
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
Node 754 already visited
[SelectDef] On node: ValVar ID: 1180
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1180
Node 1106 already visited
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1946 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1107 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1259 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1354 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1600 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1732 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1852 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2222 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2230 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2402 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2682 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4
Target of   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4 is   %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3 with PAG id 2284
Checking PagEdge node associated to:   %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3
Visist starts at PAGNode 2283
[SelectDef] On node: ValVar ID: 2283
   %22 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2229-->2283
[SelectDef] On node: ValVar ID: 2229
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2230-->2229
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2229
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2230 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2259-->2229
[SelectDef] On node: ValVar ID: 2259
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2257-->2259
[SelectDef] On node: ValVar ID: 2257
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2256-->2257
[SelectDef] On node: ValVar ID: 2256
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2255-->2256
[SelectDef] On node: ValVar ID: 2255
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2221-->2255
[SelectDef] On node: ValVar ID: 2221
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2222-->2221
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2221
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2222 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2204-->2221
[SelectDef] On node: ValVar ID: 2204
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1180-->2204
On edge 1320-->2204
On edge 1432-->2204
On edge 1469-->2204
On edge 1650-->2204
On edge 1700-->2204
On edge 1819-->2204
On edge 1912-->2204
On edge 2007-->2204
On edge 2494-->2204
[SelectDef] On node: ValVar ID: 2494
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2494
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 2007
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->2007
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
Node 754 already visited
[SelectDef] On node: ValVar ID: 1912
   %25 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1912
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
Node 754 already visited
[SelectDef] On node: ValVar ID: 1819
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1819
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1700
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1700
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 1650
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1650
Node 1599 already visited
[SelectDef] On node: ValVar ID: 1469
   %47 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1469
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1432
   %28 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1432
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1320
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1320
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
Node 754 already visited
[SelectDef] On node: ValVar ID: 1180
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1180
Node 1106 already visited
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1946 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1107 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1259 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1354 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1600 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1732 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1852 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2222 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2230 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2402 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2682 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i16 0, i16* %size_instrumented, align 2
Target of   store i16 0, i16* %size_instrumented, align 2 is   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1 with PAG id 2287
Checking PagEdge node associated to:   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1
Visist starts at PAGNode 2286
[SelectDef] On node: ValVar ID: 2286
   %23 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2229-->2286
[SelectDef] On node: ValVar ID: 2229
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2230-->2229
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2229
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2230 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2259-->2229
[SelectDef] On node: ValVar ID: 2259
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2257-->2259
[SelectDef] On node: ValVar ID: 2257
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2256-->2257
[SelectDef] On node: ValVar ID: 2256
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2255-->2256
[SelectDef] On node: ValVar ID: 2255
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2221-->2255
[SelectDef] On node: ValVar ID: 2221
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2222-->2221
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2221
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2222 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2204-->2221
[SelectDef] On node: ValVar ID: 2204
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1180-->2204
On edge 1320-->2204
On edge 1432-->2204
On edge 1469-->2204
On edge 1650-->2204
On edge 1700-->2204
On edge 1819-->2204
On edge 1912-->2204
On edge 2007-->2204
On edge 2494-->2204
[SelectDef] On node: ValVar ID: 2494
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2494
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
[SelectDef] On node: ValVar ID: 2007
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1945-->2007
[SelectDef] On node: ValVar ID: 1945
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1946-->1945
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1945
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1946 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1933-->1945
[SelectDef] On node: ValVar ID: 1933
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 754-->1933
Node 754 already visited
[SelectDef] On node: ValVar ID: 1912
   %25 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1851-->1912
[SelectDef] On node: ValVar ID: 1851
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1852-->1851
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1851
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1852 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1839-->1851
[SelectDef] On node: ValVar ID: 1839
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 754-->1839
Node 754 already visited
[SelectDef] On node: ValVar ID: 1819
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1731-->1819
[SelectDef] On node: ValVar ID: 1731
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1732-->1731
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1731
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1732 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1719-->1731
[SelectDef] On node: ValVar ID: 1719
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 754-->1719
Node 754 already visited
[SelectDef] On node: ValVar ID: 1700
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1700
[SelectDef] On node: ValVar ID: 1599
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1600-->1599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1599
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1600 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1585-->1599
[SelectDef] On node: ValVar ID: 1585
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 754-->1585
Node 754 already visited
On edge 2703-->1585
[SelectDef] On node: ValVar ID: 2703
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2681-->2703
[SelectDef] On node: ValVar ID: 2681
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2682-->2681
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2681
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2667-->2681
[SelectDef] On node: ValVar ID: 2667
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2548-->2667
[SelectDef] On node: ValVar ID: 2548
   %55 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2548
Node 2401 already visited
[SelectDef] On node: ValVar ID: 1650
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1599-->1650
Node 1599 already visited
[SelectDef] On node: ValVar ID: 1469
   %47 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1469
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1432
   %28 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1432
Node 1353 already visited
[SelectDef] On node: ValVar ID: 1320
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1258-->1320
[SelectDef] On node: ValVar ID: 1258
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1259-->1258
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1258
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1259 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1246-->1258
[SelectDef] On node: ValVar ID: 1246
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 754-->1246
Node 754 already visited
[SelectDef] On node: ValVar ID: 1180
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1180
Node 1106 already visited
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1946 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1107 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1259 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1354 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1600 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1732 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1852 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2222 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2230 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2402 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2682 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %inc7_instrumented, i32* %taglevel_instrumented, align 4
Target of   store i32 %inc7_instrumented, i32* %taglevel_instrumented, align 4 is   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %25, i32 0, i32 2 with PAG id 2292
Checking PagEdge node associated to:   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %25, i32 0, i32 2
Visist starts at PAGNode 2291
[SelectDef] On node: ValVar ID: 2291
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2219-->2291
[SelectDef] On node: ValVar ID: 2219
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2220-->2219
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2219
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2220 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2203-->2219
[SelectDef] On node: ValVar ID: 2203
 %struct.sxml_t* %state { 0th arg state_pushtoken_instrumented  }
On edge 1179-->2203
On edge 1319-->2203
On edge 1431-->2203
On edge 1468-->2203
On edge 1649-->2203
On edge 1699-->2203
On edge 1818-->2203
On edge 1911-->2203
On edge 2006-->2203
On edge 2493-->2203
[SelectDef] On node: ValVar ID: 2493
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2493
[SelectDef] On node: ValVar ID: 2399
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2400-->2399
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2399
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2400 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2388-->2399
[SelectDef] On node: ValVar ID: 2388
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1191-->2388
On edge 1440-->2388
[SelectDef] On node: ValVar ID: 1440
   %34 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1440
[SelectDef] On node: ValVar ID: 1351
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1352-->1351
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1351
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1352 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1340-->1351
[SelectDef] On node: ValVar ID: 1340
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 750-->1340
On edge 750-->1340
Node 750 already visited
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 1191
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1191
[SelectDef] On node: ValVar ID: 1104
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1105-->1104
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1104
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1105 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1093-->1104
[SelectDef] On node: ValVar ID: 1093
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 750-->1093
Node 750 already visited
On edge 750-->1093
Node 750 already visited
[SelectDef] On node: ValVar ID: 2006
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1943-->2006
[SelectDef] On node: ValVar ID: 1943
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1944-->1943
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1943
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1944 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1932-->1943
[SelectDef] On node: ValVar ID: 1932
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 750-->1932
Node 750 already visited
[SelectDef] On node: ValVar ID: 1911
   %24 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1849-->1911
[SelectDef] On node: ValVar ID: 1849
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1850-->1849
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1849
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1850 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1838-->1849
[SelectDef] On node: ValVar ID: 1838
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 750-->1838
Node 750 already visited
[SelectDef] On node: ValVar ID: 1818
   %34 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1729-->1818
[SelectDef] On node: ValVar ID: 1729
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1730-->1729
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1729
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1730 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1718-->1729
[SelectDef] On node: ValVar ID: 1718
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 750-->1718
Node 750 already visited
[SelectDef] On node: ValVar ID: 1699
   %41 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1597-->1699
[SelectDef] On node: ValVar ID: 1597
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1598-->1597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1597
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1598 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1584-->1597
[SelectDef] On node: ValVar ID: 1584
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 750-->1584
Node 750 already visited
On edge 2702-->1584
[SelectDef] On node: ValVar ID: 2702
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2679-->2702
[SelectDef] On node: ValVar ID: 2679
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2680-->2679
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2679
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2680 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2666-->2679
[SelectDef] On node: ValVar ID: 2666
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2547-->2666
[SelectDef] On node: ValVar ID: 2547
   %54 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2547
Node 2399 already visited
[SelectDef] On node: ValVar ID: 1649
   %20 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1597-->1649
Node 1597 already visited
[SelectDef] On node: ValVar ID: 1468
   %46 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1468
Node 1351 already visited
[SelectDef] On node: ValVar ID: 1431
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1431
Node 1351 already visited
[SelectDef] On node: ValVar ID: 1319
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1256-->1319
[SelectDef] On node: ValVar ID: 1256
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1257-->1256
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1256
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1257 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1245-->1256
[SelectDef] On node: ValVar ID: 1245
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 750-->1245
Node 750 already visited
[SelectDef] On node: ValVar ID: 1179
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1179
Node 1104 already visited
Found:
	- NodeId: 751 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1944 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1105 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1257 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1352 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1598 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1730 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1850 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2220 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2400 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2680 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 %dec_instrumented, i32* %taglevel14_instrumented, align 4
Target of   store i32 %dec_instrumented, i32* %taglevel14_instrumented, align 4 is   %taglevel14_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %32, i32 0, i32 2 with PAG id 2312
Checking PagEdge node associated to:   %taglevel14_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %32, i32 0, i32 2
Visist starts at PAGNode 2311
[SelectDef] On node: ValVar ID: 2311
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2219-->2311
[SelectDef] On node: ValVar ID: 2219
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2220-->2219
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2219
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2220 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2203-->2219
[SelectDef] On node: ValVar ID: 2203
 %struct.sxml_t* %state { 0th arg state_pushtoken_instrumented  }
On edge 1179-->2203
On edge 1319-->2203
On edge 1431-->2203
On edge 1468-->2203
On edge 1649-->2203
On edge 1699-->2203
On edge 1818-->2203
On edge 1911-->2203
On edge 2006-->2203
On edge 2493-->2203
[SelectDef] On node: ValVar ID: 2493
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2493
[SelectDef] On node: ValVar ID: 2399
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2400-->2399
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2399
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2400 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2388-->2399
[SelectDef] On node: ValVar ID: 2388
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1191-->2388
On edge 1440-->2388
[SelectDef] On node: ValVar ID: 1440
   %34 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1440
[SelectDef] On node: ValVar ID: 1351
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1352-->1351
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1351
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1352 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1340-->1351
[SelectDef] On node: ValVar ID: 1340
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 750-->1340
On edge 750-->1340
Node 750 already visited
[SelectDef] On node: ValVar ID: 750
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 751-->750
[SelectDefs] Adding node: FIObjVar ID: 751 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 1191
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1191
[SelectDef] On node: ValVar ID: 1104
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1105-->1104
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1104
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1105 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1093-->1104
[SelectDef] On node: ValVar ID: 1093
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 750-->1093
Node 750 already visited
On edge 750-->1093
Node 750 already visited
[SelectDef] On node: ValVar ID: 2006
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1943-->2006
[SelectDef] On node: ValVar ID: 1943
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1944-->1943
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1943
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1944 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1932-->1943
[SelectDef] On node: ValVar ID: 1932
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 750-->1932
Node 750 already visited
[SelectDef] On node: ValVar ID: 1911
   %24 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1849-->1911
[SelectDef] On node: ValVar ID: 1849
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1850-->1849
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1849
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1850 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1838-->1849
[SelectDef] On node: ValVar ID: 1838
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 750-->1838
Node 750 already visited
[SelectDef] On node: ValVar ID: 1818
   %34 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1729-->1818
[SelectDef] On node: ValVar ID: 1729
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1730-->1729
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1729
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1730 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1718-->1729
[SelectDef] On node: ValVar ID: 1718
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 750-->1718
Node 750 already visited
[SelectDef] On node: ValVar ID: 1699
   %41 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1597-->1699
[SelectDef] On node: ValVar ID: 1597
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1598-->1597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1597
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1598 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1584-->1597
[SelectDef] On node: ValVar ID: 1584
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 750-->1584
Node 750 already visited
On edge 2702-->1584
[SelectDef] On node: ValVar ID: 2702
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2679-->2702
[SelectDef] On node: ValVar ID: 2679
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2680-->2679
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2679
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2680 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2666-->2679
[SelectDef] On node: ValVar ID: 2666
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2547-->2666
[SelectDef] On node: ValVar ID: 2547
   %54 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2399-->2547
Node 2399 already visited
[SelectDef] On node: ValVar ID: 1649
   %20 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1597-->1649
Node 1597 already visited
[SelectDef] On node: ValVar ID: 1468
   %46 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1468
Node 1351 already visited
[SelectDef] On node: ValVar ID: 1431
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1351-->1431
Node 1351 already visited
[SelectDef] On node: ValVar ID: 1319
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1256-->1319
[SelectDef] On node: ValVar ID: 1256
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1257-->1256
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1256
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1257 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1245-->1256
[SelectDef] On node: ValVar ID: 1245
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 750-->1245
Node 750 already visited
[SelectDef] On node: ValVar ID: 1179
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1104-->1179
Node 1104 already visited
Found:
	- NodeId: 751 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1944 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1105 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1257 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1352 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1598 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1730 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1850 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2220 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2400 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2680 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2217
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2218
[SelectDef] On node: FIObjVar ID: 2218 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2218 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2218 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %38, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %38, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_find_notalnum_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2337
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2338
[SelectDef] On node: FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2338 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2338 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2339
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2340
[SelectDef] On node: FIObjVar ID: 2340 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2340 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2340 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %it_instrumented, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2341
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2342
[SelectDef] On node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2342 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2341
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2342
[SelectDef] On node: FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2342 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2342 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %20, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %20, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_attributes_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 2399
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 2400
[SelectDef] On node: FIObjVar ID: 2400 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2400 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 2400 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 2401
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 2402
[SelectDef] On node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 2402 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 2403
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2404
[SelectDef] On node: FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2404 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2404 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 2405
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2406
[SelectDef] On node: FIObjVar ID: 2406 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2406 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2406 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 2407
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2408
[SelectDef] On node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2408 Instr:   %name_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %15, i32* %ntokens_instrumented, align 4
Target of   store i32 %15, i32* %ntokens_instrumented, align 4 is   %ntokens_instrumented = alloca i32, align 4 with PAG id 2409
Checking PagEdge node associated to:   %ntokens_instrumented = alloca i32, align 4
Visist starts at PAGNode 2410
[SelectDef] On node: FIObjVar ID: 2410 (base object)
   %ntokens_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2410 (base object)
   %ntokens_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2410 Instr:   %ntokens_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %eq_instrumented, align 4 is   %eq_instrumented = alloca i8*, align 4 with PAG id 2411
Checking PagEdge node associated to:   %eq_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2412
[SelectDef] On node: FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2412 (base object)
   %eq_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2412 Instr:   %eq_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2397
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2398
[SelectDef] On node: FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2398 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call11_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 2413
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2414
[SelectDef] On node: FIObjVar ID: 2414 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2414 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2414 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call14_instrumented, i8** %quot_instrumented, align 4
Target of   store i8* %call14_instrumented, i8** %quot_instrumented, align 4 is   %quot_instrumented = alloca i8*, align 4 with PAG id 2415
Checking PagEdge node associated to:   %quot_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2416
[SelectDef] On node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2416 Instr:   %quot_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2397
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2398
[SelectDef] On node: FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2398 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2397
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2398
[SelectDef] On node: FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2398 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr29_instrumented, i8** %value_instrumented, align 4
Target of   store i8* %add.ptr29_instrumented, i8** %value_instrumented, align 4 is   %value_instrumented = alloca i8*, align 4 with PAG id 2417
Checking PagEdge node associated to:   %value_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2418
[SelectDef] On node: FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2418 (base object)
   %value_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2418 Instr:   %value_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call31_instrumented, i8** %quot_instrumented, align 4
Target of   store i8* %call31_instrumented, i8** %quot_instrumented, align 4 is   %quot_instrumented = alloca i8*, align 4 with PAG id 2415
Checking PagEdge node associated to:   %quot_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2416
[SelectDef] On node: FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2416 (base object)
   %quot_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2416 Instr:   %quot_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2397
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2398
[SelectDef] On node: FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2398 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call37_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call37_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 2419
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 2420
[SelectDef] On node: FIObjVar ID: 2420 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2420 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2420 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %58, i32* %retval_instrumented, align 4
Target of   store i32 %58, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2397
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2398
[SelectDef] On node: FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2398 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call43_instrumented, i8** %name_instrumented, align 4
Target of   store i8* %call43_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 2407
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2408
[SelectDef] On node: FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2408 (base object)
   %name_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2408 Instr:   %name_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %add.ptr44_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %add.ptr44_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2421
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2422
[SelectDef] On node: FIObjVar ID: 2422 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2422 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2422 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i16 %conv47_instrumented, i16* %size_instrumented, align 2
Target of   store i16 %conv47_instrumented, i16* %size_instrumented, align 2 is   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %67, i32 0, i32 1 with PAG id 2580
Checking PagEdge node associated to:   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %67, i32 0, i32 1
Visist starts at PAGNode 2579
[SelectDef] On node: ValVar ID: 2579
   %67 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2421-->2579
[SelectDef] On node: ValVar ID: 2421
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2422-->2421
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2421
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2422 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2571-->2421
[SelectDef] On node: ValVar ID: 2571
   %add.ptr44_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %62, i32 %sub_instrumented 
On edge 2568-->2571
[SelectDef] On node: ValVar ID: 2568
   %62 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2567-->2568
[SelectDef] On node: ValVar ID: 2567
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %61, i32 0, i32 2 
On edge 2566-->2567
[SelectDef] On node: ValVar ID: 2566
   %61 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2401-->2566
[SelectDef] On node: ValVar ID: 2401
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2402-->2401
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2401
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2402 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2389-->2401
[SelectDef] On node: ValVar ID: 2389
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1192-->2389
On edge 1441-->2389
[SelectDef] On node: ValVar ID: 1441
   %35 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1353-->1441
[SelectDef] On node: ValVar ID: 1353
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1354-->1353
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1353
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1354 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1341-->1353
[SelectDef] On node: ValVar ID: 1341
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 754-->1341
On edge 754-->1341
Node 754 already visited
[SelectDef] On node: ValVar ID: 754
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 755-->754
[SelectDefs] Adding node: FIObjVar ID: 755 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1192
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1106-->1192
[SelectDef] On node: ValVar ID: 1106
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1107-->1106
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1106
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1107 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1094-->1106
[SelectDef] On node: ValVar ID: 1094
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 754-->1094
Node 754 already visited
On edge 754-->1094
Node 754 already visited
Found:
	- NodeId: 755 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1107 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1354 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2402 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2422 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %call48_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call48_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2397
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2398
[SelectDef] On node: FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2398 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2398 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %75, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %75, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_rtrim_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2607
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2608
[SelectDef] On node: FIObjVar ID: 2608 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2608 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2608 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2609
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2610
[SelectDef] On node: FIObjVar ID: 2610 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2610 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2610 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %it_instrumented, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2611
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2612
[SelectDef] On node: FIObjVar ID: 2612 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2612 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2612 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4 is   %prev_instrumented = alloca i8*, align 4 with PAG id 2613
Checking PagEdge node associated to:   %prev_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2614
[SelectDef] On node: FIObjVar ID: 2614 (base object)
   %prev_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2614 (base object)
   %prev_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2614 Instr:   %prev_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %15, i8** %retval_instrumented, align 4
Target of   store i8* %15, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2605
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2606
[SelectDef] On node: FIObjVar ID: 2606 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2606 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2606 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %16, i8** %it_instrumented, align 4
Target of   store i8* %16, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2611
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2612
[SelectDef] On node: FIObjVar ID: 2612 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2612 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2612 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %17, i8** %retval_instrumented, align 4
Target of   store i8* %17, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2605
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2606
[SelectDef] On node: FIObjVar ID: 2606 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2606 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2606 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %22, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %22, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_attrvalue_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 2679
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 2680
[SelectDef] On node: FIObjVar ID: 2680 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2680 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 2680 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 2681
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 2682
[SelectDef] On node: FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2682 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 2682 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2683
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2684
[SelectDef] On node: FIObjVar ID: 2684 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2684 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2684 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 2685
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 2686
[SelectDef] On node: FIObjVar ID: 2686 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2686 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2686 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %13, i32* %retval_instrumented, align 4
Target of   store i32 %13, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2677
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2678
[SelectDef] On node: FIObjVar ID: 2678 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2678 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2678 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2677
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2678
[SelectDef] On node: FIObjVar ID: 2678 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2678 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2678 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %18, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %18, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function print_prettyxml_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2737
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2738
[SelectDef] On node: FIObjVar ID: 2738 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2738 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2738 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4 is   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2739
Checking PagEdge node associated to:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2740
[SelectDef] On node: FIObjVar ID: 2740 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2740 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2740 Instr:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4
Target of   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4 is   %num_tokens.addr_instrumented = alloca i32, align 4 with PAG id 2741
Checking PagEdge node associated to:   %num_tokens.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2742
[SelectDef] On node: FIObjVar ID: 2742 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2742 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2742 Instr:   %num_tokens.addr_instrumented = alloca i32, align 4
Finding defs for:   store i32* %indentlevel, i32** %indentlevel.addr_instrumented, align 4
Target of   store i32* %indentlevel, i32** %indentlevel.addr_instrumented, align 4 is   %indentlevel.addr_instrumented = alloca i32*, align 4 with PAG id 2743
Checking PagEdge node associated to:   %indentlevel.addr_instrumented = alloca i32*, align 4
Visist starts at PAGNode 2744
[SelectDef] On node: FIObjVar ID: 2744 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4 
Start node is a Def already, adding FIObjVar ID: 2744 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4  to result
Found:
	- NodeId: 2744 Instr:   %indentlevel.addr_instrumented = alloca i32*, align 4
Finding defs for:   store i32 0, i32* %i_instrumented, align 4
Target of   store i32 0, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2745
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2746
[SelectDef] On node: FIObjVar ID: 2746 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2746 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2746 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2747
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2748
[SelectDef] On node: FIObjVar ID: 2748 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2748 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2748 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %10, align 4
Target of   store i32 %inc_instrumented, i32* %10, align 4 is   %10 = load i32*, i32** %indentlevel.addr_instrumented, align 4 with PAG id 2771
Checking PagEdge node associated to:   %10 = load i32*, i32** %indentlevel.addr_instrumented, align 4
Visist starts at PAGNode 2743
[SelectDef] On node: ValVar ID: 2743
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2744-->2743
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2743
	-  %indentlevel.addr_instrumented = alloca i32*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2744 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2728-->2743
[SelectDef] On node: ValVar ID: 2728
 i32* %indentlevel { 3rd arg print_prettyxml_instrumented  }
On edge 365-->2728
On edge 365-->2728
Node 365 already visited
On edge 365-->2728
Node 365 already visited
[SelectDef] On node: ValVar ID: 365
   %indent = alloca i32, align 4 
On edge 366-->365
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 365
	-  %indent = alloca i32, align 4
[SelectDefs] Adding node: FIObjVar ID: 366 (base object)
   %indent = alloca i32, align 4 
On edge 261-->365
[SelectDef] On node: ValVar ID: 261
 i32 0 { constant data }
On edge 3-->261
Discarding edge
Found:
	- NodeId: 366 Instr:   %indent = alloca i32, align 4
	- NodeId: 2744 Instr:   %indentlevel.addr_instrumented = alloca i32*, align 4
Finding defs for:   store i32 0, i32* %j_instrumented, align 4
Target of   store i32 0, i32* %j_instrumented, align 4 is   %j_instrumented = alloca i32, align 4 with PAG id 2749
Checking PagEdge node associated to:   %j_instrumented = alloca i32, align 4
Visist starts at PAGNode 2750
[SelectDef] On node: FIObjVar ID: 2750 (base object)
   %j_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2750 (base object)
   %j_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2750 Instr:   %j_instrumented = alloca i32, align 4
Finding defs for:   store i32 %add14_instrumented, i32* %j_instrumented, align 4
Target of   store i32 %add14_instrumented, i32* %j_instrumented, align 4 is   %j_instrumented = alloca i32, align 4 with PAG id 2749
Checking PagEdge node associated to:   %j_instrumented = alloca i32, align 4
Visist starts at PAGNode 2750
[SelectDef] On node: FIObjVar ID: 2750 (base object)
   %j_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2750 (base object)
   %j_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2750 Instr:   %j_instrumented = alloca i32, align 4
Finding defs for:   store i32 %inc16_instrumented, i32* %j_instrumented, align 4
Target of   store i32 %inc16_instrumented, i32* %j_instrumented, align 4 is   %j_instrumented = alloca i32, align 4 with PAG id 2749
Checking PagEdge node associated to:   %j_instrumented = alloca i32, align 4
Visist starts at PAGNode 2750
[SelectDef] On node: FIObjVar ID: 2750 (base object)
   %j_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2750 (base object)
   %j_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2750 Instr:   %j_instrumented = alloca i32, align 4
Finding defs for:   store i32 %dec_instrumented, i32* %33, align 4
Target of   store i32 %dec_instrumented, i32* %33, align 4 is   %33 = load i32*, i32** %indentlevel.addr_instrumented, align 4 with PAG id 2833
Checking PagEdge node associated to:   %33 = load i32*, i32** %indentlevel.addr_instrumented, align 4
Visist starts at PAGNode 2743
[SelectDef] On node: ValVar ID: 2743
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2744-->2743
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2743
	-  %indentlevel.addr_instrumented = alloca i32*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2744 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2728-->2743
[SelectDef] On node: ValVar ID: 2728
 i32* %indentlevel { 3rd arg print_prettyxml_instrumented  }
On edge 365-->2728
On edge 365-->2728
Node 365 already visited
On edge 365-->2728
Node 365 already visited
[SelectDef] On node: ValVar ID: 365
   %indent = alloca i32, align 4 
On edge 366-->365
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 365
	-  %indent = alloca i32, align 4
[SelectDefs] Adding node: FIObjVar ID: 366 (base object)
   %indent = alloca i32, align 4 
On edge 261-->365
[SelectDef] On node: ValVar ID: 261
 i32 0 { constant data }
On edge 3-->261
Discarding edge
Found:
	- NodeId: 366 Instr:   %indent = alloca i32, align 4
	- NodeId: 2744 Instr:   %indentlevel.addr_instrumented = alloca i32*, align 4
Finding defs for:   store i32 %add23_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %add23_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2745
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2746
[SelectDef] On node: FIObjVar ID: 2746 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2746 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2746 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i32 %inc25_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %inc25_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2745
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2746
[SelectDef] On node: FIObjVar ID: 2746 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2746 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2746 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i16 %46, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %46, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function count_lines_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2875
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2876
[SelectDef] On node: FIObjVar ID: 2876 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2876 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2876 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Target of   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 is   %bufferlen.addr_instrumented = alloca i32, align 4 with PAG id 2877
Checking PagEdge node associated to:   %bufferlen.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2878
[SelectDef] On node: FIObjVar ID: 2878 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2878 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2878 Instr:   %bufferlen.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 2879
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2880
[SelectDef] On node: FIObjVar ID: 2880 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2880 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2880 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %6, i8** %it_instrumented, align 4
Target of   store i8* %6, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2881
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2882
[SelectDef] On node: FIObjVar ID: 2882 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2882 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2882 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i32 0, i32* %i_instrumented, align 4
Target of   store i32 0, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2883
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2884
[SelectDef] On node: FIObjVar ID: 2884 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2884 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2884 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2881
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2882
[SelectDef] On node: FIObjVar ID: 2882 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2882 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2882 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %15, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %15, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2881
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2882
[SelectDef] On node: FIObjVar ID: 2882 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2882 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2882 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %inc_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2883
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2884
[SelectDef] On node: FIObjVar ID: 2884 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2884 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2884 Instr:   %i_instrumented = alloca i32, align 4
Checking function print_tokenvalue_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2933
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2934
[SelectDef] On node: FIObjVar ID: 2934 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2934 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2934 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %token, %struct.sxmltok_t** %token.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %token, %struct.sxmltok_t** %token.addr_instrumented, align 4 is   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2935
Checking PagEdge node associated to:   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2936
[SelectDef] On node: FIObjVar ID: 2936 (base object)
   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2936 (base object)
   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2936 Instr:   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i16 %15, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %15, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function print_chartokens_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2977
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2978
[SelectDef] On node: FIObjVar ID: 2978 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2978 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2978 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4 is   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2979
Checking PagEdge node associated to:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2980
[SelectDef] On node: FIObjVar ID: 2980 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2980 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2980 Instr:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4
Target of   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4 is   %num_tokens.addr_instrumented = alloca i32, align 4 with PAG id 2981
Checking PagEdge node associated to:   %num_tokens.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2982
[SelectDef] On node: FIObjVar ID: 2982 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2982 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2982 Instr:   %num_tokens.addr_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %i_instrumented, align 4
Target of   store i32 0, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2983
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2984
[SelectDef] On node: FIObjVar ID: 2984 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2984 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2984 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2987
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2988
[SelectDef] On node: FIObjVar ID: 2988 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2988 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2988 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %10, i32* %retval_instrumented, align 4
Target of   store i32 %10, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2975
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2976
[SelectDef] On node: FIObjVar ID: 2976 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2976 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2976 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr3_instrumented, i8** %ampr_instrumented, align 4
Target of   store i8* %add.ptr3_instrumented, i8** %ampr_instrumented, align 4 is   %ampr_instrumented = alloca i8*, align 4 with PAG id 2985
Checking PagEdge node associated to:   %ampr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2986
[SelectDef] On node: FIObjVar ID: 2986 (base object)
   %ampr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2986 (base object)
   %ampr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2986 Instr:   %ampr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %inc_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2983
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2984
[SelectDef] On node: FIObjVar ID: 2984 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2984 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2984 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i32 %39, i32* %retval_instrumented, align 4
Target of   store i32 %39, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2975
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2976
[SelectDef] On node: FIObjVar ID: 2976 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2976 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2976 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %44, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %44, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 124
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 126
[SelectDef] On node: FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 126 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 126 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
101;ADEF;-1;BASE;8128;FIObjVar ID: 360 (base object)    %buffer = alloca [8128 x i8], align 1 
144;ADEF;-1;BASE;1536;FIObjVar ID: 364 (base object)    %tokens = alloca [128 x %struct.sxmltok_t], align 4 
  %tokens = alloca [128 x %struct.sxmltok_t], align 4 | defStr: 144 | storeStr:  | libStr: 
  %buffer = alloca [8128 x i8], align 1 | defStr: 101 | storeStr:  | libStr: 
---------------------------------------------------
Writing '/home/laser/Desktop/zbouncer/test/../test/xml-parser-24/graph/pag.dot'...
Writing '/home/laser/Desktop/zbouncer/test/../test/xml-parser-24/graph/svfg.dot'...
Writing '/home/laser/Desktop/zbouncer/test/../test/xml-parser-24/graph/icfg.dot'...
