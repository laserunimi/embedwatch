
*********CallGraph Stats***************
################ (program : xml-parser.rectracker.bc)###############
-------------------------------------------------------
TotalNode           43
TotalCycle          0
NodeInCycle         0
MaxNodeInCycle      0
TotalEdge           138
CalRetPairInCycle   0
#######################################################

*********General Stats***************
################ (program : xml-parser.rectracker.bc)###############
TotalPointers       2751
TotalObjects        219
TotalFieldObjects   21
MaxStructSize       4
TotalSVFStmts       2864
TotalPTASVFStmts    1378
FIObjNum            1
FSObjNum            217
AddrsNum            326
LoadsNum            678
StoresNum           331
CopysNum            203
GepsNum             310
CallsNum            413
ReturnsNum          71
FunctionObjs        43
GlobalObjs          3
HeapObjs            0
StackObjs           171
VarStructObj        6
VarArrayObj         5
ConstStructObj      0
ConstArrayObj       0
NonPtrObj           106
ConstantObj         0
IndCallSites        0
TotalCallSite       138
BBWith2Succ         104
BBWith3Succ         7
-------------------------------------------------------
LLVMIRTime          0.006
SymbolTableTime     0.021
SVFIRTime           0.039
#######################################################

*********Constraint Graph Stats***************
################ (program : xml-parser.rectracker.bc)###############
-------------------------------------------------------
AvgIn/OutCopyEdge   0.785888
AvgIn/OutLoadEdge   0.344688
AvgIn/OutAddrEdge   0.195458
AvgIn/OutEdge       1.43877
LocalVarInRecur     0
NumOfCGNode         2995
TotalValidNode      1233
TotalValidObjNode   197
NumOfCGEdge         1533
NumOfAddrs          241
NumOfCopys          675
NumOfGeps           294
NumOfLoads          425
NumOfStores         139
MaxInCopyEdge       13
MaxOutCopyEdge      46
MaxInLoadEdge       16
MaxOutLoadEdge      9
MaxInStoreEdge      2
MaxOutStoreEdge     16
AvgIn/OutStoreEdge  0
MaxInAddrEdge       1
MaxOutAddrEdge      47
#######################################################

*********Andersen Pointer Analysis Stats***************
################ (program : xml-parser.rectracker.bc)###############
-------------------------------------------------------
CollapseTime        0
TotalTime           0.047
SCCDetectTime       0
SCCMergeTime        0
LoadStoreTime       0
CopyGepTime         0
UpdateCGTime        0
AvgPtsSetSize       0.384491
AvgTopLvlPtsSize    0.9963
TotalPointers       2751
TotalObjects        240
AddrProcessed       264
CopyProcessed       672
GepProcessed        295
LoadProcessed       415
StoreProcessed      127
NumOfSFRs           0
NumOfFieldExpand    0
Pointers            2745
MemObjects          219
DummyFieldPtrs      6
FieldObjs           21
MaxPtsSetSize       1
SolveIterations     3
IndCallSites        0
IndEdgeSolved       0
NumOfSCCDetect      3
TotalCycleNum       11
TotalPWCCycleNum    0
NodesInCycles       98
MaxNodesInSCC       61
NullPointer         0
PointsToConstPtr    1
PointsToBlkPtr      0
#######################################################

****Persistent Points-To Cache Statistics: Andersen's analysis bitvector****
################ (program : xml-parser.rectracker.bc)###############
UniquePointsToSets       241
TotalUnions              1332
PropertyUnions           1332
UniqueUnions             0
LookupUnions             0
PreemptiveUnions         0
TotalComplements         9061
PropertyComplements      9057
UniqueComplements        1
LookupComplements        2
PreemptiveComplements    1
TotalIntersections       632
PropertyIntersections    630
UniqueIntersections      0
LookupIntersections      0
PreemptiveIntersections  2
#######################################################

*********Memory SSA Statistics***************
################ (program : xml-parser.rectracker.bc)###############
-------------------------------------------------------
TotalMSSATime       0.026
GenRegionTime       0.016
GenMUCHITime        0.004
InsertPHITime       0
SSARenameTime       0.006
AverageRegSize      1.01667
MaxRegSize          3
MemRegions          120
FunEntryChi         141
FunRetMu            141
CSChiNode           1
CSMuNode            60
LoadMuNode          431
StoreChiNode        143
MSSAPhi             70
FunHasEntryChi      24
FunHasRetMu         29
CSHasChi            1
CSHasMu             37
LoadHasMu           431
StoreHasChi         143
BBHasMSSAPhi        29
#######################################################

****SVFG Statistics****

************************
################ (program : xml-parser.rectracker.bc)###############
-------------------------------------------------------
TotalTime           0.004
ConnDirEdgeTime     0
ConnIndEdgeTime     0.003
TLNodeTime          0
ATNodeTime          0.001
OptTime             0
AvgWeight           1.00811
MSSAPhi             70
TotalNode           1967
FormalIn            141
FormalOut           141
FormalParam         54
FormalRet           5
ActualIn            60
ActualOut           1
ActualParam         305
ActualRet           19
Addr                264
Copy                14
Gep                 310
Store               143
Load                431
PHI                 8
TotalEdge           2556
DirectEdge          1570
IndirectEdge        986
IndirectEdgeLabels  994
IndCallEdge         62
IndRetEdge          3
DirectCallEdge      190
DirectRetEdge       18
AvgInDegree         1
AvgOutDegree        1
MaxInDegree         13
MaxOutDegree        20
AvgIndInDeg         1
AvgIndOutDeg        2
MaxIndInDeg         13
MaxIndOutDeg        14
#######################################################

*********Memory SSA Statistics***************
################ (program : xml-parser.rectracker.bc)###############
-------------------------------------------------------
TotalMSSATime       0.052
GenRegionTime       0.035
GenMUCHITime        0.014
InsertPHITime       0.002
SSARenameTime       0.011
AverageRegSize      1.03743
MaxRegSize          4
MemRegions          187
FunEntryChi         307
FunRetMu            307
CSChiNode           162
CSMuNode            305
LoadMuNode          672
StoreChiNode        330
MSSAPhi             234
FunHasEntryChi      29
FunHasRetMu         29
CSHasChi            82
CSHasMu             82
LoadHasMu           678
StoreHasChi         330
BBHasMSSAPhi        49
#######################################################

****SVFG Statistics****

************************
################ (program : xml-parser.rectracker.bc)###############
-------------------------------------------------------
TotalTime           0.017
ConnDirEdgeTime     0
ConnIndEdgeTime     0.013
TLNodeTime          0
ATNodeTime          0.004
OptTime             0
AvgWeight           1.01128
MSSAPhi             234
TotalNode           4512
FormalIn            307
FormalOut           307
FormalParam         119
FormalRet           24
ActualIn            305
ActualOut           162
ActualParam         574
ActualRet           99
Addr                326
Copy                203
Gep                 310
Store               331
Load                678
PHI                 38
TotalEdge           5909
DirectEdge          3250
IndirectEdge        2659
IndirectEdgeLabels  2689
IndCallEdge         318
IndRetEdge          163
DirectCallEdge      413
DirectRetEdge       71
AvgInDegree         1
AvgOutDegree        1
MaxInDegree         13
MaxOutDegree        170
AvgIndInDeg         1
AvgIndOutDeg        1
MaxIndInDeg         13
MaxIndOutDeg        14
#######################################################
args PTA type: --pta-dda
Test - update svfg
(wrapper_scanf) CallICFGNode175 {fun: main}
Finding uses of   %arraydecay = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 with ID 368
[SelectDef] On node: ValVar ID: 368
   %arraydecay = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
On edge 326-->368
[SelectDef] On node: ValVar ID: 326
   %buffer = alloca [8128 x i8], align 1 
On edge 327-->326
[SelectDefs] Adding node: FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
Found:
	- 327   %buffer = alloca [8128 x i8], align 1
[DEFBUILDER] Building ADef
VFG-ID=1755 (store) | IntraICFGNode1774 {fun: state_pushtoken_instrumented}
StoreStmt: [Var2182 <-- Var2180]	
   store i16 %conv_instrumented, i16* %type2_instrumented, align 4 
VFG-ID=1754 (store) | IntraICFGNode1766 {fun: state_pushtoken_instrumented}
StoreStmt: [Var2147 <-- Var2177]	
   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 
VFG-ID=1570 (store) | IntraICFGNode439 {fun: sxml_parse_instrumented}
StoreStmt: [Var681 <-- Var664]	
   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 
VFG-ID=1799 (store) | IntraICFGNode2100 {fun: str_rtrim_instrumented}
StoreStmt: [Var2521 <-- Var2571]	
   store i8* %17, i8** %retval_instrumented, align 4 
VFG-ID=1796 (store) | IntraICFGNode2101 {fun: str_rtrim_instrumented}
StoreStmt: [Var2529 <-- Var2554]	
   store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4 
VFG-ID=1793 (store) | IntraICFGNode2077 {fun: str_rtrim_instrumented}
StoreStmt: [Var2523 <-- Var2512]	
   store i8* %start, i8** %start.addr_instrumented, align 4 
VFG-ID=1573 (store) | CallICFGNode445 {fun: sxml_parse_instrumented}
GepStmt: [Var3016 <-- Var713]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false) 
GepStmt: [Var3017 <-- Var714]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false) 
LoadStmt: [Var3018 <-- Var3017]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false) 
StoreStmt: [Var3016 <-- Var3018]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false) 
GepStmt: [Var3019 <-- Var713]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false) 
GepStmt: [Var3020 <-- Var714]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false) 
LoadStmt: [Var3021 <-- Var3020]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false) 
StoreStmt: [Var3019 <-- Var3021]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false) 
GepStmt: [Var3022 <-- Var713]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false) 
GepStmt: [Var3023 <-- Var714]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false) 
LoadStmt: [Var3024 <-- Var3023]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false) 
StoreStmt: [Var3022 <-- Var3024]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false) 
CopyStmt: [Var715 <-- Var713]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false) 
VFG-ID=1527 (store) | IntraICFGNode67 {fun: NameChar}
StoreStmt: [Var222 <-- Var216]	
   store i32 %c, i32* %c.addr, align 4 
VFG-ID=1673 (store) | IntraICFGNode1130 {fun: str_findchr_instrumented}
StoreStmt: [Var1449 <-- Var1437]	
   store i32 %c, i32* %c.addr_instrumented, align 4 
VFG-ID=1798 (store) | IntraICFGNode2121 {fun: str_rtrim_instrumented}
StoreStmt: [Var2527 <-- Var2568]	
   store i8* %16, i8** %it_instrumented, align 4 
VFG-ID=1524 (store) | IntraICFGNode39 {fun: NameStartChar}
StoreStmt: [Var160 <-- Var203]	
   store i32 %lor.ext, i32* %retval, align 4 
VFG-ID=1636 (store) | IntraICFGNode854 {fun: parse_instruction_instrumented}
StoreStmt: [Var1044 <-- Var1141]	
   store i8* %add.ptr18_instrumented, i8** %quest_instrumented, align 4 
VFG-ID=1756 (store) | IntraICFGNode1784 {fun: state_pushtoken_instrumented}
StoreStmt: [Var2192 <-- Var2190]	
   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4 
VFG-ID=1679 (store) | IntraICFGNode1195 {fun: parse_characters_instrumented}
StoreStmt: [Var1527 <-- Var1512]	
   store i8* %end, i8** %end.addr_instrumented, align 4 
VFG-ID=1787 (store) | IntraICFGNode2065 {fun: parse_attributes_instrumented}
StoreStmt: [Var2325 <-- Var2479]	
   store i8* %call42_instrumented, i8** %name_instrumented, align 4 
VFG-ID=1779 (store) | IntraICFGNode2003 {fun: parse_attributes_instrumented}
StoreStmt: [Var2333 <-- Var2419]	
   store i8* %call14_instrumented, i8** %quot_instrumented, align 4 
VFG-ID=1825 (store) | IntraICFGNode2315 {fun: count_lines_instrumented}
StoreStmt: [Var2791 <-- Var2783]	
   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 
VFG-ID=1736 (store) | IntraICFGNode1642 {fun: str_findstr_instrumented}
StoreStmt: [Var2025 <-- Var2011]	
   store i8* %end, i8** %end.addr_instrumented, align 4 
VFG-ID=1608 (store) | CallICFGNode652 {fun: sxml_parse_instrumented}
GepStmt: [Var3052 <-- Var906]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 12, i1 false) 
GepStmt: [Var3053 <-- Var907]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 12, i1 false) 
LoadStmt: [Var3054 <-- Var3053]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 12, i1 false) 
StoreStmt: [Var3052 <-- Var3054]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 12, i1 false) 
GepStmt: [Var3055 <-- Var906]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 12, i1 false) 
GepStmt: [Var3056 <-- Var907]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 12, i1 false) 
LoadStmt: [Var3057 <-- Var3056]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 12, i1 false) 
StoreStmt: [Var3055 <-- Var3057]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 12, i1 false) 
GepStmt: [Var3058 <-- Var906]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 12, i1 false) 
GepStmt: [Var3059 <-- Var907]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 12, i1 false) 
LoadStmt: [Var3060 <-- Var3059]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 12, i1 false) 
StoreStmt: [Var3058 <-- Var3060]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 12, i1 false) 
CopyStmt: [Var908 <-- Var906]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 12, i1 false) 
VFG-ID=1530 (store) | IntraICFGNode119 {fun: WhiteSpace}
StoreStmt: [Var289 <-- Var281]	
   store i32 %c, i32* %c.addr, align 4 
VFG-ID=1656 (store) | IntraICFGNode989 {fun: parse_start_instrumented}
StoreStmt: [Var1293 <-- Var1305]	
   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 
VFG-ID=1773 (store) | IntraICFGNode1911 {fun: parse_attributes_instrumented}
StoreStmt: [Var2323 <-- Var2357]	
   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 
VFG-ID=1718 (store) | IntraICFGNode1520 {fun: parse_cdata_instrumented}
StoreStmt: [Var1872 <-- Var1890]	
   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 
VFG-ID=1783 (store) | IntraICFGNode2034 {fun: parse_attributes_instrumented}
StoreStmt: [Var2333 <-- Var2451]	
   store i8* %call30_instrumented, i8** %quot_instrumented, align 4 
VFG-ID=1671 (store) | IntraICFGNode1128 {fun: str_findchr_instrumented}
StoreStmt: [Var1445 <-- Var1435]	
   store i8* %start, i8** %start.addr_instrumented, align 4 
VFG-ID=1614 (store) | IntraICFGNode665 {fun: str_ltrim_instrumented}
StoreStmt: [Var929 <-- Var920]	
   store i8* %start, i8** %start.addr_instrumented, align 4 
VFG-ID=1828 (store) | IntraICFGNode2322 {fun: count_lines_instrumented}
StoreStmt: [Var2797 <-- Var2807]	
   store i8* %6, i8** %it_instrumented, align 4 
VFG-ID=1832 (store) | IntraICFGNode2342 {fun: count_lines_instrumented}
StoreStmt: [Var2797 <-- Var2832]	
   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 
VFG-ID=1686 (store) | IntraICFGNode1281 {fun: parse_characters_instrumented}
StoreStmt: [Var1529 <-- Var1623]	
   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4 
VFG-ID=1742 (store) | IntraICFGNode1721 {fun: str_findstr_instrumented}
StoreStmt: [Var2023 <-- Var2106]	
   store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4 
VFG-ID=1706 (store) | IntraICFGNode1437 {fun: parse_comment_instrumented}
StoreStmt: [Var1780 <-- Var1798]	
   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 
VFG-ID=1645 (store) | IntraICFGNode909 {fun: parse_doctype_instrumented}
StoreStmt: [Var1194 <-- Var1212]	
   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 
VFG-ID=1693 (store) | IntraICFGNode1328 {fun: parse_end_instrumented}
StoreStmt: [Var1665 <-- Var1683]	
   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 
VFG-ID=1692 (store) | IntraICFGNode1320 {fun: parse_end_instrumented}
StoreStmt: [Var1663 <-- Var1675]	
   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 
VFG-ID=1827 (store) | IntraICFGNode2320 {fun: count_lines_instrumented}
StoreStmt: [Var2795 <-- Var2805]	
   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 
VFG-ID=1795 (store) | IntraICFGNode2087 {fun: str_rtrim_instrumented}
StoreStmt: [Var2527 <-- Var2545]	
   store i8* %9, i8** %it_instrumented, align 4 
VFG-ID=1776 (store) | IntraICFGNode1952 {fun: parse_attributes_instrumented}
StoreStmt: [Var2329 <-- Var2395]	
   store i8* %call6_instrumented, i8** %eq_instrumented, align 4 
VFG-ID=1592 (store) | CallICFGNode630 {fun: sxml_parse_instrumented}
GepStmt: [Var3034 <-- Var806]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false) 
GepStmt: [Var3035 <-- Var807]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false) 
LoadStmt: [Var3036 <-- Var3035]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false) 
StoreStmt: [Var3034 <-- Var3036]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false) 
GepStmt: [Var3037 <-- Var806]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false) 
GepStmt: [Var3038 <-- Var807]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false) 
LoadStmt: [Var3039 <-- Var3038]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false) 
StoreStmt: [Var3037 <-- Var3039]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false) 
GepStmt: [Var3040 <-- Var806]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false) 
GepStmt: [Var3041 <-- Var807]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false) 
LoadStmt: [Var3042 <-- Var3041]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false) 
StoreStmt: [Var3040 <-- Var3042]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false) 
CopyStmt: [Var808 <-- Var806]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false) 
VFG-ID=1696 (store) | IntraICFGNode1374 {fun: parse_end_instrumented}
StoreStmt: [Var1659 <-- Var1721]	
   store i8* %call8_instrumented, i8** %gt_instrumented, align 4 
VFG-ID=1705 (store) | IntraICFGNode1429 {fun: parse_comment_instrumented}
StoreStmt: [Var1778 <-- Var1790]	
   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 
VFG-ID=1835 (store) | IntraICFGNode2360 {fun: print_tokenvalue_instrumented}
StoreStmt: [Var2850 <-- Var2841]	
   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 
VFG-ID=1576 (store) | IntraICFGNode450 {fun: sxml_parse_instrumented}
StoreStmt: [Var689 <-- Var719]	
   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 
VFG-ID=1615 (store) | IntraICFGNode666 {fun: str_ltrim_instrumented}
StoreStmt: [Var931 <-- Var921]	
   store i8* %end, i8** %end.addr_instrumented, align 4 
VFG-ID=1695 (store) | IntraICFGNode1369 {fun: parse_end_instrumented}
StoreStmt: [Var1663 <-- Var1717]	
   store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4 
VFG-ID=1616 (store) | IntraICFGNode675 {fun: str_ltrim_instrumented}
StoreStmt: [Var933 <-- Var949]	
   store i8* %9, i8** %it_instrumented, align 4 
VFG-ID=1684 (store) | IntraICFGNode1271 {fun: parse_characters_instrumented}
StoreStmt: [Var1533 <-- Var1608]	
   store i8* %call14_instrumented, i8** %colon_instrumented, align 4 
VFG-ID=1758 (store) | IntraICFGNode1797 {fun: state_pushtoken_instrumented}
StoreStmt: [Var2205 <-- Var103]	
   store i16 0, i16* %size_instrumented, align 2 
VFG-ID=1845 (store) | IntraICFGNode2436 {fun: print_chartokens_instrumented}
StoreStmt: [Var2902 <-- Var2934]	
   store i8* %add.ptr3_instrumented, i8** %ampr_instrumented, align 4 
VFG-ID=1595 (store) | IntraICFGNode503 {fun: sxml_parse_instrumented}
StoreStmt: [Var701 <-- Var821]	
   store i8* %add.ptr32_instrumented, i8** %start29_instrumented, align 4 
VFG-ID=1810 (store) | IntraICFGNode2182 {fun: print_prettyxml_instrumented}
StoreStmt: [Var2653 <-- Var2641]	
   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 
VFG-ID=1581 (store) | IntraICFGNode479 {fun: sxml_parse_instrumented}
StoreStmt: [Var695 <-- Var744]	
   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4 
VFG-ID=1728 (store) | IntraICFGNode1586 {fun: str_startswith_instrumented}
StoreStmt: [Var1959 <-- Var1945]	
   store i8* %end, i8** %end.addr_instrumented, align 4 
VFG-ID=1797 (store) | IntraICFGNode2120 {fun: str_rtrim_instrumented}
StoreStmt: [Var2521 <-- Var2562]	
   store i8* %15, i8** %retval_instrumented, align 4 
VFG-ID=1644 (store) | IntraICFGNode901 {fun: parse_doctype_instrumented}
StoreStmt: [Var1192 <-- Var1204]	
   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 
VFG-ID=1665 (store) | IntraICFGNode1112 {fun: parse_start_instrumented}
StoreStmt: [Var1287 <-- Var1402]	
   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4 
VFG-ID=1577 (store) | IntraICFGNode453 {fun: sxml_parse_instrumented}
StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 
VFG-ID=1709 (store) | IntraICFGNode1465 {fun: parse_comment_instrumented}
StoreStmt: [Var1778 <-- Var1819]	
   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 
VFG-ID=1659 (store) | IntraICFGNode1037 {fun: parse_start_instrumented}
StoreStmt: [Var1289 <-- Var1347]	
   store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4 
VFG-ID=1774 (store) | IntraICFGNode1916 {fun: parse_attributes_instrumented}
StoreStmt: [Var2325 <-- Var2361]	
   store i8* %call_instrumented, i8** %name_instrumented, align 4 
VFG-ID=1743 (store) | IntraICFGNode1685 {fun: str_findstr_instrumented}
StoreStmt: [Var2021 <-- Var2109]	
   store i8* %30, i8** %retval_instrumented, align 4 
VFG-ID=1631 (store) | IntraICFGNode800 {fun: parse_instruction_instrumented}
StoreStmt: [Var1048 <-- Var1097]	
   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 
VFG-ID=1657 (store) | IntraICFGNode997 {fun: parse_start_instrumented}
StoreStmt: [Var1295 <-- Var1313]	
   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 
VFG-ID=1569 (store) | IntraICFGNode438 {fun: sxml_parse_instrumented}
StoreStmt: [Var679 <-- Var663]	
   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 
VFG-ID=1672 (store) | IntraICFGNode1129 {fun: str_findchr_instrumented}
StoreStmt: [Var1447 <-- Var1436]	
   store i8* %end, i8** %end.addr_instrumented, align 4 
VFG-ID=1628 (store) | IntraICFGNode764 {fun: parse_instruction_instrumented}
StoreStmt: [Var1048 <-- Var1060]	
   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 
VFG-ID=1648 (store) | IntraICFGNode937 {fun: parse_doctype_instrumented}
StoreStmt: [Var1192 <-- Var1234]	
   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 
VFG-ID=1727 (store) | IntraICFGNode1585 {fun: str_startswith_instrumented}
StoreStmt: [Var1957 <-- Var1944]	
   store i8* %start, i8** %start.addr_instrumented, align 4 
VFG-ID=1765 (store) | IntraICFGNode1836 {fun: str_find_notalnum_instrumented}
StoreStmt: [Var2257 <-- Var2247]	
   store i8* %end, i8** %end.addr_instrumented, align 4 
VFG-ID=1622 (store) | IntraICFGNode716 {fun: state_setpos_instrumented}
StoreStmt: [Var995 <-- Var982]	
   store i8* %ptr, i8** %ptr.addr_instrumented, align 4 
VFG-ID=1629 (store) | IntraICFGNode772 {fun: parse_instruction_instrumented}
StoreStmt: [Var1050 <-- Var1068]	
   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 
VFG-ID=1804 (store) | IntraICFGNode2136 {fun: parse_attrvalue_instrumented}
StoreStmt: [Var2599 <-- Var2584]	
   store i8* %end, i8** %end.addr_instrumented, align 4 
VFG-ID=1749 (store) | IntraICFGNode1739 {fun: state_pushtoken_instrumented}
StoreStmt: [Var2143 <-- Var2124]	
   store i8* %start, i8** %start.addr_instrumented, align 4 
VFG-ID=1549 (store) | IntraICFGNode359 {fun: main}
StoreStmt: [Var328 <-- Var470]	
   store i32 %add30, i32* %bufferlen, align 4 
VFG-ID=1674 (store) | IntraICFGNode1165 {fun: str_findchr_instrumented}
StoreStmt: [Var1451 <-- Var1491]	
   store i8* %call_instrumented, i8** %it_instrumented, align 4 
VFG-ID=1757 (store) | IntraICFGNode1794 {fun: state_pushtoken_instrumented}
StoreStmt: [Var2202 <-- Var2200]	
   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4 
VFG-ID=1764 (store) | IntraICFGNode1835 {fun: str_find_notalnum_instrumented}
StoreStmt: [Var2255 <-- Var2246]	
   store i8* %start, i8** %start.addr_instrumented, align 4 
VFG-ID=1583 (store) | CallICFGNode517 {fun: sxml_parse_instrumented}
GepStmt: [Var3025 <-- Var757]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false) 
GepStmt: [Var3026 <-- Var758]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false) 
LoadStmt: [Var3027 <-- Var3026]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false) 
StoreStmt: [Var3025 <-- Var3027]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false) 
GepStmt: [Var3028 <-- Var757]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false) 
GepStmt: [Var3029 <-- Var758]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false) 
LoadStmt: [Var3030 <-- Var3029]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false) 
StoreStmt: [Var3028 <-- Var3030]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false) 
GepStmt: [Var3031 <-- Var757]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false) 
GepStmt: [Var3032 <-- Var758]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false) 
LoadStmt: [Var3033 <-- Var3032]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false) 
StoreStmt: [Var3031 <-- Var3033]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false) 
CopyStmt: [Var759 <-- Var757]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false) 
VFG-ID=1778 (store) | IntraICFGNode1975 {fun: parse_attributes_instrumented}
StoreStmt: [Var2331 <-- Var2407]	
   store i8* %call11_instrumented, i8** %space_instrumented, align 4 
VFG-ID=1750 (store) | IntraICFGNode1740 {fun: state_pushtoken_instrumented}
StoreStmt: [Var2145 <-- Var2125]	
   store i8* %end, i8** %end.addr_instrumented, align 4 
VFG-ID=1578 (store) | IntraICFGNode456 {fun: sxml_parse_instrumented}
StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 
VFG-ID=1735 (store) | IntraICFGNode1641 {fun: str_findstr_instrumented}
StoreStmt: [Var2023 <-- Var2010]	
   store i8* %start, i8** %start.addr_instrumented, align 4 
VFG-ID=1717 (store) | IntraICFGNode1512 {fun: parse_cdata_instrumented}
StoreStmt: [Var1870 <-- Var1882]	
   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 
VFG-ID=1596 (store) | IntraICFGNode519 {fun: sxml_parse_instrumented}
StoreStmt: [Var703 <-- Var825]	
   store i8* %call34_instrumented, i8** %lt33_instrumented, align 4 
VFG-ID=1681 (store) | IntraICFGNode1208 {fun: parse_characters_instrumented}
StoreStmt: [Var1535 <-- Var1550]	
   store i8* %call_instrumented, i8** %ampr_instrumented, align 4 
VFG-ID=1617 (store) | IntraICFGNode700 {fun: str_ltrim_instrumented}
StoreStmt: [Var933 <-- Var969]	
   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 
VFG-ID=1772 (store) | IntraICFGNode1903 {fun: parse_attributes_instrumented}
StoreStmt: [Var2321 <-- Var2349]	
   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 
VFG-ID=1522 (store) | IntraICFGNode22 {fun: NameStartChar}
StoreStmt: [Var162 <-- Var154]	
   store i32 %c, i32* %c.addr, align 4 
VFG-ID=1722 (store) | IntraICFGNode1554 {fun: parse_cdata_instrumented}
StoreStmt: [Var1868 <-- Var1916]	
   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 
VFG-ID=1623 (store) | IntraICFGNode726 {fun: state_setpos_instrumented}
StoreStmt: [Var1008 <-- Var1006]	
   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4 
VFG-ID=1766 (store) | IntraICFGNode1845 {fun: str_find_notalnum_instrumented}
StoreStmt: [Var2259 <-- Var2275]	
   store i8* %9, i8** %it_instrumented, align 4 
VFG-ID=1664 (store) | IntraICFGNode1078 {fun: parse_start_instrumented}
StoreStmt: [Var1287 <-- Var1384]	
   store i8* %add.ptr24_instrumented, i8** %gt_instrumented, align 4 
VFG-ID=1721 (store) | IntraICFGNode1548 {fun: parse_cdata_instrumented}
StoreStmt: [Var1870 <-- Var1911]	
   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 
VFG-ID=1680 (store) | IntraICFGNode1203 {fun: parse_characters_instrumented}
StoreStmt: [Var1529 <-- Var1546]	
   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 
VFG-ID=1599 (store) | CallICFGNode591 {fun: sxml_parse_instrumented}
GepStmt: [Var3043 <-- Var851]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false) 
GepStmt: [Var3044 <-- Var852]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false) 
LoadStmt: [Var3045 <-- Var3044]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false) 
StoreStmt: [Var3043 <-- Var3045]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false) 
GepStmt: [Var3046 <-- Var851]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false) 
GepStmt: [Var3047 <-- Var852]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false) 
LoadStmt: [Var3048 <-- Var3047]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false) 
StoreStmt: [Var3046 <-- Var3048]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false) 
GepStmt: [Var3049 <-- Var851]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false) 
GepStmt: [Var3050 <-- Var852]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false) 
LoadStmt: [Var3051 <-- Var3050]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false) 
StoreStmt: [Var3049 <-- Var3051]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false) 
CopyStmt: [Var853 <-- Var851]	
   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false) 
VFG-ID=1547 (store) | CallICFGNode305 {fun: main}
GepStmt: [Var3013 <-- Var326]	
   call void @llvm.memmove.p0i8.p0i8.i32(i8* align 1 %arraydecay16, i8* align 1 %add.ptr, i32 %18, i1 false) 
GepStmt: [Var3014 <-- Var426]	
   call void @llvm.memmove.p0i8.p0i8.i32(i8* align 1 %arraydecay16, i8* align 1 %add.ptr, i32 %18, i1 false) 
LoadStmt: [Var3015 <-- Var3014]	
   call void @llvm.memmove.p0i8.p0i8.i32(i8* align 1 %arraydecay16, i8* align 1 %add.ptr, i32 %18, i1 false) 
StoreStmt: [Var3013 <-- Var3015]	
   call void @llvm.memmove.p0i8.p0i8.i32(i8* align 1 %arraydecay16, i8* align 1 %add.ptr, i32 %18, i1 false) 
CopyStmt: [Var431 <-- Var425]	
   call void @llvm.memmove.p0i8.p0i8.i32(i8* align 1 %arraydecay16, i8* align 1 %add.ptr, i32 %18, i1 false) 
VFG-ID=1740 (store) | IntraICFGNode1704 {fun: str_findstr_instrumented}
StoreStmt: [Var2033 <-- Var2088]	
   store i8* %call8_instrumented, i8** %it_instrumented, align 4 
VFG-ID=1632 (store) | IntraICFGNode811 {fun: parse_instruction_instrumented}
StoreStmt: [Var1046 <-- Var1101]	
   store i8* %call6_instrumented, i8** %space_instrumented, align 4 
VFG-ID=1767 (store) | IntraICFGNode1870 {fun: str_find_notalnum_instrumented}
StoreStmt: [Var2259 <-- Var2295]	
   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 
VFG-ID=1550 (store) | IntraICFGNode362 {fun: main}
StoreStmt: [Var472 <-- Var228]	
   store i32 0, i32* %bufferpos31, align 4 
VFG-ID=1683 (store) | IntraICFGNode1262 {fun: parse_characters_instrumented}
StoreStmt: [Var1531 <-- Var1604]	
   store i8* %cond_instrumented, i8** %limit_instrumented, align 4 
VFG-ID=1794 (store) | IntraICFGNode2078 {fun: str_rtrim_instrumented}
StoreStmt: [Var2525 <-- Var2513]	
   store i8* %end, i8** %end.addr_instrumented, align 4 
VFG-ID=1660 (store) | IntraICFGNode1042 {fun: parse_start_instrumented}
StoreStmt: [Var1291 <-- Var1351]	
   store i8* %call10_instrumented, i8** %space_instrumented, align 4 
VFG-ID=1582 (store) | IntraICFGNode493 {fun: sxml_parse_instrumented}
StoreStmt: [Var697 <-- Var748]	
   store i8* %call_instrumented, i8** %lt_instrumented, align 4 
VFG-ID=1826 (store) | IntraICFGNode2316 {fun: count_lines_instrumented}
StoreStmt: [Var2793 <-- Var2784]	
   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 
VFG-ID=1782 (store) | IntraICFGNode2023 {fun: parse_attributes_instrumented}
StoreStmt: [Var2335 <-- Var2444]	
   store i8* %add.ptr28_instrumented, i8** %value_instrumented, align 4 
VFG-ID=1741 (store) | IntraICFGNode1718 {fun: str_findstr_instrumented}
StoreStmt: [Var2021 <-- Var2101]	
   store i8* %28, i8** %retval_instrumented, align 4 
VFG-ID=1546 (store) | IntraICFGNode278 {fun: main}
StoreStmt: [Var328 <-- Var423]	
   store i32 %sub, i32* %bufferlen, align 4 
VFG-ID=1839 (store) | IntraICFGNode2399 {fun: print_chartokens_instrumented}
StoreStmt: [Var2894 <-- Var2882]	
   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 
VFG-ID=1649 (store) | IntraICFGNode945 {fun: parse_doctype_instrumented}
StoreStmt: [Var1190 <-- Var1239]	
   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 
VFG-ID=1830 (store) | IntraICFGNode2333 {fun: count_lines_instrumented}
StoreStmt: [Var2797 <-- Var2818]	
   store i8* %call_instrumented, i8** %it_instrumented, align 4 
VFG-ID=1710 (store) | IntraICFGNode1471 {fun: parse_comment_instrumented}
StoreStmt: [Var1776 <-- Var1824]	
   store i8* %call6_instrumented, i8** %dash_instrumented, align 4 
VFG-ID=1698 (store) | IntraICFGNode1385 {fun: parse_end_instrumented}
StoreStmt: [Var1661 <-- Var1731]	
   store i8* %call13_instrumented, i8** %space_instrumented, align 4 
Store:   store i16 %conv_instrumented, i16* %type2_instrumented, align 4
Store where:   %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0
Target of   store i16 %conv_instrumented, i16* %type2_instrumented, align 4 is   %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0 with PAG id 2182
Checking PagEdge node associated to:   %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0
Visist starts at PAGNode 2181
[SelectDef] On node: ValVar ID: 2181
   %14 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2147-->2181
[SelectDef] On node: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2148-->2147
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2147
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2177-->2147
[SelectDef] On node: ValVar ID: 2177
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2175-->2177
[SelectDef] On node: ValVar ID: 2175
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2174-->2175
[SelectDef] On node: ValVar ID: 2174
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2173-->2174
[SelectDef] On node: ValVar ID: 2173
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2139-->2173
[SelectDef] On node: ValVar ID: 2139
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2140-->2139
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2139
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2122-->2139
[SelectDef] On node: ValVar ID: 2122
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1112-->2122
On edge 1250-->2122
On edge 1360-->2122
On edge 1397-->2122
On edge 1576-->2122
On edge 1626-->2122
On edge 1742-->2122
On edge 1833-->2122
On edge 1925-->2122
On edge 2412-->2122
[SelectDef] On node: ValVar ID: 2412
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2412
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1925
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1925
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
Node 691 already visited
[SelectDef] On node: ValVar ID: 1833
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1833
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1742
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1742
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1626
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1626
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1576
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1576
Node 1525 already visited
[SelectDef] On node: ValVar ID: 1397
   %46 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1397
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1360
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1360
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1250
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1250
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 1112
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1112
Node 1040 already visited
[STORE] Found defs:
[DEFBUILDER] Building ADef
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %16, i8* %17, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %lt_instrumented, align 4
Node:   %18 = load i8*, i8** %lt_instrumented, align 4
Node:   %18 = load i8*, i8** %lt_instrumented, align 4
Node: i8* %ptr
Node:   store i8* %ptr, i8** %ptr.addr_instrumented, align 4
Node:   %4 = load i8*, i8** %ptr.addr_instrumented, align 4
Node:   %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %4 to i32
Node:   %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
Node:   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false)
Node:   %15 = load i32, i32* %bufferpos15, align 4
Node:   %sub = sub i32 %16, %15
Node:   store i32 %sub, i32* %bufferlen, align 4
Node:   %31 = load i32, i32* %bufferlen, align 4
Node:   %add30 = add i32 %31, %30
Node:   store i32 %add30, i32* %bufferlen, align 4
Node:   %8 = load i32, i32* %bufferlen, align 4
Node:   %8 = load i32, i32* %bufferlen, align 4
Node: i32 %bufferlen
Node:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Node:   %10 = load i32, i32* %bufferlen.addr_instrumented, align 4
Node:   store i32 %10, i32* %bufferlen2_instrumented, align 4
Node:   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4
Node:   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12
Node:   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Node:   %14 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4
Node:   %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0
Node:   store i16 %conv_instrumented, i16* %type2_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Adding SUse with field of type: i8*
Adding def to deflist
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
Store:   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Store where:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Target of   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2147
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2148
[SelectDef] On node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
[STORE] Found defs:
Store:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Store where:   %bufferlen.addr_instrumented = alloca i32, align 4
Target of   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 is   %bufferlen.addr_instrumented = alloca i32, align 4 with PAG id 681
Checking PagEdge node associated to:   %bufferlen.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 682
[SelectDef] On node: FIObjVar ID: 682 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 682 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %17, i8** %retval_instrumented, align 4
Store where:   %retval_instrumented = alloca i8*, align 4
Target of   store i8* %17, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2521
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2522
[SelectDef] On node: FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4
Store where:   %prev_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4 is   %prev_instrumented = alloca i8*, align 4 with PAG id 2529
Checking PagEdge node associated to:   %prev_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2530
[SelectDef] On node: FIObjVar ID: 2530 (base object)
   %prev_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2530 (base object)
   %prev_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %start, i8** %start.addr_instrumented, align 4
Store where:   %start.addr_instrumented = alloca i8*, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2523
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2524
[SelectDef] On node: FIObjVar ID: 2524 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2524 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Instruction   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false) is not a store. Skipping
Store:   store i32 %c, i32* %c.addr, align 4
Store where:   %c.addr = alloca i32, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 222
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 223
[SelectDef] On node: FIObjVar ID: 223 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 223 (base object)
   %c.addr = alloca i32, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i32 %c, i32* %c.addr_instrumented, align 4
Store where:   %c.addr_instrumented = alloca i32, align 4
Target of   store i32 %c, i32* %c.addr_instrumented, align 4 is   %c.addr_instrumented = alloca i32, align 4 with PAG id 1449
Checking PagEdge node associated to:   %c.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 1450
[SelectDef] On node: FIObjVar ID: 1450 (base object)
   %c.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1450 (base object)
   %c.addr_instrumented = alloca i32, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %16, i8** %it_instrumented, align 4
Store where:   %it_instrumented = alloca i8*, align 4
Target of   store i8* %16, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2527
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2528
[SelectDef] On node: FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i32 %lor.ext, i32* %retval, align 4
Store where:   %retval = alloca i32, align 4
Target of   store i32 %lor.ext, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 160
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 161
[SelectDef] On node: FIObjVar ID: 161 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 161 (base object)
   %retval = alloca i32, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr18_instrumented, i8** %quest_instrumented, align 4
Store where:   %quest_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr18_instrumented, i8** %quest_instrumented, align 4 is   %quest_instrumented = alloca i8*, align 4 with PAG id 1044
Checking PagEdge node associated to:   %quest_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1045
[SelectDef] On node: FIObjVar ID: 1045 (base object)
   %quest_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1045 (base object)
   %quest_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4
Store where:   %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2
Target of   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4 is   %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2 with PAG id 2192
Checking PagEdge node associated to:   %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2
Visist starts at PAGNode 2191
[SelectDef] On node: ValVar ID: 2191
   %18 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2147-->2191
[SelectDef] On node: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2148-->2147
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2147
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2177-->2147
[SelectDef] On node: ValVar ID: 2177
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2175-->2177
[SelectDef] On node: ValVar ID: 2175
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2174-->2175
[SelectDef] On node: ValVar ID: 2174
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2173-->2174
[SelectDef] On node: ValVar ID: 2173
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2139-->2173
[SelectDef] On node: ValVar ID: 2139
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2140-->2139
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2139
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2122-->2139
[SelectDef] On node: ValVar ID: 2122
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1112-->2122
On edge 1250-->2122
On edge 1360-->2122
On edge 1397-->2122
On edge 1576-->2122
On edge 1626-->2122
On edge 1742-->2122
On edge 1833-->2122
On edge 1925-->2122
On edge 2412-->2122
[SelectDef] On node: ValVar ID: 2412
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2412
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1925
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1925
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
Node 691 already visited
[SelectDef] On node: ValVar ID: 1833
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1833
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1742
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1742
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1626
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1626
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1576
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1576
Node 1525 already visited
[SelectDef] On node: ValVar ID: 1397
   %46 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1397
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1360
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1360
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1250
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1250
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 1112
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1112
Node 1040 already visited
[STORE] Found defs:
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %16, i8* %17, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %lt_instrumented, align 4
Node:   %18 = load i8*, i8** %lt_instrumented, align 4
Node:   %18 = load i8*, i8** %lt_instrumented, align 4
Node: i8* %ptr
Node:   store i8* %ptr, i8** %ptr.addr_instrumented, align 4
Node:   %4 = load i8*, i8** %ptr.addr_instrumented, align 4
Node:   %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %4 to i32
Node:   %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
Node:   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false)
Node:   %15 = load i32, i32* %bufferpos15, align 4
Node:   %sub = sub i32 %16, %15
Node:   store i32 %sub, i32* %bufferlen, align 4
Node:   %31 = load i32, i32* %bufferlen, align 4
Node:   %add30 = add i32 %31, %30
Node:   store i32 %add30, i32* %bufferlen, align 4
Node:   %8 = load i32, i32* %bufferlen, align 4
Node:   %8 = load i32, i32* %bufferlen, align 4
Node: i32 %bufferlen
Node:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Node:   %10 = load i32, i32* %bufferlen.addr_instrumented, align 4
Node:   store i32 %10, i32* %bufferlen2_instrumented, align 4
Node:   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4
Node:   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12
Node:   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Node:   %18 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4
Node:   %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2
Node:   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %43 = load i8*, i8** %ampr_instrumented, align 4
Node:   %43 = load i8*, i8** %ampr_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %15 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %15 to i32
Node:   %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
Node:   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Store:   store i8* %end, i8** %end.addr_instrumented, align 4
Store where:   %end.addr_instrumented = alloca i8*, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 1527
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1528
[SelectDef] On node: FIObjVar ID: 1528 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1528 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %call42_instrumented, i8** %name_instrumented, align 4
Store where:   %name_instrumented = alloca i8*, align 4
Target of   store i8* %call42_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 2325
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2326
[SelectDef] On node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %call14_instrumented, i8** %quot_instrumented, align 4
Store where:   %quot_instrumented = alloca i8*, align 4
Target of   store i8* %call14_instrumented, i8** %quot_instrumented, align 4 is   %quot_instrumented = alloca i8*, align 4 with PAG id 2333
Checking PagEdge node associated to:   %quot_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2334
[SelectDef] On node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Store where:   %buffer.addr_instrumented = alloca i8*, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2791
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2792
[SelectDef] On node: FIObjVar ID: 2792 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2792 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %end, i8** %end.addr_instrumented, align 4
Store where:   %end.addr_instrumented = alloca i8*, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2025
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2026
[SelectDef] On node: FIObjVar ID: 2026 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2026 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Instruction   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 12, i1 false) is not a store. Skipping
Store:   store i32 %c, i32* %c.addr, align 4
Store where:   %c.addr = alloca i32, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 289
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 290
[SelectDef] On node: FIObjVar ID: 290 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 290 (base object)
   %c.addr = alloca i32, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Store where:   %start_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1293
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1294
[SelectDef] On node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Store where:   %end_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 2323
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2324
[SelectDef] On node: FIObjVar ID: 2324 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2324 (base object)
   %end_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Store where:   %end_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1872
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1873
[SelectDef] On node: FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %call30_instrumented, i8** %quot_instrumented, align 4
Store where:   %quot_instrumented = alloca i8*, align 4
Target of   store i8* %call30_instrumented, i8** %quot_instrumented, align 4 is   %quot_instrumented = alloca i8*, align 4 with PAG id 2333
Checking PagEdge node associated to:   %quot_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2334
[SelectDef] On node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Store:   store i8* %start, i8** %start.addr_instrumented, align 4
Store where:   %start.addr_instrumented = alloca i8*, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 1445
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1446
[SelectDef] On node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %start, i8** %start.addr_instrumented, align 4
Store where:   %start.addr_instrumented = alloca i8*, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 929
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 930
[SelectDef] On node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %6, i8** %it_instrumented, align 4
Store where:   %it_instrumented = alloca i8*, align 4
Target of   store i8* %6, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2797
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2798
[SelectDef] On node: FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Store where:   %it_instrumented = alloca i8*, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2797
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2798
[SelectDef] On node: FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Store:   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4
Store where:   %start_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1529
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1530
[SelectDef] On node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
Store where:   %start.addr_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2023
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2024
[SelectDef] On node: FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Store where:   %end_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1780
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1781
[SelectDef] On node: FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Store where:   %end_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1194
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1195
[SelectDef] On node: FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Store where:   %end_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1665
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1666
[SelectDef] On node: FIObjVar ID: 1666 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1666 (base object)
   %end_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Store where:   %start_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1663
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1664
[SelectDef] On node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4
Store where:   %end_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 2795
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2796
[SelectDef] On node: FIObjVar ID: 2796 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2796 (base object)
   %end_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %9, i8** %it_instrumented, align 4
Store where:   %it_instrumented = alloca i8*, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2527
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2528
[SelectDef] On node: FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Store:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Store where:   %eq_instrumented = alloca i8*, align 4
Target of   store i8* %call6_instrumented, i8** %eq_instrumented, align 4 is   %eq_instrumented = alloca i8*, align 4 with PAG id 2329
Checking PagEdge node associated to:   %eq_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2330
[SelectDef] On node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Instruction   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false) is not a store. Skipping
Store:   store i8* %call8_instrumented, i8** %gt_instrumented, align 4
Store where:   %gt_instrumented = alloca i8*, align 4
Target of   store i8* %call8_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1659
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1660
[SelectDef] On node: FIObjVar ID: 1660 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1660 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Store where:   %start_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1778
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1779
[SelectDef] On node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Store where:   %buffer.addr_instrumented = alloca i8*, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2850
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2851
[SelectDef] On node: FIObjVar ID: 2851 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2851 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4
Store where:   %end_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 689
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 690
[SelectDef] On node: FIObjVar ID: 690 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 690 (base object)
   %end_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %end, i8** %end.addr_instrumented, align 4
Store where:   %end.addr_instrumented = alloca i8*, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 931
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 932
[SelectDef] On node: FIObjVar ID: 932 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 932 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4
Store where:   %start_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1663
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1664
[SelectDef] On node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Store:   store i8* %9, i8** %it_instrumented, align 4
Store where:   %it_instrumented = alloca i8*, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 933
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 934
[SelectDef] On node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %call14_instrumented, i8** %colon_instrumented, align 4
Store where:   %colon_instrumented = alloca i8*, align 4
Target of   store i8* %call14_instrumented, i8** %colon_instrumented, align 4 is   %colon_instrumented = alloca i8*, align 4 with PAG id 1533
Checking PagEdge node associated to:   %colon_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1534
[SelectDef] On node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i16 0, i16* %size_instrumented, align 2
Store where:   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1
Target of   store i16 0, i16* %size_instrumented, align 2 is   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1 with PAG id 2205
Checking PagEdge node associated to:   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1
Visist starts at PAGNode 2204
[SelectDef] On node: ValVar ID: 2204
   %23 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2147-->2204
[SelectDef] On node: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2148-->2147
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2147
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2177-->2147
[SelectDef] On node: ValVar ID: 2177
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2175-->2177
[SelectDef] On node: ValVar ID: 2175
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2174-->2175
[SelectDef] On node: ValVar ID: 2174
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2173-->2174
[SelectDef] On node: ValVar ID: 2173
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2139-->2173
[SelectDef] On node: ValVar ID: 2139
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2140-->2139
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2139
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2122-->2139
[SelectDef] On node: ValVar ID: 2122
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1112-->2122
On edge 1250-->2122
On edge 1360-->2122
On edge 1397-->2122
On edge 1576-->2122
On edge 1626-->2122
On edge 1742-->2122
On edge 1833-->2122
On edge 1925-->2122
On edge 2412-->2122
[SelectDef] On node: ValVar ID: 2412
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2412
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1925
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1925
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
Node 691 already visited
[SelectDef] On node: ValVar ID: 1833
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1833
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1742
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1742
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1626
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1626
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1576
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1576
Node 1525 already visited
[SelectDef] On node: ValVar ID: 1397
   %46 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1397
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1360
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1360
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1250
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1250
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 1112
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1112
Node 1040 already visited
[STORE] Found defs:
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %16, i8* %17, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %lt_instrumented, align 4
Node:   %18 = load i8*, i8** %lt_instrumented, align 4
Node:   %18 = load i8*, i8** %lt_instrumented, align 4
Node: i8* %ptr
Node:   store i8* %ptr, i8** %ptr.addr_instrumented, align 4
Node:   %4 = load i8*, i8** %ptr.addr_instrumented, align 4
Node:   %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %4 to i32
Node:   %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
Node:   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false)
Node:   %15 = load i32, i32* %bufferpos15, align 4
Node:   %sub = sub i32 %16, %15
Node:   store i32 %sub, i32* %bufferlen, align 4
Node:   %31 = load i32, i32* %bufferlen, align 4
Node:   %add30 = add i32 %31, %30
Node:   store i32 %add30, i32* %bufferlen, align 4
Node:   %8 = load i32, i32* %bufferlen, align 4
Node:   %8 = load i32, i32* %bufferlen, align 4
Node: i32 %bufferlen
Node:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Node:   %10 = load i32, i32* %bufferlen.addr_instrumented, align 4
Node:   store i32 %10, i32* %bufferlen2_instrumented, align 4
Node:   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4
Node:   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12
Node:   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Node:   %23 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4
Node:   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1
Node:   store i16 0, i16* %size_instrumented, align 2
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Store:   store i8* %add.ptr3_instrumented, i8** %ampr_instrumented, align 4
Store where:   %ampr_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr3_instrumented, i8** %ampr_instrumented, align 4 is   %ampr_instrumented = alloca i8*, align 4 with PAG id 2902
Checking PagEdge node associated to:   %ampr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2903
[SelectDef] On node: FIObjVar ID: 2903 (base object)
   %ampr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2903 (base object)
   %ampr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr32_instrumented, i8** %start29_instrumented, align 4
Store where:   %start29_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr32_instrumented, i8** %start29_instrumented, align 4 is   %start29_instrumented = alloca i8*, align 4 with PAG id 701
Checking PagEdge node associated to:   %start29_instrumented = alloca i8*, align 4
Visist starts at PAGNode 702
[SelectDef] On node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Store where:   %buffer.addr_instrumented = alloca i8*, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2653
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2654
[SelectDef] On node: FIObjVar ID: 2654 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2654 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Store where:   %start_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 695
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 696
[SelectDef] On node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %end, i8** %end.addr_instrumented, align 4
Store where:   %end.addr_instrumented = alloca i8*, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 1959
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1960
[SelectDef] On node: FIObjVar ID: 1960 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1960 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %15, i8** %retval_instrumented, align 4
Store where:   %retval_instrumented = alloca i8*, align 4
Target of   store i8* %15, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2521
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2522
[SelectDef] On node: FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Store:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Store where:   %start_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1192
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1193
[SelectDef] On node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4
Store where:   %gt_instrumented = alloca i8*, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1287
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1288
[SelectDef] On node: FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %9, i8** %buffer1_instrumented, align 4
Store where:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Target of   store i8* %9, i8** %buffer1_instrumented, align 4 is   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 with PAG id 722
Checking PagEdge node associated to:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Visist starts at PAGNode 691
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[STORE] Found defs:
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Store:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Store where:   %start_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1778
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1779
[SelectDef] On node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Store:   store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4
Store where:   %name_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 1289
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1290
[SelectDef] On node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Store where:   %name_instrumented = alloca i8*, align 4
Target of   store i8* %call_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 2325
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2326
[SelectDef] On node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Store:   store i8* %30, i8** %retval_instrumented, align 4
Store where:   %retval_instrumented = alloca i8*, align 4
Target of   store i8* %30, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2021
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2022
[SelectDef] On node: FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Store where:   %start_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1048
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1049
[SelectDef] On node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Store where:   %end_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1295
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1296
[SelectDef] On node: FIObjVar ID: 1296 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1296 (base object)
   %end_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Store where:   %buffer.addr_instrumented = alloca i8*, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 679
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 680
[SelectDef] On node: FIObjVar ID: 680 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 680 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %end, i8** %end.addr_instrumented, align 4
Store where:   %end.addr_instrumented = alloca i8*, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 1447
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1448
[SelectDef] On node: FIObjVar ID: 1448 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1448 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Store where:   %start_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1048
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1049
[SelectDef] On node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Store:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Store where:   %start_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1192
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1193
[SelectDef] On node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Store:   store i8* %start, i8** %start.addr_instrumented, align 4
Store where:   %start.addr_instrumented = alloca i8*, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 1957
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1958
[SelectDef] On node: FIObjVar ID: 1958 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1958 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %end, i8** %end.addr_instrumented, align 4
Store where:   %end.addr_instrumented = alloca i8*, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2257
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2258
[SelectDef] On node: FIObjVar ID: 2258 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2258 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %ptr, i8** %ptr.addr_instrumented, align 4
Store where:   %ptr.addr_instrumented = alloca i8*, align 4
Target of   store i8* %ptr, i8** %ptr.addr_instrumented, align 4 is   %ptr.addr_instrumented = alloca i8*, align 4 with PAG id 995
Checking PagEdge node associated to:   %ptr.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 996
[SelectDef] On node: FIObjVar ID: 996 (base object)
   %ptr.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 996 (base object)
   %ptr.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Store where:   %end_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1050
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1051
[SelectDef] On node: FIObjVar ID: 1051 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1051 (base object)
   %end_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %end, i8** %end.addr_instrumented, align 4
Store where:   %end.addr_instrumented = alloca i8*, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2599
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2600
[SelectDef] On node: FIObjVar ID: 2600 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2600 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %start, i8** %start.addr_instrumented, align 4
Store where:   %start.addr_instrumented = alloca i8*, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2143
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2144
[SelectDef] On node: FIObjVar ID: 2144 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2144 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i32 %add30, i32* %bufferlen, align 4
Store where:   %bufferlen = alloca i32, align 4
Target of   store i32 %add30, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 328
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 329
[SelectDef] On node: FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Store where:   %it_instrumented = alloca i8*, align 4
Target of   store i8* %call_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 1451
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1452
[SelectDef] On node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4
Store where:   %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3
Target of   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4 is   %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3 with PAG id 2202
Checking PagEdge node associated to:   %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3
Visist starts at PAGNode 2201
[SelectDef] On node: ValVar ID: 2201
   %22 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2147-->2201
[SelectDef] On node: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2148-->2147
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2147
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2177-->2147
[SelectDef] On node: ValVar ID: 2177
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2175-->2177
[SelectDef] On node: ValVar ID: 2175
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2174-->2175
[SelectDef] On node: ValVar ID: 2174
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2173-->2174
[SelectDef] On node: ValVar ID: 2173
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2139-->2173
[SelectDef] On node: ValVar ID: 2139
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2140-->2139
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2139
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2122-->2139
[SelectDef] On node: ValVar ID: 2122
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1112-->2122
On edge 1250-->2122
On edge 1360-->2122
On edge 1397-->2122
On edge 1576-->2122
On edge 1626-->2122
On edge 1742-->2122
On edge 1833-->2122
On edge 1925-->2122
On edge 2412-->2122
[SelectDef] On node: ValVar ID: 2412
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2412
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1925
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1925
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
Node 691 already visited
[SelectDef] On node: ValVar ID: 1833
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1833
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1742
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1742
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1626
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1626
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1576
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1576
Node 1525 already visited
[SelectDef] On node: ValVar ID: 1397
   %46 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1397
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1360
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1360
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1250
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1250
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 1112
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1112
Node 1040 already visited
[STORE] Found defs:
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %16, i8* %17, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %lt_instrumented, align 4
Node:   %18 = load i8*, i8** %lt_instrumented, align 4
Node:   %18 = load i8*, i8** %lt_instrumented, align 4
Node: i8* %ptr
Node:   store i8* %ptr, i8** %ptr.addr_instrumented, align 4
Node:   %4 = load i8*, i8** %ptr.addr_instrumented, align 4
Node:   %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %4 to i32
Node:   %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
Node:   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false)
Node:   %15 = load i32, i32* %bufferpos15, align 4
Node:   %sub = sub i32 %16, %15
Node:   store i32 %sub, i32* %bufferlen, align 4
Node:   %31 = load i32, i32* %bufferlen, align 4
Node:   %add30 = add i32 %31, %30
Node:   store i32 %add30, i32* %bufferlen, align 4
Node:   %8 = load i32, i32* %bufferlen, align 4
Node:   %8 = load i32, i32* %bufferlen, align 4
Node: i32 %bufferlen
Node:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Node:   %10 = load i32, i32* %bufferlen.addr_instrumented, align 4
Node:   store i32 %10, i32* %bufferlen2_instrumented, align 4
Node:   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4
Node:   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12
Node:   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Node:   %22 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4
Node:   %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3
Node:   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %23 = load i8*, i8** %ampr_instrumented, align 4
Node:   %23 = load i8*, i8** %ampr_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %end.addr_instrumented, align 4
Node:   %sub.ptr.lhs.cast4_instrumented = ptrtoint i8* %19 to i32
Node:   %sub.ptr.sub6_instrumented = sub i32 %sub.ptr.lhs.cast4_instrumented, %sub.ptr.rhs.cast5_instrumented
Node:   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Store:   store i8* %start, i8** %start.addr_instrumented, align 4
Store where:   %start.addr_instrumented = alloca i8*, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2255
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2256
[SelectDef] On node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Instruction   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false) is not a store. Skipping
Store:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Store where:   %space_instrumented = alloca i8*, align 4
Target of   store i8* %call11_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 2331
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2332
[SelectDef] On node: FIObjVar ID: 2332 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2332 (base object)
   %space_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %end, i8** %end.addr_instrumented, align 4
Store where:   %end.addr_instrumented = alloca i8*, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2145
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2146
[SelectDef] On node: FIObjVar ID: 2146 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2146 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i32 %10, i32* %bufferlen2_instrumented, align 4
Store where:   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Target of   store i32 %10, i32* %bufferlen2_instrumented, align 4 is   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1 with PAG id 725
Checking PagEdge node associated to:   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Visist starts at PAGNode 691
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[STORE] Found defs:
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %16, i8* %17, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %lt_instrumented, align 4
Node:   %18 = load i8*, i8** %lt_instrumented, align 4
Node:   %18 = load i8*, i8** %lt_instrumented, align 4
Node: i8* %ptr
Node:   store i8* %ptr, i8** %ptr.addr_instrumented, align 4
Node:   %4 = load i8*, i8** %ptr.addr_instrumented, align 4
Node:   %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %4 to i32
Node:   %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
Node:   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false)
Node:   %15 = load i32, i32* %bufferpos15, align 4
Node:   %sub = sub i32 %16, %15
Node:   store i32 %sub, i32* %bufferlen, align 4
Node:   %31 = load i32, i32* %bufferlen, align 4
Node:   %add30 = add i32 %31, %30
Node:   store i32 %add30, i32* %bufferlen, align 4
Node:   %8 = load i32, i32* %bufferlen, align 4
Node:   %8 = load i32, i32* %bufferlen, align 4
Node: i32 %bufferlen
Node:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Node:   %10 = load i32, i32* %bufferlen.addr_instrumented, align 4
Node:   store i32 %10, i32* %bufferlen2_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Node:   store i32 %10, i32* %bufferlen2_instrumented, align 4
On Node:   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Found GEP:
  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Considering operand 2
Accessing 1th operand of struct with type i32
Type i8* has size 4
Current offset from base: 4
Adding SUse with field of type: i32
Adding def to deflist
Store:   store i8* %start, i8** %start.addr_instrumented, align 4
Store where:   %start.addr_instrumented = alloca i8*, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2023
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2024
[SelectDef] On node: FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Store:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Store where:   %start_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1870
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1871
[SelectDef] On node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %call34_instrumented, i8** %lt33_instrumented, align 4
Store where:   %lt33_instrumented = alloca i8*, align 4
Target of   store i8* %call34_instrumented, i8** %lt33_instrumented, align 4 is   %lt33_instrumented = alloca i8*, align 4 with PAG id 703
Checking PagEdge node associated to:   %lt33_instrumented = alloca i8*, align 4
Visist starts at PAGNode 704
[SelectDef] On node: FIObjVar ID: 704 (base object)
   %lt33_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 704 (base object)
   %lt33_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Store where:   %ampr_instrumented = alloca i8*, align 4
Target of   store i8* %call_instrumented, i8** %ampr_instrumented, align 4 is   %ampr_instrumented = alloca i8*, align 4 with PAG id 1535
Checking PagEdge node associated to:   %ampr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1536
[SelectDef] On node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Store where:   %it_instrumented = alloca i8*, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 933
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 934
[SelectDef] On node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Store:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Store where:   %start_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 2321
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2322
[SelectDef] On node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i32 %c, i32* %c.addr, align 4
Store where:   %c.addr = alloca i32, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 162
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 163
[SelectDef] On node: FIObjVar ID: 163 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 163 (base object)
   %c.addr = alloca i32, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Store where:   %bracket_instrumented = alloca i8*, align 4
Target of   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 is   %bracket_instrumented = alloca i8*, align 4 with PAG id 1868
Checking PagEdge node associated to:   %bracket_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1869
[SelectDef] On node: FIObjVar ID: 1869 (base object)
   %bracket_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1869 (base object)
   %bracket_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4
Store where:   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0
Target of   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4 is   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0 with PAG id 1008
Checking PagEdge node associated to:   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0
Visist starts at PAGNode 1007
[SelectDef] On node: ValVar ID: 1007
   %7 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 991-->1007
[SelectDef] On node: ValVar ID: 991
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 992-->991
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 991
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 992 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 980-->991
[SelectDef] On node: ValVar ID: 980
 %struct.sxml_t* %state { 0th arg state_setpos_instrumented  }
On edge 687-->980
On edge 1119-->980
On edge 1160-->980
On edge 1255-->980
On edge 1364-->980
On edge 1420-->980
On edge 1586-->980
On edge 1630-->980
On edge 1746-->980
On edge 1838-->980
On edge 1929-->980
On edge 2459-->980
On edge 2498-->980
[SelectDef] On node: ValVar ID: 2498
   %67 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2498
[SelectDef] On node: ValVar ID: 2317
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2318-->2317
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2317
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2306-->2317
[SelectDef] On node: ValVar ID: 2306
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1123-->2306
On edge 1368-->2306
[SelectDef] On node: ValVar ID: 1368
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1368
[SelectDef] On node: ValVar ID: 1281
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1282-->1281
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1281
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1270-->1281
[SelectDef] On node: ValVar ID: 1270
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 687-->1270
Node 687 already visited
On edge 687-->1270
Node 687 already visited
[SelectDef] On node: ValVar ID: 1123
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1123
[SelectDef] On node: ValVar ID: 1038
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1039-->1038
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1038
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1027-->1038
[SelectDef] On node: ValVar ID: 1027
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 687-->1027
Node 687 already visited
On edge 687-->1027
Node 687 already visited
[SelectDef] On node: ValVar ID: 2459
   %50 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2459
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1929
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1864-->1929
[SelectDef] On node: ValVar ID: 1864
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1865-->1864
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1864
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1853-->1864
[SelectDef] On node: ValVar ID: 1853
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 687-->1853
Node 687 already visited
[SelectDef] On node: ValVar ID: 1838
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1772-->1838
[SelectDef] On node: ValVar ID: 1772
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1773-->1772
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1772
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1761-->1772
[SelectDef] On node: ValVar ID: 1761
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 687-->1761
Node 687 already visited
[SelectDef] On node: ValVar ID: 1746
   %36 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1655-->1746
[SelectDef] On node: ValVar ID: 1655
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1656-->1655
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1655
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1644-->1655
[SelectDef] On node: ValVar ID: 1644
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 687-->1644
Node 687 already visited
[SelectDef] On node: ValVar ID: 1630
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1630
[SelectDef] On node: ValVar ID: 1523
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1524-->1523
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1523
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1510-->1523
[SelectDef] On node: ValVar ID: 1510
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 687-->1510
Node 687 already visited
On edge 2618-->1510
[SelectDef] On node: ValVar ID: 2618
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2595-->2618
[SelectDef] On node: ValVar ID: 2595
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2596-->2595
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2595
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2582-->2595
[SelectDef] On node: ValVar ID: 2582
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2463-->2582
[SelectDef] On node: ValVar ID: 2463
   %53 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2463
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1586
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1586
Node 1523 already visited
[SelectDef] On node: ValVar ID: 1420
   %54 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1420
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1364
   %30 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1364
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1255
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1186-->1255
[SelectDef] On node: ValVar ID: 1186
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1187-->1186
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1186
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1175-->1186
[SelectDef] On node: ValVar ID: 1175
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 687-->1175
Node 687 already visited
[SelectDef] On node: ValVar ID: 1160
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1160
Node 1038 already visited
[SelectDef] On node: ValVar ID: 1119
   %29 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1119
Node 1038 already visited
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[STORE] Found defs:
[DEFBUILDER] Building ADef
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %5 = bitcast %struct.sxml_t* %temp_instrumented to i8*
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false)
Node:   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4
On Node:   %5 = bitcast %struct.sxml_t* %temp_instrumented to i8*
On Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false)
On Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false)
On Node:   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Node: %struct.sxml_t* %state
Node:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Node:   %30 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4
Node:   %30 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4
Node: %struct.sxml_t* %state
Node:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Node:   %7 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4
Node:   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0
Node:   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node: %struct.sxml_t* %state
On Node:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
On Node:   %30 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4
On Node:   %30 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4
On Node: %struct.sxml_t* %state
On Node:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
On Node:   %7 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4
On Node:   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0
Found GEP:
  %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i32
Current offset from base: 0
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
[DEFBUILDER] Building ADef
Store:   store i8* %9, i8** %it_instrumented, align 4
Store where:   %it_instrumented = alloca i8*, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2259
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2260
[SelectDef] On node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr24_instrumented, i8** %gt_instrumented, align 4
Store where:   %gt_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr24_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1287
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1288
[SelectDef] On node: FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Store:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Store where:   %start_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1870
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1871
[SelectDef] On node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Store:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Store where:   %start_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1529
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1530
[SelectDef] On node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Instruction   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false) is not a store. Skipping
Instruction   call void @llvm.memmove.p0i8.p0i8.i32(i8* align 1 %arraydecay16, i8* align 1 %add.ptr, i32 %18, i1 false) is not a store. Skipping
Store:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Store where:   %it_instrumented = alloca i8*, align 4
Target of   store i8* %call8_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2033
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2034
[SelectDef] On node: FIObjVar ID: 2034 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2034 (base object)
   %it_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %call6_instrumented, i8** %space_instrumented, align 4
Store where:   %space_instrumented = alloca i8*, align 4
Target of   store i8* %call6_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1046
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1047
[SelectDef] On node: FIObjVar ID: 1047 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1047 (base object)
   %space_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Store where:   %it_instrumented = alloca i8*, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2259
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2260
[SelectDef] On node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Store:   store i32 0, i32* %bufferpos31, align 4
Store where:   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Target of   store i32 0, i32* %bufferpos31, align 4 is   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0 with PAG id 472
Checking PagEdge node associated to:   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Visist starts at PAGNode 340
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
[STORE] Found defs:
  %parser = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Node:   store i32 0, i32* %bufferpos31, align 4
On Node:   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Found GEP:
  %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i32
Current offset from base: 0
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Node:   store i32 0, i32* %bufferpos31, align 4
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 12, i1 false)
Node:   store i32 0, i32* %bufferpos31, align 4
On Node:   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Found GEP:
  %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i32
Current offset from base: 0
Store:   store i8* %cond_instrumented, i8** %limit_instrumented, align 4
Store where:   %limit_instrumented = alloca i8*, align 4
Target of   store i8* %cond_instrumented, i8** %limit_instrumented, align 4 is   %limit_instrumented = alloca i8*, align 4 with PAG id 1531
Checking PagEdge node associated to:   %limit_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1532
[SelectDef] On node: FIObjVar ID: 1532 (base object)
   %limit_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1532 (base object)
   %limit_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %end, i8** %end.addr_instrumented, align 4
Store where:   %end.addr_instrumented = alloca i8*, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2525
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2526
[SelectDef] On node: FIObjVar ID: 2526 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2526 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %call10_instrumented, i8** %space_instrumented, align 4
Store where:   %space_instrumented = alloca i8*, align 4
Target of   store i8* %call10_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1291
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1292
[SelectDef] On node: FIObjVar ID: 1292 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1292 (base object)
   %space_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %call_instrumented, i8** %lt_instrumented, align 4
Store where:   %lt_instrumented = alloca i8*, align 4
Target of   store i8* %call_instrumented, i8** %lt_instrumented, align 4 is   %lt_instrumented = alloca i8*, align 4 with PAG id 697
Checking PagEdge node associated to:   %lt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 698
[SelectDef] On node: FIObjVar ID: 698 (base object)
   %lt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 698 (base object)
   %lt_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Store where:   %bufferlen.addr_instrumented = alloca i32, align 4
Target of   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 is   %bufferlen.addr_instrumented = alloca i32, align 4 with PAG id 2793
Checking PagEdge node associated to:   %bufferlen.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2794
[SelectDef] On node: FIObjVar ID: 2794 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2794 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %add.ptr28_instrumented, i8** %value_instrumented, align 4
Store where:   %value_instrumented = alloca i8*, align 4
Target of   store i8* %add.ptr28_instrumented, i8** %value_instrumented, align 4 is   %value_instrumented = alloca i8*, align 4 with PAG id 2335
Checking PagEdge node associated to:   %value_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2336
[SelectDef] On node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %28, i8** %retval_instrumented, align 4
Store where:   %retval_instrumented = alloca i8*, align 4
Target of   store i8* %28, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2021
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2022
[SelectDef] On node: FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Store:   store i32 %sub, i32* %bufferlen, align 4
Store where:   %bufferlen = alloca i32, align 4
Target of   store i32 %sub, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 328
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 329
[SelectDef] On node: FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4  to result
[STORE] Found defs:
Store:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Store where:   %buffer.addr_instrumented = alloca i8*, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2894
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2895
[SelectDef] On node: FIObjVar ID: 2895 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2895 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Store where:   %bracket_instrumented = alloca i8*, align 4
Target of   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 is   %bracket_instrumented = alloca i8*, align 4 with PAG id 1190
Checking PagEdge node associated to:   %bracket_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1191
[SelectDef] On node: FIObjVar ID: 1191 (base object)
   %bracket_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1191 (base object)
   %bracket_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Store where:   %it_instrumented = alloca i8*, align 4
Target of   store i8* %call_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2797
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2798
[SelectDef] On node: FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
Store:   store i8* %call6_instrumented, i8** %dash_instrumented, align 4
Store where:   %dash_instrumented = alloca i8*, align 4
Target of   store i8* %call6_instrumented, i8** %dash_instrumented, align 4 is   %dash_instrumented = alloca i8*, align 4 with PAG id 1776
Checking PagEdge node associated to:   %dash_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1777
[SelectDef] On node: FIObjVar ID: 1777 (base object)
   %dash_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1777 (base object)
   %dash_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
Store:   store i8* %call13_instrumented, i8** %space_instrumented, align 4
Store where:   %space_instrumented = alloca i8*, align 4
Target of   store i8* %call13_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1661
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1662
[SelectDef] On node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4  to result
[STORE] Found defs:
[DEFBUILDER] Building ADef
(lib: __isoc99_scanf) CallICFGNode178 {fun: main}
Finding defs of ValVar ID: 368
   %arraydecay = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 368
   %arraydecay = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
On edge 326-->368
[SelectDef] On node: ValVar ID: 326
   %buffer = alloca [8128 x i8], align 1 
On edge 327-->326
[SelectDefs] Adding node: FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs:
FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
 Analyzing call to printf inside print_chartokens_instrumented
 Analyzing call to printf inside print_chartokens_instrumented
 Analyzing call to print_tokenvalue_instrumented inside print_chartokens_instrumented
Function print_tokenvalue_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument buffer of print_chartokens_instrumented
Parameter 0 is aliased with argument buffer
Parameter 1 is a pointer
Checking aliasing of  with argument buffer of print_chartokens_instrumented
Checking aliasing of  with argument tokens of print_chartokens_instrumented
Parameter 1 is aliased with argument tokens
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to printf inside print_tokenvalue_instrumented
 Analyzing call to puts inside print_prettyxml_instrumented
 Analyzing call to str_find_notalnum_instrumented inside parse_start_instrumented
Function str_find_notalnum_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Checking aliasing of  with argument state_id of parse_start_instrumented
Checking aliasing of  with argument args_id of parse_start_instrumented
Def of param: LoadVFGNode ID: 1113 LoadStmt: [Var1349 <-- Var1289]	
   %22 = load i8*, i8** %name_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 4
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1
Node:   store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4
Node:   %22 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1
Node:   store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4
Node:   %22 = load i8*, i8** %name_instrumented, align 4
Node:   %22 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Checking aliasing of  with argument state_id of parse_start_instrumented
Checking aliasing of  with argument args_id of parse_start_instrumented
Def of param: LoadVFGNode ID: 1125 LoadStmt: [Var1350 <-- Var1295]	
   %23 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1350
   %23 = load i8*, i8** %end_instrumented, align 4 
On edge 1295-->1350
[SelectDef] On node: ValVar ID: 1295
   %end_instrumented = alloca i8*, align 4 
On edge 1296-->1295
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1295
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1296 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1313-->1295
[SelectDef] On node: ValVar ID: 1313
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1309-->1313
[SelectDef] On node: ValVar ID: 1309
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1308-->1309
[SelectDef] On node: ValVar ID: 1308
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1307-->1308
[SelectDef] On node: ValVar ID: 1307
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1307
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %23 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %23 = load i8*, i8** %end_instrumented, align 4
Node:   %23 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to state_setpos_instrumented inside parse_instruction_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1045 LoadStmt: [Var1121 <-- Var1046]	
   %31 = load i8*, i8** %space_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1121
   %31 = load i8*, i8** %space_instrumented, align 4 
On edge 1046-->1121
[SelectDef] On node: ValVar ID: 1046
   %space_instrumented = alloca i8*, align 4 
On edge 1047-->1046
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1046
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1047 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1101-->1046
[SelectDef] On node: ValVar ID: 1101
   %call6_instrumented = call i8* @str_find_notalnum_instrumented(i8* %21, i8* %22, i32 0, i32 0) 
On edge 2245-->1101
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
Node 691 already visited
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
Defs of param 2 are 11
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call6_instrumented = call i8* @str_find_notalnum_instrumented(i8* %21, i8* %22, i32 0, i32 0)
Node:   store i8* %call6_instrumented, i8** %space_instrumented, align 4
Node:   %31 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call6_instrumented = call i8* @str_find_notalnum_instrumented(i8* %21, i8* %22, i32 0, i32 0)
Node:   store i8* %call6_instrumented, i8** %space_instrumented, align 4
Node:   %31 = load i8*, i8** %space_instrumented, align 4
Node:   %31 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 4 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to __assert_fail inside parse_start_instrumented
 Analyzing call to parse_start_instrumented inside sxml_parse_instrumented
Function parse_start_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 170 AddrStmt: [Var687 <-- Var688]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 214 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 172 AddrStmt: [Var691 <-- Var692]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 224 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to state_pushtoken_instrumented inside parse_doctype_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Checking aliasing of  with argument state_id of parse_doctype_instrumented
Checking aliasing of  with argument args_id of parse_doctype_instrumented
Def of param: LoadVFGNode ID: 1079 LoadStmt: [Var1251 <-- Var1192]	
   %25 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1251
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1251
[SelectDef] On node: ValVar ID: 1192
   %start_instrumented = alloca i8*, align 4 
On edge 1193-->1192
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1192
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1204-->1192
On edge 1234-->1192
[SelectDef] On node: ValVar ID: 1234
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1233-->1234
[SelectDef] On node: ValVar ID: 1233
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1233
Node 1192 already visited
[SelectDef] On node: ValVar ID: 1204
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1200-->1204
[SelectDef] On node: ValVar ID: 1200
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1199-->1200
[SelectDef] On node: ValVar ID: 1199
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1198-->1199
[SelectDef] On node: ValVar ID: 1198
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1198
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 3 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %25 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %25 = load i8*, i8** %start_instrumented, align 4
Node:   %25 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 4 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Checking aliasing of  with argument state_id of parse_doctype_instrumented
Checking aliasing of  with argument args_id of parse_doctype_instrumented
Def of param: LoadVFGNode ID: 1073 LoadStmt: [Var1252 <-- Var1190]	
   %26 = load i8*, i8** %bracket_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1252
   %26 = load i8*, i8** %bracket_instrumented, align 4 
On edge 1190-->1252
[SelectDef] On node: ValVar ID: 1190
   %bracket_instrumented = alloca i8*, align 4 
On edge 1191-->1190
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1190
	-  %bracket_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1191 (base object)
   %bracket_instrumented = alloca i8*, align 4 
On edge 1239-->1190
[SelectDef] On node: ValVar ID: 1239
   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0) 
On edge 2009-->1239
[SelectDef] On node: RetPN ID: 2009 unique return node for function str_findstr_instrumented
On edge 2112-->2009
[SelectDef] On node: ValVar ID: 2112
   %31 = load i8*, i8** %retval_instrumented, align 4 
On edge 2021-->2112
[SelectDef] On node: ValVar ID: 2021
   %retval_instrumented = alloca i8*, align 4 
On edge 2022-->2021
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2021
	-  %retval_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4 
On edge 2101-->2021
On edge 2109-->2021
[SelectDef] On node: ValVar ID: 2109
   %30 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2025-->2109
[SelectDef] On node: ValVar ID: 2025
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2026-->2025
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2025
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2026 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2011-->2025
[SelectDef] On node: ValVar ID: 2011
 i8* %end { 1st arg str_findstr_instrumented  }
On edge 1237-->2011
On edge 1822-->2011
On edge 1914-->2011
[SelectDef] On node: ValVar ID: 1914
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1872-->1914
[SelectDef] On node: ValVar ID: 1872
   %end_instrumented = alloca i8*, align 4 
On edge 1873-->1872
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1872
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1890-->1872
[SelectDef] On node: ValVar ID: 1890
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1886-->1890
[SelectDef] On node: ValVar ID: 1886
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1885-->1886
[SelectDef] On node: ValVar ID: 1885
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1884-->1885
[SelectDef] On node: ValVar ID: 1884
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1884
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1822
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1780-->1822
[SelectDef] On node: ValVar ID: 1780
   %end_instrumented = alloca i8*, align 4 
On edge 1781-->1780
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1780
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1798-->1780
[SelectDef] On node: ValVar ID: 1798
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1794-->1798
[SelectDef] On node: ValVar ID: 1794
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1792-->1793
[SelectDef] On node: ValVar ID: 1792
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1792
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1237
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1194-->1237
[SelectDef] On node: ValVar ID: 1194
   %end_instrumented = alloca i8*, align 4 
On edge 1195-->1194
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1194
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1212-->1194
[SelectDef] On node: ValVar ID: 1212
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1208-->1212
[SelectDef] On node: ValVar ID: 1208
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1207-->1208
[SelectDef] On node: ValVar ID: 1207
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1206-->1207
[SelectDef] On node: ValVar ID: 1206
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1206
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 2101
   %28 = load i8*, i8** %it_instrumented, align 4 
On edge 2033-->2101
[SelectDef] On node: ValVar ID: 2033
   %it_instrumented = alloca i8*, align 4 
On edge 2034-->2033
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2033
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2034 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2088-->2033
[SelectDef] On node: ValVar ID: 2088
   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7 
On edge 2078-->2088
[SelectDef] On node: ValVar ID: 2078
   %19 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2023-->2078
[SelectDef] On node: ValVar ID: 2023
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2024-->2023
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2023
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2010-->2023
On edge 2106-->2023
[SelectDef] On node: ValVar ID: 2106
   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1 
On edge 2105-->2106
[SelectDef] On node: ValVar ID: 2105
   %29 = load i8*, i8** %it_instrumented, align 4 
On edge 2033-->2105
Node 2033 already visited
[SelectDef] On node: ValVar ID: 2010
 i8* %start { 0th arg str_findstr_instrumented  }
On edge 1236-->2010
On edge 1821-->2010
On edge 1913-->2010
[SelectDef] On node: ValVar ID: 1913
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1913
[SelectDef] On node: ValVar ID: 1870
   %start_instrumented = alloca i8*, align 4 
On edge 1871-->1870
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1870
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1882-->1870
On edge 1911-->1870
[SelectDef] On node: ValVar ID: 1911
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1910-->1911
[SelectDef] On node: ValVar ID: 1910
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1910
Node 1870 already visited
[SelectDef] On node: ValVar ID: 1882
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1878-->1882
[SelectDef] On node: ValVar ID: 1878
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1877-->1878
[SelectDef] On node: ValVar ID: 1877
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1876-->1877
[SelectDef] On node: ValVar ID: 1876
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1876
Node 1866 already visited
[SelectDef] On node: ValVar ID: 1821
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1821
[SelectDef] On node: ValVar ID: 1778
   %start_instrumented = alloca i8*, align 4 
On edge 1779-->1778
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1778
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1790-->1778
On edge 1819-->1778
[SelectDef] On node: ValVar ID: 1819
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 4 
On edge 1818-->1819
[SelectDef] On node: ValVar ID: 1818
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1818
Node 1778 already visited
[SelectDef] On node: ValVar ID: 1790
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1786-->1790
[SelectDef] On node: ValVar ID: 1786
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1785-->1786
[SelectDef] On node: ValVar ID: 1785
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1784-->1785
[SelectDef] On node: ValVar ID: 1784
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1784
Node 1774 already visited
[SelectDef] On node: ValVar ID: 1236
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1236
[SelectDef] On node: ValVar ID: 1192
   %start_instrumented = alloca i8*, align 4 
On edge 1193-->1192
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1192
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1204-->1192
On edge 1234-->1192
[SelectDef] On node: ValVar ID: 1234
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1233-->1234
[SelectDef] On node: ValVar ID: 1233
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1233
Node 1192 already visited
[SelectDef] On node: ValVar ID: 1204
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1200-->1204
[SelectDef] On node: ValVar ID: 1200
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1199-->1200
[SelectDef] On node: ValVar ID: 1199
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1198-->1199
[SelectDef] On node: ValVar ID: 1198
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1198
Node 1188 already visited
Defs of param 4 are 15
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0)
Node:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Node:   %26 = load i8*, i8** %bracket_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0)
Node:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Node:   %26 = load i8*, i8** %bracket_instrumented, align 4
Node:   %26 = load i8*, i8** %bracket_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 4 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to parse_attributes_instrumented inside parse_instruction_instrumented
Function parse_attributes_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to __assert_fail inside print_chartokens_instrumented
 Analyzing call to parse_attrvalue_instrumented inside parse_attributes_instrumented
Function parse_attrvalue_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1387 LoadStmt: [Var2465 <-- Var2333]	
   %55 = load i8*, i8** %quot_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2465
   %55 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2465
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0) 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 919-->2419
Node 919 already visited
Defs of param 2 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0)
Node:   store i8* %call30_instrumented, i8** %quot_instrumented, align 4
Node:   %55 = load i8*, i8** %quot_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0)
Node:   store i8* %call30_instrumented, i8** %quot_instrumented, align 4
Node:   %55 = load i8*, i8** %quot_instrumented, align 4
Node:   %55 = load i8*, i8** %quot_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 4 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to str_startswith_instrumented inside parse_instruction_instrumented
Function str_startswith_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1047 LoadStmt: [Var1085 <-- Var1048]	
   %17 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1085
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1085
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1052 LoadStmt: [Var1086 <-- Var1050]	
   %18 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1086
   %18 = load i8*, i8** %end_instrumented, align 4 
On edge 1050-->1086
[SelectDef] On node: ValVar ID: 1050
   %end_instrumented = alloca i8*, align 4 
On edge 1051-->1050
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1050
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1051 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1068-->1050
[SelectDef] On node: ValVar ID: 1068
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1064-->1068
[SelectDef] On node: ValVar ID: 1064
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1063-->1064
[SelectDef] On node: ValVar ID: 1063
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1062-->1063
[SelectDef] On node: ValVar ID: 1062
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1062
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %18 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %18 = load i8*, i8** %end_instrumented, align 4
Node:   %18 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: GepVFGNode ID: 584 GepStmt: [Var1087 <-- Var56]	
   %19 = getelementptr inbounds [3 x i8], [3 x i8]* @parse_instruction.STARTTAG, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1087
   %19 = getelementptr inbounds [3 x i8], [3 x i8]* @parse_instruction.STARTTAG, i32 0, i32 0 
On edge 56-->1087
[SelectDef] On node: ValVar ID: 56
 @parse_instruction.STARTTAG = internal constant [3 x i8] c"<?\00", align 1 { Glob  }
On edge 3-->56
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to parse_end_instrumented inside sxml_parse_instrumented
Function parse_end_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 170 AddrStmt: [Var687 <-- Var688]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 234 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 172 AddrStmt: [Var691 <-- Var692]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 244 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to str_findstr_instrumented inside parse_doctype_instrumented
Function str_findstr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Checking aliasing of  with argument state_id of parse_doctype_instrumented
Checking aliasing of  with argument args_id of parse_doctype_instrumented
Def of param: LoadVFGNode ID: 1078 LoadStmt: [Var1236 <-- Var1192]	
   %18 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1236
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1236
[SelectDef] On node: ValVar ID: 1192
   %start_instrumented = alloca i8*, align 4 
On edge 1193-->1192
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1192
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1204-->1192
On edge 1234-->1192
[SelectDef] On node: ValVar ID: 1234
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1233-->1234
[SelectDef] On node: ValVar ID: 1233
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1233
Node 1192 already visited
[SelectDef] On node: ValVar ID: 1204
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1200-->1204
[SelectDef] On node: ValVar ID: 1200
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1199-->1200
[SelectDef] On node: ValVar ID: 1199
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1198-->1199
[SelectDef] On node: ValVar ID: 1198
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1198
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Checking aliasing of  with argument state_id of parse_doctype_instrumented
Checking aliasing of  with argument args_id of parse_doctype_instrumented
Def of param: LoadVFGNode ID: 1082 LoadStmt: [Var1237 <-- Var1194]	
   %19 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1237
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1194-->1237
[SelectDef] On node: ValVar ID: 1194
   %end_instrumented = alloca i8*, align 4 
On edge 1195-->1194
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1194
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1212-->1194
[SelectDef] On node: ValVar ID: 1212
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1208-->1212
[SelectDef] On node: ValVar ID: 1208
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1207-->1208
[SelectDef] On node: ValVar ID: 1207
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1206-->1207
[SelectDef] On node: ValVar ID: 1206
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1206
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %19 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %19 = load i8*, i8** %end_instrumented, align 4
Node:   %19 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Checking aliasing of  with argument state_id of parse_doctype_instrumented
Checking aliasing of  with argument args_id of parse_doctype_instrumented
Def of param: GepVFGNode ID: 582 GepStmt: [Var1238 <-- Var52]	
   %20 = getelementptr inbounds [3 x i8], [3 x i8]* @parse_doctype.ENDTAG, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1238
   %20 = getelementptr inbounds [3 x i8], [3 x i8]* @parse_doctype.ENDTAG, i32 0, i32 0 
On edge 52-->1238
[SelectDef] On node: ValVar ID: 52
 @parse_doctype.ENDTAG = internal constant [3 x i8] c"]>\00", align 1 { Glob  }
On edge 3-->52
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to WhiteSpace inside str_ltrim_instrumented
 Analyzing call to __assert_fail inside str_ltrim_instrumented
 Analyzing call to parse_comment_instrumented inside sxml_parse_instrumented
Function parse_comment_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 170 AddrStmt: [Var687 <-- Var688]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 254 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 172 AddrStmt: [Var691 <-- Var692]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 264 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to state_setpos_instrumented inside parse_doctype_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of add.ptr11_instrumented with argument state of parse_doctype_instrumented
Checking aliasing of add.ptr11_instrumented with argument args of parse_doctype_instrumented
Checking aliasing of add.ptr11_instrumented with argument state_id of parse_doctype_instrumented
Checking aliasing of add.ptr11_instrumented with argument args_id of parse_doctype_instrumented
Def of param: GepVFGNode ID: 732 GepStmt: [Var1258 <-- Var1257]	
   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 2 
[SelectDef] On node: ValVar ID: 1258
   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 2 
On edge 1257-->1258
[SelectDef] On node: ValVar ID: 1257
   %29 = load i8*, i8** %bracket_instrumented, align 4 
On edge 1190-->1257
[SelectDef] On node: ValVar ID: 1190
   %bracket_instrumented = alloca i8*, align 4 
On edge 1191-->1190
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1190
	-  %bracket_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1191 (base object)
   %bracket_instrumented = alloca i8*, align 4 
On edge 1239-->1190
[SelectDef] On node: ValVar ID: 1239
   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2009-->1239
[SelectDef] On node: RetPN ID: 2009 unique return node for function str_findstr_instrumented
On edge 2112-->2009
[SelectDef] On node: ValVar ID: 2112
   %31 = load i8*, i8** %retval_instrumented, align 4 
On edge 2021-->2112
[SelectDef] On node: ValVar ID: 2021
   %retval_instrumented = alloca i8*, align 4 
On edge 2022-->2021
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2021
	-  %retval_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4 
On edge 2101-->2021
On edge 2109-->2021
[SelectDef] On node: ValVar ID: 2109
   %30 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2025-->2109
[SelectDef] On node: ValVar ID: 2025
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2026-->2025
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2025
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2026 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2011-->2025
[SelectDef] On node: ValVar ID: 2011
 i8* %end { 1st arg str_findstr_instrumented  }
On edge 1237-->2011
On edge 1822-->2011
On edge 1914-->2011
[SelectDef] On node: ValVar ID: 1914
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1872-->1914
[SelectDef] On node: ValVar ID: 1872
   %end_instrumented = alloca i8*, align 4 
On edge 1873-->1872
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1872
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1890-->1872
[SelectDef] On node: ValVar ID: 1890
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1886-->1890
[SelectDef] On node: ValVar ID: 1886
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1885-->1886
[SelectDef] On node: ValVar ID: 1885
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1884-->1885
[SelectDef] On node: ValVar ID: 1884
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1884
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1822
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1780-->1822
[SelectDef] On node: ValVar ID: 1780
   %end_instrumented = alloca i8*, align 4 
On edge 1781-->1780
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1780
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1798-->1780
[SelectDef] On node: ValVar ID: 1798
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1794-->1798
[SelectDef] On node: ValVar ID: 1794
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1792-->1793
[SelectDef] On node: ValVar ID: 1792
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1792
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1237
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1194-->1237
[SelectDef] On node: ValVar ID: 1194
   %end_instrumented = alloca i8*, align 4 
On edge 1195-->1194
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1194
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1212-->1194
[SelectDef] On node: ValVar ID: 1212
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1208-->1212
[SelectDef] On node: ValVar ID: 1208
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1207-->1208
[SelectDef] On node: ValVar ID: 1207
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1206-->1207
[SelectDef] On node: ValVar ID: 1206
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1206
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 2101
   %28 = load i8*, i8** %it_instrumented, align 4 
On edge 2033-->2101
[SelectDef] On node: ValVar ID: 2033
   %it_instrumented = alloca i8*, align 4 
On edge 2034-->2033
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2033
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2034 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2088-->2033
[SelectDef] On node: ValVar ID: 2088
   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7 
On edge 2078-->2088
[SelectDef] On node: ValVar ID: 2078
   %19 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2023-->2078
[SelectDef] On node: ValVar ID: 2023
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2024-->2023
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2023
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2010-->2023
On edge 2106-->2023
[SelectDef] On node: ValVar ID: 2106
   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1 
On edge 2105-->2106
[SelectDef] On node: ValVar ID: 2105
   %29 = load i8*, i8** %it_instrumented, align 4 
On edge 2033-->2105
Node 2033 already visited
[SelectDef] On node: ValVar ID: 2010
 i8* %start { 0th arg str_findstr_instrumented  }
On edge 1236-->2010
On edge 1821-->2010
On edge 1913-->2010
[SelectDef] On node: ValVar ID: 1913
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1913
[SelectDef] On node: ValVar ID: 1870
   %start_instrumented = alloca i8*, align 4 
On edge 1871-->1870
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1870
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1882-->1870
On edge 1911-->1870
[SelectDef] On node: ValVar ID: 1911
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1910-->1911
[SelectDef] On node: ValVar ID: 1910
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1910
Node 1870 already visited
[SelectDef] On node: ValVar ID: 1882
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1878-->1882
[SelectDef] On node: ValVar ID: 1878
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1877-->1878
[SelectDef] On node: ValVar ID: 1877
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1876-->1877
[SelectDef] On node: ValVar ID: 1876
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1876
Node 1866 already visited
[SelectDef] On node: ValVar ID: 1821
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1821
[SelectDef] On node: ValVar ID: 1778
   %start_instrumented = alloca i8*, align 4 
On edge 1779-->1778
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1778
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1790-->1778
On edge 1819-->1778
[SelectDef] On node: ValVar ID: 1819
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 4 
On edge 1818-->1819
[SelectDef] On node: ValVar ID: 1818
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1818
Node 1778 already visited
[SelectDef] On node: ValVar ID: 1790
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1786-->1790
[SelectDef] On node: ValVar ID: 1786
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1785-->1786
[SelectDef] On node: ValVar ID: 1785
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1784-->1785
[SelectDef] On node: ValVar ID: 1784
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1784
Node 1774 already visited
[SelectDef] On node: ValVar ID: 1236
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1236
[SelectDef] On node: ValVar ID: 1192
   %start_instrumented = alloca i8*, align 4 
On edge 1193-->1192
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1192
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1204-->1192
On edge 1234-->1192
[SelectDef] On node: ValVar ID: 1234
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1233-->1234
[SelectDef] On node: ValVar ID: 1233
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1233
Node 1192 already visited
[SelectDef] On node: ValVar ID: 1204
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1200-->1204
[SelectDef] On node: ValVar ID: 1200
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1199-->1200
[SelectDef] On node: ValVar ID: 1199
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1198-->1199
[SelectDef] On node: ValVar ID: 1198
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1198
Node 1188 already visited
Defs of param 2 are 15
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Node:   %29 = load i8*, i8** %bracket_instrumented, align 4
Node:   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 2
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Node:   %29 = load i8*, i8** %bracket_instrumented, align 4
Node:   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 2
Node:   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 2
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param add.ptr11_instrumented number 2 is 4 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to printf inside print_prettyxml_instrumented
 Analyzing call to parse_instruction_instrumented inside sxml_parse_instrumented
Function parse_instruction_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 170 AddrStmt: [Var687 <-- Var688]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 274 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 172 AddrStmt: [Var691 <-- Var692]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 284 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to fread inside main
 Analyzing call to llvm.memcpy.p0i8.p0i8.i32 inside sxml_parse_instrumented
 Analyzing call to parse_doctype_instrumented inside sxml_parse_instrumented
Function parse_doctype_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 170 AddrStmt: [Var687 <-- Var688]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 294 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 172 AddrStmt: [Var691 <-- Var692]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 304 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to printf inside main
 Analyzing call to llvm.memcpy.p0i8.p0i8.i32 inside sxml_parse_instrumented
 Analyzing call to memchr inside count_lines_instrumented
 Analyzing call to sprintf inside main
 Analyzing call to printf inside print_prettyxml_instrumented
 Analyzing call to __assert_fail inside print_chartokens_instrumented
 Analyzing call to wrapper_scanf inside main
 Analyzing call to __assert_fail inside main
 Analyzing call to str_find_notalnum_instrumented inside parse_instruction_instrumented
Function str_find_notalnum_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1049 LoadStmt: [Var1099 <-- Var1048]	
   %21 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1053 LoadStmt: [Var1100 <-- Var1050]	
   %22 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1100
   %22 = load i8*, i8** %end_instrumented, align 4 
On edge 1050-->1100
[SelectDef] On node: ValVar ID: 1050
   %end_instrumented = alloca i8*, align 4 
On edge 1051-->1050
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1050
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1051 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1068-->1050
[SelectDef] On node: ValVar ID: 1068
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1064-->1068
[SelectDef] On node: ValVar ID: 1064
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1063-->1064
[SelectDef] On node: ValVar ID: 1063
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1062-->1063
[SelectDef] On node: ValVar ID: 1062
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1062
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %22 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %22 = load i8*, i8** %end_instrumented, align 4
Node:   %22 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to llvm.memcpy.p0i8.p0i8.i32 inside sxml_parse_instrumented
 Analyzing call to parse_start_instrumented inside sxml_parse_instrumented
Function parse_start_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 170 AddrStmt: [Var687 <-- Var688]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 314 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 172 AddrStmt: [Var691 <-- Var692]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 324 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to sxml_init_instrumented inside main
Function sxml_init_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of parser with argument argc of main
Checking aliasing of parser with argument argv of main
Def of param: AddrVFGNode ID: 140 AddrStmt: [Var340 <-- Var341]	
   %parser = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4  is not present in trace
  %parser = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %parser = alloca %struct.sxml_t, align 4
On Node:   %parser = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %parser = alloca %struct.sxml_t, align 4
On Node:   %parser = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param parser number 0 is 334 and has lenght 4
Parameter 1 is not a pointer
 Analyzing call to __assert_fail inside main
 Analyzing call to parse_instruction_instrumented inside sxml_parse_instrumented
Function parse_instruction_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 170 AddrStmt: [Var687 <-- Var688]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 336 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 172 AddrStmt: [Var691 <-- Var692]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 346 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to gettimeofday inside main
 Analyzing call to count_lines_instrumented inside main
Function count_lines_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of arraydecay13 with argument argc of main
Checking aliasing of arraydecay13 with argument argv of main
Def of param: GepVFGNode ID: 624 GepStmt: [Var411 <-- Var326]	
   %arraydecay13 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 411
   %arraydecay13 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
On edge 326-->411
[SelectDef] On node: ValVar ID: 326
   %buffer = alloca [8128 x i8], align 1 
On edge 327-->326
[SelectDefs] Adding node: FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param 0 are 1
FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param arraydecay13 number 0 is 1 and has lenght 8128
Parameter 1 is not a pointer
Parameter 2 is not a pointer
 Analyzing call to printf inside print_chartokens_instrumented
 Analyzing call to state_setpos_instrumented inside parse_end_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of add.ptr20_instrumented with argument state of parse_end_instrumented
Checking aliasing of add.ptr20_instrumented with argument args of parse_end_instrumented
Checking aliasing of add.ptr20_instrumented with argument state_id of parse_end_instrumented
Checking aliasing of add.ptr20_instrumented with argument args_id of parse_end_instrumented
Def of param: GepVFGNode ID: 764 GepStmt: [Var1749 <-- Var1748]	
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %38, i32 1 
[SelectDef] On node: ValVar ID: 1749
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %38, i32 1 
On edge 1748-->1749
[SelectDef] On node: ValVar ID: 1748
   %38 = load i8*, i8** %gt_instrumented, align 4 
On edge 1659-->1748
[SelectDef] On node: ValVar ID: 1659
   %gt_instrumented = alloca i8*, align 4 
On edge 1660-->1659
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1659
	-  %gt_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1660 (base object)
   %gt_instrumented = alloca i8*, align 4 
On edge 1721-->1659
[SelectDef] On node: ValVar ID: 1721
   %call8_instrumented = call i8* @str_findchr_instrumented(i8* %23, i8* %24, i32 62, i32 0, i32 0) 
On edge 1434-->1721
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 919-->2419
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0) 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
Node 919 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
Defs of param 2 are 29
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call8_instrumented = call i8* @str_findchr_instrumented(i8* %23, i8* %24, i32 62, i32 0, i32 0)
Node:   store i8* %call8_instrumented, i8** %gt_instrumented, align 4
Node:   %38 = load i8*, i8** %gt_instrumented, align 4
Node:   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %38, i32 1
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call8_instrumented = call i8* @str_findchr_instrumented(i8* %23, i8* %24, i32 62, i32 0, i32 0)
Node:   store i8* %call8_instrumented, i8** %gt_instrumented, align 4
Node:   %38 = load i8*, i8** %gt_instrumented, align 4
Node:   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %38, i32 1
Node:   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %38, i32 1
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param add.ptr20_instrumented number 2 is 4 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to print_prettyxml_instrumented inside main
Function print_prettyxml_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of arraydecay9 with argument argc of main
Checking aliasing of arraydecay9 with argument argv of main
Def of param: GepVFGNode ID: 623 GepStmt: [Var404 <-- Var326]	
   %arraydecay9 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 404
   %arraydecay9 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
On edge 326-->404
[SelectDef] On node: ValVar ID: 326
   %buffer = alloca [8128 x i8], align 1 
On edge 327-->326
[SelectDefs] Adding node: FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param 0 are 1
FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param arraydecay9 number 0 is 1 and has lenght 8128
Parameter 1 is a pointer
Checking aliasing of arraydecay10 with argument argc of main
Checking aliasing of arraydecay10 with argument argv of main
Def of param: GepVFGNode ID: 634 GepStmt: [Var405 <-- Var330]	
   %arraydecay10 = getelementptr inbounds [128 x %struct.sxmltok_t], [128 x %struct.sxmltok_t]* %tokens, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 405
   %arraydecay10 = getelementptr inbounds [128 x %struct.sxmltok_t], [128 x %struct.sxmltok_t]* %tokens, i32 0, i32 0 
On edge 330-->405
[SelectDef] On node: ValVar ID: 330
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
On edge 331-->330
[SelectDefs] Adding node: FIObjVar ID: 331 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
Defs of param 1 are 1
FIObjVar ID: 331 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
ISSUE: Definition of FIObjVar ID: 331 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4  is not present in trace
[DEFBUILDER] Building ADef
Defs of param arraydecay10 number 1 is 356 and has lenght 1536
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of indent with argument argc of main
Checking aliasing of indent with argument argv of main
Def of param: AddrVFGNode ID: 136 AddrStmt: [Var332 <-- Var333]	
   %indent = alloca i32, align 4 
[SelectDef] On node: ValVar ID: 332
   %indent = alloca i32, align 4 
On edge 333-->332
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 332
	-  %indent = alloca i32, align 4
[SelectDefs] Adding node: FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4 
On edge 228-->332
[SelectDef] On node: ValVar ID: 228
 i32 0 { constant data }
On edge 3-->228
Discarding edge
Defs of param 3 are 1
Ignoring FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4  since it's a dominator
Parameter 4 is not a pointer
Parameter 5 is not a pointer
Parameter 6 is not a pointer
 Analyzing call to str_startswith_instrumented inside parse_end_instrumented
Function str_startswith_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1208 LoadStmt: [Var1700 <-- Var1663]	
   %17 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1700
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1700
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1215 LoadStmt: [Var1701 <-- Var1665]	
   %18 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1701
   %18 = load i8*, i8** %end_instrumented, align 4 
On edge 1665-->1701
[SelectDef] On node: ValVar ID: 1665
   %end_instrumented = alloca i8*, align 4 
On edge 1666-->1665
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1665
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1666 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1683-->1665
[SelectDef] On node: ValVar ID: 1683
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1679-->1683
[SelectDef] On node: ValVar ID: 1679
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1678-->1679
[SelectDef] On node: ValVar ID: 1678
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1677-->1678
[SelectDef] On node: ValVar ID: 1677
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1677
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %18 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %18 = load i8*, i8** %end_instrumented, align 4
Node:   %18 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: GepVFGNode ID: 569 GepStmt: [Var1702 <-- Var30]	
   %19 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.15, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1702
   %19 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.15, i32 0, i32 0 
On edge 30-->1702
[SelectDef] On node: ValVar ID: 30
 @.str.15 = private unnamed_addr constant [3 x i8] c"</\00", align 1 { Glob  }
On edge 3-->30
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to state_pushtoken_instrumented inside parse_cdata_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Checking aliasing of  with argument state_id of parse_cdata_instrumented
Checking aliasing of  with argument args_id of parse_cdata_instrumented
Def of param: LoadVFGNode ID: 1264 LoadStmt: [Var1926 <-- Var1870]	
   %25 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1926
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1926
[SelectDef] On node: ValVar ID: 1870
   %start_instrumented = alloca i8*, align 4 
On edge 1871-->1870
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1870
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1882-->1870
On edge 1911-->1870
[SelectDef] On node: ValVar ID: 1911
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1910-->1911
[SelectDef] On node: ValVar ID: 1910
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1910
Node 1870 already visited
[SelectDef] On node: ValVar ID: 1882
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1878-->1882
[SelectDef] On node: ValVar ID: 1878
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1877-->1878
[SelectDef] On node: ValVar ID: 1877
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1876-->1877
[SelectDef] On node: ValVar ID: 1876
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1876
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 3 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %25 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %25 = load i8*, i8** %start_instrumented, align 4
Node:   %25 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 4 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Checking aliasing of  with argument state_id of parse_cdata_instrumented
Checking aliasing of  with argument args_id of parse_cdata_instrumented
Def of param: LoadVFGNode ID: 1258 LoadStmt: [Var1927 <-- Var1868]	
   %26 = load i8*, i8** %bracket_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1927
   %26 = load i8*, i8** %bracket_instrumented, align 4 
On edge 1868-->1927
[SelectDef] On node: ValVar ID: 1868
   %bracket_instrumented = alloca i8*, align 4 
On edge 1869-->1868
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1868
	-  %bracket_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1869 (base object)
   %bracket_instrumented = alloca i8*, align 4 
On edge 1916-->1868
[SelectDef] On node: ValVar ID: 1916
   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0) 
On edge 2009-->1916
[SelectDef] On node: RetPN ID: 2009 unique return node for function str_findstr_instrumented
On edge 2112-->2009
[SelectDef] On node: ValVar ID: 2112
   %31 = load i8*, i8** %retval_instrumented, align 4 
On edge 2021-->2112
[SelectDef] On node: ValVar ID: 2021
   %retval_instrumented = alloca i8*, align 4 
On edge 2022-->2021
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2021
	-  %retval_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4 
On edge 2101-->2021
On edge 2109-->2021
[SelectDef] On node: ValVar ID: 2109
   %30 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2025-->2109
[SelectDef] On node: ValVar ID: 2025
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2026-->2025
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2025
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2026 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2011-->2025
[SelectDef] On node: ValVar ID: 2011
 i8* %end { 1st arg str_findstr_instrumented  }
On edge 1237-->2011
On edge 1822-->2011
On edge 1914-->2011
[SelectDef] On node: ValVar ID: 1914
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1872-->1914
[SelectDef] On node: ValVar ID: 1872
   %end_instrumented = alloca i8*, align 4 
On edge 1873-->1872
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1872
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1890-->1872
[SelectDef] On node: ValVar ID: 1890
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1886-->1890
[SelectDef] On node: ValVar ID: 1886
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1885-->1886
[SelectDef] On node: ValVar ID: 1885
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1884-->1885
[SelectDef] On node: ValVar ID: 1884
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1884
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1822
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1780-->1822
[SelectDef] On node: ValVar ID: 1780
   %end_instrumented = alloca i8*, align 4 
On edge 1781-->1780
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1780
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1798-->1780
[SelectDef] On node: ValVar ID: 1798
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1794-->1798
[SelectDef] On node: ValVar ID: 1794
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1792-->1793
[SelectDef] On node: ValVar ID: 1792
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1792
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1237
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1194-->1237
[SelectDef] On node: ValVar ID: 1194
   %end_instrumented = alloca i8*, align 4 
On edge 1195-->1194
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1194
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1212-->1194
[SelectDef] On node: ValVar ID: 1212
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1208-->1212
[SelectDef] On node: ValVar ID: 1208
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1207-->1208
[SelectDef] On node: ValVar ID: 1207
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1206-->1207
[SelectDef] On node: ValVar ID: 1206
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1206
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 2101
   %28 = load i8*, i8** %it_instrumented, align 4 
On edge 2033-->2101
[SelectDef] On node: ValVar ID: 2033
   %it_instrumented = alloca i8*, align 4 
On edge 2034-->2033
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2033
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2034 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2088-->2033
[SelectDef] On node: ValVar ID: 2088
   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7 
On edge 2078-->2088
[SelectDef] On node: ValVar ID: 2078
   %19 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2023-->2078
[SelectDef] On node: ValVar ID: 2023
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2024-->2023
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2023
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2010-->2023
On edge 2106-->2023
[SelectDef] On node: ValVar ID: 2106
   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1 
On edge 2105-->2106
[SelectDef] On node: ValVar ID: 2105
   %29 = load i8*, i8** %it_instrumented, align 4 
On edge 2033-->2105
Node 2033 already visited
[SelectDef] On node: ValVar ID: 2010
 i8* %start { 0th arg str_findstr_instrumented  }
On edge 1236-->2010
On edge 1821-->2010
On edge 1913-->2010
[SelectDef] On node: ValVar ID: 1913
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1913
[SelectDef] On node: ValVar ID: 1870
   %start_instrumented = alloca i8*, align 4 
On edge 1871-->1870
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1870
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1882-->1870
On edge 1911-->1870
[SelectDef] On node: ValVar ID: 1911
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1910-->1911
[SelectDef] On node: ValVar ID: 1910
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1910
Node 1870 already visited
[SelectDef] On node: ValVar ID: 1882
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1878-->1882
[SelectDef] On node: ValVar ID: 1878
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1877-->1878
[SelectDef] On node: ValVar ID: 1877
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1876-->1877
[SelectDef] On node: ValVar ID: 1876
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1876
Node 1866 already visited
[SelectDef] On node: ValVar ID: 1821
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1821
[SelectDef] On node: ValVar ID: 1778
   %start_instrumented = alloca i8*, align 4 
On edge 1779-->1778
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1778
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1790-->1778
On edge 1819-->1778
[SelectDef] On node: ValVar ID: 1819
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 4 
On edge 1818-->1819
[SelectDef] On node: ValVar ID: 1818
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1818
Node 1778 already visited
[SelectDef] On node: ValVar ID: 1790
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1786-->1790
[SelectDef] On node: ValVar ID: 1786
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1785-->1786
[SelectDef] On node: ValVar ID: 1785
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1784-->1785
[SelectDef] On node: ValVar ID: 1784
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1784
Node 1774 already visited
[SelectDef] On node: ValVar ID: 1236
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1236
[SelectDef] On node: ValVar ID: 1192
   %start_instrumented = alloca i8*, align 4 
On edge 1193-->1192
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1192
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1204-->1192
On edge 1234-->1192
[SelectDef] On node: ValVar ID: 1234
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1233-->1234
[SelectDef] On node: ValVar ID: 1233
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1233
Node 1192 already visited
[SelectDef] On node: ValVar ID: 1204
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1200-->1204
[SelectDef] On node: ValVar ID: 1200
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1199-->1200
[SelectDef] On node: ValVar ID: 1199
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1198-->1199
[SelectDef] On node: ValVar ID: 1198
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1198
Node 1188 already visited
Defs of param 4 are 15
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0)
Node:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Node:   %26 = load i8*, i8** %bracket_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0)
Node:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Node:   %26 = load i8*, i8** %bracket_instrumented, align 4
Node:   %26 = load i8*, i8** %bracket_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 4 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to __assert_fail inside main
 Analyzing call to llvm.memmove.p0i8.p0i8.i32 inside main
 Analyzing call to __assert_fail inside str_findchr_instrumented
 Analyzing call to sxml_parse_instrumented inside main
Function sxml_parse_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of parser with argument argc of main
Checking aliasing of parser with argument argv of main
Def of param: AddrVFGNode ID: 140 AddrStmt: [Var340 <-- Var341]	
   %parser = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4  is not present in trace
  %parser = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %parser = alloca %struct.sxml_t, align 4
On Node:   %parser = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %parser = alloca %struct.sxml_t, align 4
On Node:   %parser = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param parser number 0 is 357 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of arraydecay2 with argument argc of main
Checking aliasing of arraydecay2 with argument argv of main
Def of param: GepVFGNode ID: 621 GepStmt: [Var379 <-- Var326]	
   %arraydecay2 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 379
   %arraydecay2 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
On edge 326-->379
[SelectDef] On node: ValVar ID: 326
   %buffer = alloca [8128 x i8], align 1 
On edge 327-->326
[SelectDefs] Adding node: FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param 1 are 1
FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param arraydecay2 number 1 is 1 and has lenght 8128
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of arraydecay3 with argument argc of main
Checking aliasing of arraydecay3 with argument argv of main
Def of param: GepVFGNode ID: 632 GepStmt: [Var381 <-- Var330]	
   %arraydecay3 = getelementptr inbounds [128 x %struct.sxmltok_t], [128 x %struct.sxmltok_t]* %tokens, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 381
   %arraydecay3 = getelementptr inbounds [128 x %struct.sxmltok_t], [128 x %struct.sxmltok_t]* %tokens, i32 0, i32 0 
On edge 330-->381
[SelectDef] On node: ValVar ID: 330
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
On edge 331-->330
[SelectDefs] Adding node: FIObjVar ID: 331 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
Defs of param 3 are 1
FIObjVar ID: 331 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
Defs of param arraydecay3 number 3 is 356 and has lenght 1536
Parameter 4 is not a pointer
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
 Analyzing call to NameStartChar inside parse_start_instrumented
 Analyzing call to print_prettyxml_instrumented inside main
Function print_prettyxml_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of arraydecay5 with argument argc of main
Checking aliasing of arraydecay5 with argument argv of main
Def of param: GepVFGNode ID: 622 GepStmt: [Var393 <-- Var326]	
   %arraydecay5 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 393
   %arraydecay5 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
On edge 326-->393
[SelectDef] On node: ValVar ID: 326
   %buffer = alloca [8128 x i8], align 1 
On edge 327-->326
[SelectDefs] Adding node: FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param 0 are 1
FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param arraydecay5 number 0 is 1 and has lenght 8128
Parameter 1 is a pointer
Checking aliasing of arraydecay6 with argument argc of main
Checking aliasing of arraydecay6 with argument argv of main
Def of param: GepVFGNode ID: 633 GepStmt: [Var394 <-- Var330]	
   %arraydecay6 = getelementptr inbounds [128 x %struct.sxmltok_t], [128 x %struct.sxmltok_t]* %tokens, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 394
   %arraydecay6 = getelementptr inbounds [128 x %struct.sxmltok_t], [128 x %struct.sxmltok_t]* %tokens, i32 0, i32 0 
On edge 330-->394
[SelectDef] On node: ValVar ID: 330
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
On edge 331-->330
[SelectDefs] Adding node: FIObjVar ID: 331 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
Defs of param 1 are 1
FIObjVar ID: 331 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
Defs of param arraydecay6 number 1 is 356 and has lenght 1536
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of indent with argument argc of main
Checking aliasing of indent with argument argv of main
Def of param: AddrVFGNode ID: 136 AddrStmt: [Var332 <-- Var333]	
   %indent = alloca i32, align 4 
[SelectDef] On node: ValVar ID: 332
   %indent = alloca i32, align 4 
On edge 333-->332
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 332
	-  %indent = alloca i32, align 4
[SelectDefs] Adding node: FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4 
On edge 228-->332
[SelectDef] On node: ValVar ID: 228
 i32 0 { constant data }
On edge 3-->228
Discarding edge
Defs of param 3 are 1
Ignoring FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4  since it's a dominator
Parameter 4 is not a pointer
Parameter 5 is not a pointer
Parameter 6 is not a pointer
 Analyzing call to str_startswith_instrumented inside parse_doctype_instrumented
Function str_startswith_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Checking aliasing of  with argument state_id of parse_doctype_instrumented
Checking aliasing of  with argument args_id of parse_doctype_instrumented
Def of param: LoadVFGNode ID: 1076 LoadStmt: [Var1225 <-- Var1192]	
   %14 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1225
   %14 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1225
[SelectDef] On node: ValVar ID: 1192
   %start_instrumented = alloca i8*, align 4 
On edge 1193-->1192
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1192
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1204-->1192
On edge 1234-->1192
[SelectDef] On node: ValVar ID: 1234
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1233-->1234
[SelectDef] On node: ValVar ID: 1233
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1233
Node 1192 already visited
[SelectDef] On node: ValVar ID: 1204
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1200-->1204
[SelectDef] On node: ValVar ID: 1200
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1199-->1200
[SelectDef] On node: ValVar ID: 1199
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1198-->1199
[SelectDef] On node: ValVar ID: 1198
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1198
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Checking aliasing of  with argument state_id of parse_doctype_instrumented
Checking aliasing of  with argument args_id of parse_doctype_instrumented
Def of param: LoadVFGNode ID: 1081 LoadStmt: [Var1226 <-- Var1194]	
   %15 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1226
   %15 = load i8*, i8** %end_instrumented, align 4 
On edge 1194-->1226
[SelectDef] On node: ValVar ID: 1194
   %end_instrumented = alloca i8*, align 4 
On edge 1195-->1194
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1194
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1212-->1194
[SelectDef] On node: ValVar ID: 1212
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1208-->1212
[SelectDef] On node: ValVar ID: 1208
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1207-->1208
[SelectDef] On node: ValVar ID: 1207
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1206-->1207
[SelectDef] On node: ValVar ID: 1206
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1206
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_doctype_instrumented
Checking aliasing of  with argument args of parse_doctype_instrumented
Checking aliasing of  with argument state_id of parse_doctype_instrumented
Checking aliasing of  with argument args_id of parse_doctype_instrumented
Def of param: GepVFGNode ID: 581 GepStmt: [Var1227 <-- Var50]	
   %16 = getelementptr inbounds [10 x i8], [10 x i8]* @parse_doctype.STARTTAG, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1227
   %16 = getelementptr inbounds [10 x i8], [10 x i8]* @parse_doctype.STARTTAG, i32 0, i32 0 
On edge 50-->1227
[SelectDef] On node: ValVar ID: 50
 @parse_doctype.STARTTAG = internal constant [10 x i8] c"<!DOCTYPE\00", align 1 { Glob  }
On edge 3-->50
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to str_findchr_instrumented inside sxml_parse_instrumented
Function str_findchr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of sxml_parse_instrumented
Checking aliasing of  with argument buffer of sxml_parse_instrumented
Parameter 0 is aliased with argument buffer
Parameter 1 is a pointer
Checking aliasing of  with argument state of sxml_parse_instrumented
Checking aliasing of  with argument buffer of sxml_parse_instrumented
Parameter 1 is aliased with argument buffer
Parameter 2 is not a pointer
Parameter 3 is not a pointer
Parameter 4 is not a pointer
 Analyzing call to str_startswith_instrumented inside parse_comment_instrumented
Function str_startswith_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Checking aliasing of  with argument state_id of parse_comment_instrumented
Checking aliasing of  with argument args_id of parse_comment_instrumented
Def of param: LoadVFGNode ID: 1236 LoadStmt: [Var1810 <-- Var1778]	
   %14 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1810
   %14 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1810
[SelectDef] On node: ValVar ID: 1778
   %start_instrumented = alloca i8*, align 4 
On edge 1779-->1778
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1778
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1790-->1778
On edge 1819-->1778
[SelectDef] On node: ValVar ID: 1819
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 4 
On edge 1818-->1819
[SelectDef] On node: ValVar ID: 1818
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1818
Node 1778 already visited
[SelectDef] On node: ValVar ID: 1790
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1786-->1790
[SelectDef] On node: ValVar ID: 1786
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1785-->1786
[SelectDef] On node: ValVar ID: 1785
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1784-->1785
[SelectDef] On node: ValVar ID: 1784
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1784
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Checking aliasing of  with argument state_id of parse_comment_instrumented
Checking aliasing of  with argument args_id of parse_comment_instrumented
Def of param: LoadVFGNode ID: 1241 LoadStmt: [Var1811 <-- Var1780]	
   %15 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1811
   %15 = load i8*, i8** %end_instrumented, align 4 
On edge 1780-->1811
[SelectDef] On node: ValVar ID: 1780
   %end_instrumented = alloca i8*, align 4 
On edge 1781-->1780
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1780
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1798-->1780
[SelectDef] On node: ValVar ID: 1798
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1794-->1798
[SelectDef] On node: ValVar ID: 1794
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1792-->1793
[SelectDef] On node: ValVar ID: 1792
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1792
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Checking aliasing of  with argument state_id of parse_comment_instrumented
Checking aliasing of  with argument args_id of parse_comment_instrumented
Def of param: GepVFGNode ID: 563 GepStmt: [Var1812 <-- Var22]	
   %16 = getelementptr inbounds [5 x i8], [5 x i8]* @parse_comment.STARTTAG, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1812
   %16 = getelementptr inbounds [5 x i8], [5 x i8]* @parse_comment.STARTTAG, i32 0, i32 0 
On edge 22-->1812
[SelectDef] On node: ValVar ID: 22
 @parse_comment.STARTTAG = internal constant [5 x i8] c"<!--\00", align 1 { Glob  }
On edge 3-->22
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to print_tokenvalue_instrumented inside print_prettyxml_instrumented
Function print_tokenvalue_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument buffer of print_prettyxml_instrumented
Parameter 0 is aliased with argument buffer
Parameter 1 is a pointer
Checking aliasing of  with argument buffer of print_prettyxml_instrumented
Checking aliasing of  with argument tokens of print_prettyxml_instrumented
Parameter 1 is aliased with argument tokens
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to sprintf inside print_indent
 Analyzing call to NameStartChar inside NameChar
 Analyzing call to hook_exit inside main
 Analyzing call to NameChar inside str_find_notalnum_instrumented
 Analyzing call to print_prettyxml_instrumented inside main
Function print_prettyxml_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of arraydecay50 with argument argc of main
Checking aliasing of arraydecay50 with argument argv of main
Def of param: GepVFGNode ID: 630 GepStmt: [Var525 <-- Var326]	
   %arraydecay50 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 525
   %arraydecay50 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
On edge 326-->525
[SelectDef] On node: ValVar ID: 326
   %buffer = alloca [8128 x i8], align 1 
On edge 327-->326
[SelectDefs] Adding node: FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param 0 are 1
FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param arraydecay50 number 0 is 1 and has lenght 8128
Parameter 1 is a pointer
Checking aliasing of arraydecay51 with argument argc of main
Checking aliasing of arraydecay51 with argument argv of main
Def of param: GepVFGNode ID: 635 GepStmt: [Var526 <-- Var330]	
   %arraydecay51 = getelementptr inbounds [128 x %struct.sxmltok_t], [128 x %struct.sxmltok_t]* %tokens, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 526
   %arraydecay51 = getelementptr inbounds [128 x %struct.sxmltok_t], [128 x %struct.sxmltok_t]* %tokens, i32 0, i32 0 
On edge 330-->526
[SelectDef] On node: ValVar ID: 330
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
On edge 331-->330
[SelectDefs] Adding node: FIObjVar ID: 331 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
Defs of param 1 are 1
FIObjVar ID: 331 (base object)
   %tokens = alloca [128 x %struct.sxmltok_t], align 4 
Defs of param arraydecay51 number 1 is 356 and has lenght 1536
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of indent with argument argc of main
Checking aliasing of indent with argument argv of main
Def of param: AddrVFGNode ID: 136 AddrStmt: [Var332 <-- Var333]	
   %indent = alloca i32, align 4 
[SelectDef] On node: ValVar ID: 332
   %indent = alloca i32, align 4 
On edge 333-->332
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 332
	-  %indent = alloca i32, align 4
[SelectDefs] Adding node: FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4 
On edge 228-->332
[SelectDef] On node: ValVar ID: 228
 i32 0 { constant data }
On edge 3-->228
Discarding edge
Defs of param 3 are 1
Ignoring FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4  since it's a dominator
Parameter 4 is not a pointer
Parameter 5 is not a pointer
Parameter 6 is not a pointer
 Analyzing call to printf inside print_indent
 Analyzing call to printf inside print_prettyxml_instrumented
 Analyzing call to state_setpos_instrumented inside parse_comment_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of add.ptr11_instrumented with argument state of parse_comment_instrumented
Checking aliasing of add.ptr11_instrumented with argument args of parse_comment_instrumented
Checking aliasing of add.ptr11_instrumented with argument state_id of parse_comment_instrumented
Checking aliasing of add.ptr11_instrumented with argument args_id of parse_comment_instrumented
Def of param: GepVFGNode ID: 772 GepStmt: [Var1841 <-- Var1840]	
   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 3 
[SelectDef] On node: ValVar ID: 1841
   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 3 
On edge 1840-->1841
[SelectDef] On node: ValVar ID: 1840
   %29 = load i8*, i8** %dash_instrumented, align 4 
On edge 1776-->1840
[SelectDef] On node: ValVar ID: 1776
   %dash_instrumented = alloca i8*, align 4 
On edge 1777-->1776
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1776
	-  %dash_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1777 (base object)
   %dash_instrumented = alloca i8*, align 4 
On edge 1824-->1776
[SelectDef] On node: ValVar ID: 1824
   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0) 
On edge 2009-->1824
[SelectDef] On node: RetPN ID: 2009 unique return node for function str_findstr_instrumented
On edge 2112-->2009
[SelectDef] On node: ValVar ID: 2112
   %31 = load i8*, i8** %retval_instrumented, align 4 
On edge 2021-->2112
[SelectDef] On node: ValVar ID: 2021
   %retval_instrumented = alloca i8*, align 4 
On edge 2022-->2021
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2021
	-  %retval_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4 
On edge 2101-->2021
On edge 2109-->2021
[SelectDef] On node: ValVar ID: 2109
   %30 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2025-->2109
[SelectDef] On node: ValVar ID: 2025
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2026-->2025
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2025
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2026 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2011-->2025
[SelectDef] On node: ValVar ID: 2011
 i8* %end { 1st arg str_findstr_instrumented  }
On edge 1237-->2011
On edge 1822-->2011
On edge 1914-->2011
[SelectDef] On node: ValVar ID: 1914
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1872-->1914
[SelectDef] On node: ValVar ID: 1872
   %end_instrumented = alloca i8*, align 4 
On edge 1873-->1872
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1872
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1890-->1872
[SelectDef] On node: ValVar ID: 1890
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1886-->1890
[SelectDef] On node: ValVar ID: 1886
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1885-->1886
[SelectDef] On node: ValVar ID: 1885
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1884-->1885
[SelectDef] On node: ValVar ID: 1884
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1884
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1822
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1780-->1822
[SelectDef] On node: ValVar ID: 1780
   %end_instrumented = alloca i8*, align 4 
On edge 1781-->1780
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1780
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1798-->1780
[SelectDef] On node: ValVar ID: 1798
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1794-->1798
[SelectDef] On node: ValVar ID: 1794
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1792-->1793
[SelectDef] On node: ValVar ID: 1792
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1792
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1237
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1194-->1237
[SelectDef] On node: ValVar ID: 1194
   %end_instrumented = alloca i8*, align 4 
On edge 1195-->1194
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1194
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1212-->1194
[SelectDef] On node: ValVar ID: 1212
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1208-->1212
[SelectDef] On node: ValVar ID: 1208
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1207-->1208
[SelectDef] On node: ValVar ID: 1207
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1206-->1207
[SelectDef] On node: ValVar ID: 1206
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1206
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 2101
   %28 = load i8*, i8** %it_instrumented, align 4 
On edge 2033-->2101
[SelectDef] On node: ValVar ID: 2033
   %it_instrumented = alloca i8*, align 4 
On edge 2034-->2033
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2033
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2034 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2088-->2033
[SelectDef] On node: ValVar ID: 2088
   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7 
On edge 2078-->2088
[SelectDef] On node: ValVar ID: 2078
   %19 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2023-->2078
[SelectDef] On node: ValVar ID: 2023
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2024-->2023
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2023
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2010-->2023
On edge 2106-->2023
[SelectDef] On node: ValVar ID: 2106
   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1 
On edge 2105-->2106
[SelectDef] On node: ValVar ID: 2105
   %29 = load i8*, i8** %it_instrumented, align 4 
On edge 2033-->2105
Node 2033 already visited
[SelectDef] On node: ValVar ID: 2010
 i8* %start { 0th arg str_findstr_instrumented  }
On edge 1236-->2010
On edge 1821-->2010
On edge 1913-->2010
[SelectDef] On node: ValVar ID: 1913
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1913
[SelectDef] On node: ValVar ID: 1870
   %start_instrumented = alloca i8*, align 4 
On edge 1871-->1870
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1870
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1882-->1870
On edge 1911-->1870
[SelectDef] On node: ValVar ID: 1911
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1910-->1911
[SelectDef] On node: ValVar ID: 1910
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1910
Node 1870 already visited
[SelectDef] On node: ValVar ID: 1882
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1878-->1882
[SelectDef] On node: ValVar ID: 1878
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1877-->1878
[SelectDef] On node: ValVar ID: 1877
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1876-->1877
[SelectDef] On node: ValVar ID: 1876
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1876
Node 1866 already visited
[SelectDef] On node: ValVar ID: 1821
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1821
[SelectDef] On node: ValVar ID: 1778
   %start_instrumented = alloca i8*, align 4 
On edge 1779-->1778
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1778
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1790-->1778
On edge 1819-->1778
[SelectDef] On node: ValVar ID: 1819
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 4 
On edge 1818-->1819
[SelectDef] On node: ValVar ID: 1818
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1818
Node 1778 already visited
[SelectDef] On node: ValVar ID: 1790
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1786-->1790
[SelectDef] On node: ValVar ID: 1786
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1785-->1786
[SelectDef] On node: ValVar ID: 1785
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1784-->1785
[SelectDef] On node: ValVar ID: 1784
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1784
Node 1774 already visited
[SelectDef] On node: ValVar ID: 1236
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1236
[SelectDef] On node: ValVar ID: 1192
   %start_instrumented = alloca i8*, align 4 
On edge 1193-->1192
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1192
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1204-->1192
On edge 1234-->1192
[SelectDef] On node: ValVar ID: 1234
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1233-->1234
[SelectDef] On node: ValVar ID: 1233
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1233
Node 1192 already visited
[SelectDef] On node: ValVar ID: 1204
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1200-->1204
[SelectDef] On node: ValVar ID: 1200
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1199-->1200
[SelectDef] On node: ValVar ID: 1199
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1198-->1199
[SelectDef] On node: ValVar ID: 1198
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1198
Node 1188 already visited
Defs of param 2 are 15
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0)
Node:   store i8* %call6_instrumented, i8** %dash_instrumented, align 4
Node:   %29 = load i8*, i8** %dash_instrumented, align 4
Node:   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 3
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0)
Node:   store i8* %call6_instrumented, i8** %dash_instrumented, align 4
Node:   %29 = load i8*, i8** %dash_instrumented, align 4
Node:   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 3
Node:   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 3
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param add.ptr11_instrumented number 2 is 4 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to str_ltrim_instrumented inside parse_attributes_instrumented
Function str_ltrim_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of add.ptr13_instrumented with argument state of parse_attributes_instrumented
Checking aliasing of add.ptr13_instrumented with argument args of parse_attributes_instrumented
Checking aliasing of add.ptr13_instrumented with argument state_id of parse_attributes_instrumented
Checking aliasing of add.ptr13_instrumented with argument args_id of parse_attributes_instrumented
Def of param: GepVFGNode ID: 806 GepStmt: [Var2417 <-- Var2416]	
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1434-->2395
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0) 
On edge 919-->2419
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
Node 2417 already visited
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0) 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
Node 919 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
Defs of param 0 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0)
Node:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Node:   %35 = load i8*, i8** %eq_instrumented, align 4
Node:   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0)
Node:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Node:   %35 = load i8*, i8** %eq_instrumented, align 4
Node:   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1
Node:   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param add.ptr13_instrumented number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1363 LoadStmt: [Var2418 <-- Var2323]	
   %36 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2418
   %36 = load i8*, i8** %end_instrumented, align 4 
On edge 2323-->2418
[SelectDef] On node: ValVar ID: 2323
   %end_instrumented = alloca i8*, align 4 
On edge 2324-->2323
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2323
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2324 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 2357-->2323
[SelectDef] On node: ValVar ID: 2357
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 2353-->2357
[SelectDef] On node: ValVar ID: 2353
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 2352-->2353
[SelectDef] On node: ValVar ID: 2352
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 2351-->2352
[SelectDef] On node: ValVar ID: 2351
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2351
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
Defs of param 1 are 5
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %36 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %36 = load i8*, i8** %end_instrumented, align 4
Node:   %36 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to parse_characters_instrumented inside sxml_parse_instrumented
Function parse_characters_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 170 AddrStmt: [Var687 <-- Var688]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 359 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 172 AddrStmt: [Var691 <-- Var692]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 369 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of sxml_parse_instrumented
Checking aliasing of  with argument buffer of sxml_parse_instrumented
Checking aliasing of  with argument bufferlen of sxml_parse_instrumented
Checking aliasing of  with argument tokens of sxml_parse_instrumented
Checking aliasing of  with argument num_tokens of sxml_parse_instrumented
Checking aliasing of  with argument state_id of sxml_parse_instrumented
Checking aliasing of  with argument buffer_id of sxml_parse_instrumented
Checking aliasing of  with argument tokens_id of sxml_parse_instrumented
Def of param: LoadVFGNode ID: 988 LoadStmt: [Var839 <-- Var703]	
   %41 = load i8*, i8** %lt33_instrumented, align 4 
[SelectDef] On node: ValVar ID: 839
   %41 = load i8*, i8** %lt33_instrumented, align 4 
On edge 703-->839
[SelectDef] On node: ValVar ID: 703
   %lt33_instrumented = alloca i8*, align 4 
On edge 704-->703
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 703
	-  %lt33_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 704 (base object)
   %lt33_instrumented = alloca i8*, align 4 
On edge 825-->703
[SelectDef] On node: ValVar ID: 825
   %call34_instrumented = call i8* @str_findchr_instrumented(i8* %36, i8* %37, i32 60, i32 0, i32 0), !zref_start_id !9, !zref_end_id !9 
On edge 1434-->825
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0) 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
Node 919 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0) 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
Defs of param 2 are 29
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call34_instrumented = call i8* @str_findchr_instrumented(i8* %36, i8* %37, i32 60, i32 0, i32 0), !zref_start_id !9, !zref_end_id !9
Node:   store i8* %call34_instrumented, i8** %lt33_instrumented, align 4
Node:   %41 = load i8*, i8** %lt33_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call34_instrumented = call i8* @str_findchr_instrumented(i8* %36, i8* %37, i32 60, i32 0, i32 0), !zref_start_id !9, !zref_end_id !9
Node:   store i8* %call34_instrumented, i8** %lt33_instrumented, align 4
Node:   %41 = load i8*, i8** %lt33_instrumented, align 4
Node:   %41 = load i8*, i8** %lt33_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 4 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to __assert_fail inside parse_end_instrumented
 Analyzing call to printf inside print_prettyxml_instrumented
 Analyzing call to memchr inside str_findstr_instrumented
 Analyzing call to str_ltrim_instrumented inside parse_attributes_instrumented
Function str_ltrim_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1358 LoadStmt: [Var2359 <-- Var2321]	
   %12 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
Defs of param 0 are 5
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %12 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %12 = load i8*, i8** %start_instrumented, align 4
Node:   %12 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1359 LoadStmt: [Var2360 <-- Var2323]	
   %13 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2360
   %13 = load i8*, i8** %end_instrumented, align 4 
On edge 2323-->2360
[SelectDef] On node: ValVar ID: 2323
   %end_instrumented = alloca i8*, align 4 
On edge 2324-->2323
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2323
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2324 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 2357-->2323
[SelectDef] On node: ValVar ID: 2357
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 2353-->2357
[SelectDef] On node: ValVar ID: 2353
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 2352-->2353
[SelectDef] On node: ValVar ID: 2352
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 2351-->2352
[SelectDef] On node: ValVar ID: 2351
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2351
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
Defs of param 1 are 5
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %13 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %13 = load i8*, i8** %end_instrumented, align 4
Node:   %13 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to str_ltrim_instrumented inside sxml_parse_instrumented
Function str_ltrim_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of sxml_parse_instrumented
Checking aliasing of  with argument buffer of sxml_parse_instrumented
Parameter 0 is aliased with argument buffer
Parameter 1 is a pointer
Checking aliasing of  with argument state of sxml_parse_instrumented
Checking aliasing of  with argument buffer of sxml_parse_instrumented
Parameter 1 is aliased with argument buffer
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to state_pushtoken_instrumented inside parse_instruction_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1050 LoadStmt: [Var1113 <-- Var1048]	
   %27 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1113
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1113
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 3 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %27 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %27 = load i8*, i8** %start_instrumented, align 4
Node:   %27 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 4 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1044 LoadStmt: [Var1114 <-- Var1046]	
   %28 = load i8*, i8** %space_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1114
   %28 = load i8*, i8** %space_instrumented, align 4 
On edge 1046-->1114
[SelectDef] On node: ValVar ID: 1046
   %space_instrumented = alloca i8*, align 4 
On edge 1047-->1046
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1046
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1047 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1101-->1046
[SelectDef] On node: ValVar ID: 1101
   %call6_instrumented = call i8* @str_find_notalnum_instrumented(i8* %21, i8* %22, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1101
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
Node 691 already visited
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
Defs of param 4 are 11
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call6_instrumented = call i8* @str_find_notalnum_instrumented(i8* %21, i8* %22, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call6_instrumented, i8** %space_instrumented, align 4
Node:   %28 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call6_instrumented = call i8* @str_find_notalnum_instrumented(i8* %21, i8* %22, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call6_instrumented, i8** %space_instrumented, align 4
Node:   %28 = load i8*, i8** %space_instrumented, align 4
Node:   %28 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 4 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to state_setpos_instrumented inside sxml_parse_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 170 AddrStmt: [Var687 <-- Var688]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 379 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 172 AddrStmt: [Var691 <-- Var692]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 389 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of sxml_parse_instrumented
Checking aliasing of  with argument buffer of sxml_parse_instrumented
Parameter 2 is aliased with argument buffer
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to state_setpos_instrumented inside parse_cdata_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of add.ptr11_instrumented with argument state of parse_cdata_instrumented
Checking aliasing of add.ptr11_instrumented with argument args of parse_cdata_instrumented
Checking aliasing of add.ptr11_instrumented with argument state_id of parse_cdata_instrumented
Checking aliasing of add.ptr11_instrumented with argument args_id of parse_cdata_instrumented
Def of param: GepVFGNode ID: 780 GepStmt: [Var1932 <-- Var1931]	
   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 3 
[SelectDef] On node: ValVar ID: 1932
   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 3 
On edge 1931-->1932
[SelectDef] On node: ValVar ID: 1931
   %29 = load i8*, i8** %bracket_instrumented, align 4 
On edge 1868-->1931
[SelectDef] On node: ValVar ID: 1868
   %bracket_instrumented = alloca i8*, align 4 
On edge 1869-->1868
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1868
	-  %bracket_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1869 (base object)
   %bracket_instrumented = alloca i8*, align 4 
On edge 1916-->1868
[SelectDef] On node: ValVar ID: 1916
   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0) 
On edge 2009-->1916
[SelectDef] On node: RetPN ID: 2009 unique return node for function str_findstr_instrumented
On edge 2112-->2009
[SelectDef] On node: ValVar ID: 2112
   %31 = load i8*, i8** %retval_instrumented, align 4 
On edge 2021-->2112
[SelectDef] On node: ValVar ID: 2021
   %retval_instrumented = alloca i8*, align 4 
On edge 2022-->2021
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2021
	-  %retval_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4 
On edge 2101-->2021
On edge 2109-->2021
[SelectDef] On node: ValVar ID: 2109
   %30 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2025-->2109
[SelectDef] On node: ValVar ID: 2025
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2026-->2025
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2025
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2026 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2011-->2025
[SelectDef] On node: ValVar ID: 2011
 i8* %end { 1st arg str_findstr_instrumented  }
On edge 1237-->2011
On edge 1822-->2011
On edge 1914-->2011
[SelectDef] On node: ValVar ID: 1914
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1872-->1914
[SelectDef] On node: ValVar ID: 1872
   %end_instrumented = alloca i8*, align 4 
On edge 1873-->1872
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1872
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1890-->1872
[SelectDef] On node: ValVar ID: 1890
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1886-->1890
[SelectDef] On node: ValVar ID: 1886
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1885-->1886
[SelectDef] On node: ValVar ID: 1885
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1884-->1885
[SelectDef] On node: ValVar ID: 1884
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1884
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1822
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1780-->1822
[SelectDef] On node: ValVar ID: 1780
   %end_instrumented = alloca i8*, align 4 
On edge 1781-->1780
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1780
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1798-->1780
[SelectDef] On node: ValVar ID: 1798
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1794-->1798
[SelectDef] On node: ValVar ID: 1794
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1792-->1793
[SelectDef] On node: ValVar ID: 1792
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1792
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1237
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1194-->1237
[SelectDef] On node: ValVar ID: 1194
   %end_instrumented = alloca i8*, align 4 
On edge 1195-->1194
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1194
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1212-->1194
[SelectDef] On node: ValVar ID: 1212
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1208-->1212
[SelectDef] On node: ValVar ID: 1208
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1207-->1208
[SelectDef] On node: ValVar ID: 1207
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1206-->1207
[SelectDef] On node: ValVar ID: 1206
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1206
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 2101
   %28 = load i8*, i8** %it_instrumented, align 4 
On edge 2033-->2101
[SelectDef] On node: ValVar ID: 2033
   %it_instrumented = alloca i8*, align 4 
On edge 2034-->2033
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2033
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2034 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2088-->2033
[SelectDef] On node: ValVar ID: 2088
   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7 
On edge 2078-->2088
[SelectDef] On node: ValVar ID: 2078
   %19 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2023-->2078
[SelectDef] On node: ValVar ID: 2023
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2024-->2023
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2023
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2010-->2023
On edge 2106-->2023
[SelectDef] On node: ValVar ID: 2106
   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1 
On edge 2105-->2106
[SelectDef] On node: ValVar ID: 2105
   %29 = load i8*, i8** %it_instrumented, align 4 
On edge 2033-->2105
Node 2033 already visited
[SelectDef] On node: ValVar ID: 2010
 i8* %start { 0th arg str_findstr_instrumented  }
On edge 1236-->2010
On edge 1821-->2010
On edge 1913-->2010
[SelectDef] On node: ValVar ID: 1913
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1913
[SelectDef] On node: ValVar ID: 1870
   %start_instrumented = alloca i8*, align 4 
On edge 1871-->1870
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1870
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1882-->1870
On edge 1911-->1870
[SelectDef] On node: ValVar ID: 1911
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1910-->1911
[SelectDef] On node: ValVar ID: 1910
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1910
Node 1870 already visited
[SelectDef] On node: ValVar ID: 1882
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1878-->1882
[SelectDef] On node: ValVar ID: 1878
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1877-->1878
[SelectDef] On node: ValVar ID: 1877
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1876-->1877
[SelectDef] On node: ValVar ID: 1876
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1876
Node 1866 already visited
[SelectDef] On node: ValVar ID: 1821
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1821
[SelectDef] On node: ValVar ID: 1778
   %start_instrumented = alloca i8*, align 4 
On edge 1779-->1778
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1778
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1790-->1778
On edge 1819-->1778
[SelectDef] On node: ValVar ID: 1819
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 4 
On edge 1818-->1819
[SelectDef] On node: ValVar ID: 1818
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1818
Node 1778 already visited
[SelectDef] On node: ValVar ID: 1790
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1786-->1790
[SelectDef] On node: ValVar ID: 1786
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1785-->1786
[SelectDef] On node: ValVar ID: 1785
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1784-->1785
[SelectDef] On node: ValVar ID: 1784
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1784
Node 1774 already visited
[SelectDef] On node: ValVar ID: 1236
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1236
[SelectDef] On node: ValVar ID: 1192
   %start_instrumented = alloca i8*, align 4 
On edge 1193-->1192
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1192
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1204-->1192
On edge 1234-->1192
[SelectDef] On node: ValVar ID: 1234
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1233-->1234
[SelectDef] On node: ValVar ID: 1233
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1233
Node 1192 already visited
[SelectDef] On node: ValVar ID: 1204
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1200-->1204
[SelectDef] On node: ValVar ID: 1200
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1199-->1200
[SelectDef] On node: ValVar ID: 1199
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1198-->1199
[SelectDef] On node: ValVar ID: 1198
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1198
Node 1188 already visited
Defs of param 2 are 15
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0)
Node:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Node:   %29 = load i8*, i8** %bracket_instrumented, align 4
Node:   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 3
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0)
Node:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Node:   %29 = load i8*, i8** %bracket_instrumented, align 4
Node:   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 3
Node:   %add.ptr11_instrumented = getelementptr inbounds i8, i8* %29, i32 3
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param add.ptr11_instrumented number 2 is 4 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to gettimeofday inside main
 Analyzing call to state_setpos_instrumented inside parse_start_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Checking aliasing of  with argument state_id of parse_start_instrumented
Checking aliasing of  with argument args_id of parse_start_instrumented
Def of param: LoadVFGNode ID: 1118 LoadStmt: [Var1366 <-- Var1291]	
   %32 = load i8*, i8** %space_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1366
   %32 = load i8*, i8** %space_instrumented, align 4 
On edge 1291-->1366
[SelectDef] On node: ValVar ID: 1291
   %space_instrumented = alloca i8*, align 4 
On edge 1292-->1291
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1291
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1292 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1351-->1291
[SelectDef] On node: ValVar ID: 1351
   %call10_instrumented = call i8* @str_find_notalnum_instrumented(i8* %22, i8* %23, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1351
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
Node 691 already visited
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
Defs of param 2 are 11
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call10_instrumented = call i8* @str_find_notalnum_instrumented(i8* %22, i8* %23, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call10_instrumented, i8** %space_instrumented, align 4
Node:   %32 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call10_instrumented = call i8* @str_find_notalnum_instrumented(i8* %22, i8* %23, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call10_instrumented, i8** %space_instrumented, align 4
Node:   %32 = load i8*, i8** %space_instrumented, align 4
Node:   %32 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 4 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to state_pushtoken_instrumented inside parse_start_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Checking aliasing of  with argument state_id of parse_start_instrumented
Checking aliasing of  with argument args_id of parse_start_instrumented
Def of param: LoadVFGNode ID: 1115 LoadStmt: [Var1398 <-- Var1289]	
   %47 = load i8*, i8** %name_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1398
   %47 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1398
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 3 are 4
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1
Node:   store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4
Node:   %47 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1
Node:   store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4
Node:   %47 = load i8*, i8** %name_instrumented, align 4
Node:   %47 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 4 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Checking aliasing of  with argument state_id of parse_start_instrumented
Checking aliasing of  with argument args_id of parse_start_instrumented
Def of param: LoadVFGNode ID: 1119 LoadStmt: [Var1399 <-- Var1291]	
   %48 = load i8*, i8** %space_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1399
   %48 = load i8*, i8** %space_instrumented, align 4 
On edge 1291-->1399
[SelectDef] On node: ValVar ID: 1291
   %space_instrumented = alloca i8*, align 4 
On edge 1292-->1291
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1291
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1292 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1351-->1291
[SelectDef] On node: ValVar ID: 1351
   %call10_instrumented = call i8* @str_find_notalnum_instrumented(i8* %22, i8* %23, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1351
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
Node 691 already visited
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
Defs of param 4 are 11
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call10_instrumented = call i8* @str_find_notalnum_instrumented(i8* %22, i8* %23, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call10_instrumented, i8** %space_instrumented, align 4
Node:   %48 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call10_instrumented = call i8* @str_find_notalnum_instrumented(i8* %22, i8* %23, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call10_instrumented, i8** %space_instrumented, align 4
Node:   %48 = load i8*, i8** %space_instrumented, align 4
Node:   %48 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 4 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to fprintf inside main
 Analyzing call to state_setpos_instrumented inside parse_start_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of add.ptr43_instrumented with argument state of parse_start_instrumented
Checking aliasing of add.ptr43_instrumented with argument args of parse_start_instrumented
Checking aliasing of add.ptr43_instrumented with argument state_id of parse_start_instrumented
Checking aliasing of add.ptr43_instrumented with argument args_id of parse_start_instrumented
Def of param: GepVFGNode ID: 746 GepStmt: [Var1423 <-- Var1422]	
   %add.ptr43_instrumented = getelementptr inbounds i8, i8* %56, i32 1 
[SelectDef] On node: ValVar ID: 1423
   %add.ptr43_instrumented = getelementptr inbounds i8, i8* %56, i32 1 
On edge 1422-->1423
[SelectDef] On node: ValVar ID: 1422
   %56 = load i8*, i8** %gt_instrumented, align 4 
On edge 1287-->1422
[SelectDef] On node: ValVar ID: 1287
   %gt_instrumented = alloca i8*, align 4 
On edge 1288-->1287
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1287
	-  %gt_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4 
On edge 1384-->1287
On edge 1402-->1287
[SelectDef] On node: ValVar ID: 1402
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %49, i32 1 
On edge 1401-->1402
[SelectDef] On node: ValVar ID: 1401
   %49 = load i8*, i8** %gt_instrumented, align 4 
On edge 1287-->1401
Node 1287 already visited
[SelectDef] On node: ValVar ID: 1384
   %add.ptr24_instrumented = getelementptr inbounds i8, i8* %38, i32 %40 
On edge 1380-->1384
[SelectDef] On node: ValVar ID: 1380
   %38 = load i8*, i8** %buffer22_instrumented, align 4 
On edge 1379-->1380
[SelectDef] On node: ValVar ID: 1379
   %buffer22_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %37, i32 0, i32 0 
On edge 1378-->1379
[SelectDef] On node: ValVar ID: 1378
   %37 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1378
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 2 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %38 = load i8*, i8** %buffer22_instrumented, align 4
Node:   %add.ptr24_instrumented = getelementptr inbounds i8, i8* %38, i32 %40
Node:   store i8* %add.ptr24_instrumented, i8** %gt_instrumented, align 4
Node:   %49 = load i8*, i8** %gt_instrumented, align 4
Node:   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %49, i32 1
Node:   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4
Node:   %56 = load i8*, i8** %gt_instrumented, align 4
Node:   %add.ptr43_instrumented = getelementptr inbounds i8, i8* %56, i32 1
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %38 = load i8*, i8** %buffer22_instrumented, align 4
Node:   %add.ptr24_instrumented = getelementptr inbounds i8, i8* %38, i32 %40
Node:   store i8* %add.ptr24_instrumented, i8** %gt_instrumented, align 4
Node:   %49 = load i8*, i8** %gt_instrumented, align 4
Node:   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %49, i32 1
Node:   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4
Node:   %56 = load i8*, i8** %gt_instrumented, align 4
Node:   %add.ptr43_instrumented = getelementptr inbounds i8, i8* %56, i32 1
Node:   %add.ptr43_instrumented = getelementptr inbounds i8, i8* %56, i32 1
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param add.ptr43_instrumented number 2 is 4 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to state_setpos_instrumented inside parse_instruction_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of add.ptr29_instrumented with argument state of parse_instruction_instrumented
Checking aliasing of add.ptr29_instrumented with argument args of parse_instruction_instrumented
Checking aliasing of add.ptr29_instrumented with argument state_id of parse_instruction_instrumented
Checking aliasing of add.ptr29_instrumented with argument args_id of parse_instruction_instrumented
Def of param: GepVFGNode ID: 724 GepStmt: [Var1163 <-- Var1162]	
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %47, i32 2 
[SelectDef] On node: ValVar ID: 1163
   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %47, i32 2 
On edge 1162-->1163
[SelectDef] On node: ValVar ID: 1162
   %47 = load i8*, i8** %quest_instrumented, align 4 
On edge 1044-->1162
[SelectDef] On node: ValVar ID: 1044
   %quest_instrumented = alloca i8*, align 4 
On edge 1045-->1044
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1044
	-  %quest_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1045 (base object)
   %quest_instrumented = alloca i8*, align 4 
On edge 1141-->1044
[SelectDef] On node: ValVar ID: 1141
   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %37, i32 %39 
On edge 1137-->1141
[SelectDef] On node: ValVar ID: 1137
   %37 = load i8*, i8** %buffer16_instrumented, align 4 
On edge 1136-->1137
[SelectDef] On node: ValVar ID: 1136
   %buffer16_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %36, i32 0, i32 0 
On edge 1135-->1136
[SelectDef] On node: ValVar ID: 1135
   %36 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1135
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 2 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %37 = load i8*, i8** %buffer16_instrumented, align 4
Node:   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %37, i32 %39
Node:   store i8* %add.ptr18_instrumented, i8** %quest_instrumented, align 4
Node:   %47 = load i8*, i8** %quest_instrumented, align 4
Node:   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %47, i32 2
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %37 = load i8*, i8** %buffer16_instrumented, align 4
Node:   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %37, i32 %39
Node:   store i8* %add.ptr18_instrumented, i8** %quest_instrumented, align 4
Node:   %47 = load i8*, i8** %quest_instrumented, align 4
Node:   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %47, i32 2
Node:   %add.ptr29_instrumented = getelementptr inbounds i8, i8* %47, i32 2
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param add.ptr29_instrumented number 2 is 4 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to state_pushtoken_instrumented inside parse_characters_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1186 LoadStmt: [Var1627 <-- Var1535]	
   %43 = load i8*, i8** %ampr_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1627
   %43 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1627
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1434-->1550
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0) 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
Node 919 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
Node 1535 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
Defs of param 3 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %43 = load i8*, i8** %ampr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0)
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %43 = load i8*, i8** %ampr_instrumented, align 4
Node:   %43 = load i8*, i8** %ampr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 4 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1172 LoadStmt: [Var1628 <-- Var1529]	
   %44 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1628
   %44 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1628
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0) 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
Node 919 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
Node 1529 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
Defs of param 4 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0)
Node:   store i8* %call14_instrumented, i8** %colon_instrumented, align 4
Node:   %40 = load i8*, i8** %colon_instrumented, align 4
Node:   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1
Node:   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4
Node:   %44 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0)
Node:   store i8* %call14_instrumented, i8** %colon_instrumented, align 4
Node:   %40 = load i8*, i8** %colon_instrumented, align 4
Node:   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1
Node:   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4
Node:   %44 = load i8*, i8** %start_instrumented, align 4
Node:   %44 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 4 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to parse_cdata_instrumented inside sxml_parse_instrumented
Function parse_cdata_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of temp_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of temp_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 170 AddrStmt: [Var687 <-- Var688]	
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Defs of param 0 are 1
FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
ISSUE: Definition of FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4  is not present in trace
  %temp_instrumented = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Found path
Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
On Node:   %temp_instrumented = alloca %struct.sxml_t, align 4
Adding SUse with field of type: i32
Adding def to deflist
Defs of param temp_instrumented number 0 is 399 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of args_instrumented with argument state of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument bufferlen of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument num_tokens of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument state_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument buffer_id of sxml_parse_instrumented
Checking aliasing of args_instrumented with argument tokens_id of sxml_parse_instrumented
Def of param: AddrVFGNode ID: 172 AddrStmt: [Var691 <-- Var692]	
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 1
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Found path
Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
On Node:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Adding SUse with field of type: i8*
Adding def to deflist
Defs of param args_instrumented number 1 is 409 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to puts inside print_prettyxml_instrumented
 Analyzing call to memchr inside str_findchr_instrumented
 Analyzing call to str_findchr_instrumented inside parse_characters_instrumented
Function str_findchr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1169 LoadStmt: [Var1548 <-- Var1529]	
   %8 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
Node 1548 already visited
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0) 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
Node 919 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0) 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
Defs of param 0 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %8 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %8 = load i8*, i8** %start_instrumented, align 4
Node:   %8 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1163 LoadStmt: [Var1549 <-- Var1527]	
   %9 = load i8*, i8** %end.addr_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1549
   %9 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 1527-->1549
[SelectDef] On node: ValVar ID: 1527
   %end.addr_instrumented = alloca i8*, align 4 
On edge 1528-->1527
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1527
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1528 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 1512-->1527
[SelectDef] On node: ValVar ID: 1512
 i8* %end { 2nd arg parse_characters_instrumented  }
On edge 839-->1512
On edge 2620-->1512
[SelectDef] On node: ValVar ID: 2620
   %11 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2599-->2620
[SelectDef] On node: ValVar ID: 2599
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2600-->2599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2599
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2600 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2584-->2599
[SelectDef] On node: ValVar ID: 2584
 i8* %end { 2nd arg parse_attrvalue_instrumented  }
On edge 2465-->2584
[SelectDef] On node: ValVar ID: 2465
   %55 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2465
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0) 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
Node 919 already visited
[SelectDef] On node: ValVar ID: 839
   %41 = load i8*, i8** %lt33_instrumented, align 4 
On edge 703-->839
[SelectDef] On node: ValVar ID: 703
   %lt33_instrumented = alloca i8*, align 4 
On edge 704-->703
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 703
	-  %lt33_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 704 (base object)
   %lt33_instrumented = alloca i8*, align 4 
On edge 825-->703
[SelectDef] On node: ValVar ID: 825
   %call34_instrumented = call i8* @str_findchr_instrumented(i8* %36, i8* %37, i32 60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->825
Node 1434 already visited
Defs of param 1 are 31
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 1528 (base object)
   %end.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call34_instrumented = call i8* @str_findchr_instrumented(i8* %36, i8* %37, i32 60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call34_instrumented, i8** %lt33_instrumented, align 4
Node:   %41 = load i8*, i8** %lt33_instrumented, align 4
Node:   %41 = load i8*, i8** %lt33_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %end.addr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call34_instrumented = call i8* @str_findchr_instrumented(i8* %36, i8* %37, i32 60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call34_instrumented, i8** %lt33_instrumented, align 4
Node:   %41 = load i8*, i8** %lt33_instrumented, align 4
Node:   %41 = load i8*, i8** %lt33_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %end.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %end.addr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
Parameter 4 is not a pointer
 Analyzing call to __assert_fail inside str_findchr_instrumented
 Analyzing call to __assert_fail inside parse_characters_instrumented
 Analyzing call to state_setpos_instrumented inside parse_characters_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1182 LoadStmt: [Var1588 <-- Var1535]	
   %28 = load i8*, i8** %ampr_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1588
   %28 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1588
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0) 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
Node 919 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
Node 1535 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
Defs of param 2 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %28 = load i8*, i8** %ampr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %28 = load i8*, i8** %ampr_instrumented, align 4
Node:   %28 = load i8*, i8** %ampr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 4 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to sprintf inside print_tokenvalue_instrumented
 Analyzing call to __assert_fail inside str_find_notalnum_instrumented
 Analyzing call to printf inside print_prettyxml_instrumented
 Analyzing call to state_setpos_instrumented inside parse_characters_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1173 LoadStmt: [Var1632 <-- Var1529]	
   %47 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1632
   %47 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1632
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0) 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
Node 919 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
Node 1529 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
Defs of param 2 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0)
Node:   store i8* %call14_instrumented, i8** %colon_instrumented, align 4
Node:   %40 = load i8*, i8** %colon_instrumented, align 4
Node:   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1
Node:   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4
Node:   %47 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0)
Node:   store i8* %call14_instrumented, i8** %colon_instrumented, align 4
Node:   %40 = load i8*, i8** %colon_instrumented, align 4
Node:   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1
Node:   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4
Node:   %47 = load i8*, i8** %start_instrumented, align 4
Node:   %47 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 4 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to fprintf inside main
 Analyzing call to str_findchr_instrumented inside parse_end_instrumented
Function str_findchr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1211 LoadStmt: [Var1719 <-- Var1663]	
   %23 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2
Node:   store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4
Node:   %23 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2
Node:   store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4
Node:   %23 = load i8*, i8** %start_instrumented, align 4
Node:   %23 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1216 LoadStmt: [Var1720 <-- Var1665]	
   %24 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1720
   %24 = load i8*, i8** %end_instrumented, align 4 
On edge 1665-->1720
[SelectDef] On node: ValVar ID: 1665
   %end_instrumented = alloca i8*, align 4 
On edge 1666-->1665
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1665
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1666 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1683-->1665
[SelectDef] On node: ValVar ID: 1683
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1679-->1683
[SelectDef] On node: ValVar ID: 1679
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1678-->1679
[SelectDef] On node: ValVar ID: 1678
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1677-->1678
[SelectDef] On node: ValVar ID: 1677
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1677
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %24 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %24 = load i8*, i8** %end_instrumented, align 4
Node:   %24 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
Parameter 4 is not a pointer
 Analyzing call to str_find_notalnum_instrumented inside parse_end_instrumented
Function str_find_notalnum_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1212 LoadStmt: [Var1729 <-- Var1663]	
   %27 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2
Node:   store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4
Node:   %27 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2
Node:   store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4
Node:   %27 = load i8*, i8** %start_instrumented, align 4
Node:   %27 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1201 LoadStmt: [Var1730 <-- Var1659]	
   %28 = load i8*, i8** %gt_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1730
   %28 = load i8*, i8** %gt_instrumented, align 4 
On edge 1659-->1730
[SelectDef] On node: ValVar ID: 1659
   %gt_instrumented = alloca i8*, align 4 
On edge 1660-->1659
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1659
	-  %gt_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1660 (base object)
   %gt_instrumented = alloca i8*, align 4 
On edge 1721-->1659
[SelectDef] On node: ValVar ID: 1721
   %call8_instrumented = call i8* @str_findchr_instrumented(i8* %23, i8* %24, i32 62, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1721
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
Node 919 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
Defs of param 1 are 29
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call8_instrumented = call i8* @str_findchr_instrumented(i8* %23, i8* %24, i32 62, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call8_instrumented, i8** %gt_instrumented, align 4
Node:   %28 = load i8*, i8** %gt_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call8_instrumented = call i8* @str_findchr_instrumented(i8* %23, i8* %24, i32 62, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call8_instrumented, i8** %gt_instrumented, align 4
Node:   %28 = load i8*, i8** %gt_instrumented, align 4
Node:   %28 = load i8*, i8** %gt_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to str_ltrim_instrumented inside parse_end_instrumented
Function str_ltrim_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1205 LoadStmt: [Var1733 <-- Var1661]	
   %29 = load i8*, i8** %space_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
Node 691 already visited
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
Defs of param 0 are 11
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call13_instrumented, i8** %space_instrumented, align 4
Node:   %29 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call13_instrumented, i8** %space_instrumented, align 4
Node:   %29 = load i8*, i8** %space_instrumented, align 4
Node:   %29 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1202 LoadStmt: [Var1734 <-- Var1659]	
   %30 = load i8*, i8** %gt_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1734
   %30 = load i8*, i8** %gt_instrumented, align 4 
On edge 1659-->1734
[SelectDef] On node: ValVar ID: 1659
   %gt_instrumented = alloca i8*, align 4 
On edge 1660-->1659
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1659
	-  %gt_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1660 (base object)
   %gt_instrumented = alloca i8*, align 4 
On edge 1721-->1659
[SelectDef] On node: ValVar ID: 1721
   %call8_instrumented = call i8* @str_findchr_instrumented(i8* %23, i8* %24, i32 62, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1721
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
Node 919 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
Defs of param 1 are 29
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call8_instrumented = call i8* @str_findchr_instrumented(i8* %23, i8* %24, i32 62, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call8_instrumented, i8** %gt_instrumented, align 4
Node:   %30 = load i8*, i8** %gt_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call8_instrumented = call i8* @str_findchr_instrumented(i8* %23, i8* %24, i32 62, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call8_instrumented, i8** %gt_instrumented, align 4
Node:   %30 = load i8*, i8** %gt_instrumented, align 4
Node:   %30 = load i8*, i8** %gt_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to NameStartChar inside parse_end_instrumented
 Analyzing call to state_pushtoken_instrumented inside parse_end_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1213 LoadStmt: [Var1743 <-- Var1663]	
   %34 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1743
   %34 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1743
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 3 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2
Node:   store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4
Node:   %34 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2
Node:   store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4
Node:   %34 = load i8*, i8** %start_instrumented, align 4
Node:   %34 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 4 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_end_instrumented
Checking aliasing of  with argument args of parse_end_instrumented
Checking aliasing of  with argument state_id of parse_end_instrumented
Checking aliasing of  with argument args_id of parse_end_instrumented
Def of param: LoadVFGNode ID: 1206 LoadStmt: [Var1744 <-- Var1661]	
   %35 = load i8*, i8** %space_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1744
   %35 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1744
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
Node 691 already visited
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
Defs of param 4 are 11
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call13_instrumented, i8** %space_instrumented, align 4
Node:   %35 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call13_instrumented, i8** %space_instrumented, align 4
Node:   %35 = load i8*, i8** %space_instrumented, align 4
Node:   %35 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 4 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to str_findstr_instrumented inside parse_comment_instrumented
Function str_findstr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Checking aliasing of  with argument state_id of parse_comment_instrumented
Checking aliasing of  with argument args_id of parse_comment_instrumented
Def of param: LoadVFGNode ID: 1238 LoadStmt: [Var1821 <-- Var1778]	
   %18 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1821
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1821
[SelectDef] On node: ValVar ID: 1778
   %start_instrumented = alloca i8*, align 4 
On edge 1779-->1778
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1778
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1790-->1778
On edge 1819-->1778
[SelectDef] On node: ValVar ID: 1819
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 4 
On edge 1818-->1819
[SelectDef] On node: ValVar ID: 1818
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1818
Node 1778 already visited
[SelectDef] On node: ValVar ID: 1790
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1786-->1790
[SelectDef] On node: ValVar ID: 1786
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1785-->1786
[SelectDef] On node: ValVar ID: 1785
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1784-->1785
[SelectDef] On node: ValVar ID: 1784
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1784
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 4
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 4
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Checking aliasing of  with argument state_id of parse_comment_instrumented
Checking aliasing of  with argument args_id of parse_comment_instrumented
Def of param: LoadVFGNode ID: 1242 LoadStmt: [Var1822 <-- Var1780]	
   %19 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1822
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1780-->1822
[SelectDef] On node: ValVar ID: 1780
   %end_instrumented = alloca i8*, align 4 
On edge 1781-->1780
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1780
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1798-->1780
[SelectDef] On node: ValVar ID: 1798
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1794-->1798
[SelectDef] On node: ValVar ID: 1794
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1792-->1793
[SelectDef] On node: ValVar ID: 1792
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1792
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %19 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %19 = load i8*, i8** %end_instrumented, align 4
Node:   %19 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Checking aliasing of  with argument state_id of parse_comment_instrumented
Checking aliasing of  with argument args_id of parse_comment_instrumented
Def of param: GepVFGNode ID: 564 GepStmt: [Var1823 <-- Var24]	
   %20 = getelementptr inbounds [4 x i8], [4 x i8]* @parse_comment.ENDTAG, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1823
   %20 = getelementptr inbounds [4 x i8], [4 x i8]* @parse_comment.ENDTAG, i32 0, i32 0 
On edge 24-->1823
[SelectDef] On node: ValVar ID: 24
 @parse_comment.ENDTAG = internal constant [4 x i8] c"-->\00", align 1 { Glob  }
On edge 3-->24
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to str_startswith_instrumented inside parse_cdata_instrumented
Function str_startswith_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Checking aliasing of  with argument state_id of parse_cdata_instrumented
Checking aliasing of  with argument args_id of parse_cdata_instrumented
Def of param: LoadVFGNode ID: 1261 LoadStmt: [Var1902 <-- Var1870]	
   %14 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1902
   %14 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1902
[SelectDef] On node: ValVar ID: 1870
   %start_instrumented = alloca i8*, align 4 
On edge 1871-->1870
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1870
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1882-->1870
On edge 1911-->1870
[SelectDef] On node: ValVar ID: 1911
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1910-->1911
[SelectDef] On node: ValVar ID: 1910
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1910
Node 1870 already visited
[SelectDef] On node: ValVar ID: 1882
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1878-->1882
[SelectDef] On node: ValVar ID: 1878
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1877-->1878
[SelectDef] On node: ValVar ID: 1877
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1876-->1877
[SelectDef] On node: ValVar ID: 1876
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1876
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
Node:   %14 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Checking aliasing of  with argument state_id of parse_cdata_instrumented
Checking aliasing of  with argument args_id of parse_cdata_instrumented
Def of param: LoadVFGNode ID: 1266 LoadStmt: [Var1903 <-- Var1872]	
   %15 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1903
   %15 = load i8*, i8** %end_instrumented, align 4 
On edge 1872-->1903
[SelectDef] On node: ValVar ID: 1872
   %end_instrumented = alloca i8*, align 4 
On edge 1873-->1872
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1872
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1890-->1872
[SelectDef] On node: ValVar ID: 1890
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1886-->1890
[SelectDef] On node: ValVar ID: 1886
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1885-->1886
[SelectDef] On node: ValVar ID: 1885
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1884-->1885
[SelectDef] On node: ValVar ID: 1884
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1884
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
Node:   %15 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Checking aliasing of  with argument state_id of parse_cdata_instrumented
Checking aliasing of  with argument args_id of parse_cdata_instrumented
Def of param: GepVFGNode ID: 530 GepStmt: [Var1904 <-- Var4]	
   %16 = getelementptr inbounds [10 x i8], [10 x i8]* @parse_cdata.STARTTAG, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1904
   %16 = getelementptr inbounds [10 x i8], [10 x i8]* @parse_cdata.STARTTAG, i32 0, i32 0 
On edge 4-->1904
[SelectDef] On node: ValVar ID: 4
 @parse_cdata.STARTTAG = internal constant [10 x i8] c"<![CDATA[\00", align 1 { Glob  }
On edge 3-->4
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to str_findstr_instrumented inside parse_cdata_instrumented
Function str_findstr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Checking aliasing of  with argument state_id of parse_cdata_instrumented
Checking aliasing of  with argument args_id of parse_cdata_instrumented
Def of param: LoadVFGNode ID: 1263 LoadStmt: [Var1913 <-- Var1870]	
   %18 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1913
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1913
[SelectDef] On node: ValVar ID: 1870
   %start_instrumented = alloca i8*, align 4 
On edge 1871-->1870
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1870
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1882-->1870
On edge 1911-->1870
[SelectDef] On node: ValVar ID: 1911
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1910-->1911
[SelectDef] On node: ValVar ID: 1910
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1910
Node 1870 already visited
[SelectDef] On node: ValVar ID: 1882
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1878-->1882
[SelectDef] On node: ValVar ID: 1878
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1877-->1878
[SelectDef] On node: ValVar ID: 1877
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1876-->1877
[SelectDef] On node: ValVar ID: 1876
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1876
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Checking aliasing of  with argument state_id of parse_cdata_instrumented
Checking aliasing of  with argument args_id of parse_cdata_instrumented
Def of param: LoadVFGNode ID: 1267 LoadStmt: [Var1914 <-- Var1872]	
   %19 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1914
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1872-->1914
[SelectDef] On node: ValVar ID: 1872
   %end_instrumented = alloca i8*, align 4 
On edge 1873-->1872
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1872
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1890-->1872
[SelectDef] On node: ValVar ID: 1890
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1886-->1890
[SelectDef] On node: ValVar ID: 1886
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1885-->1886
[SelectDef] On node: ValVar ID: 1885
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1884-->1885
[SelectDef] On node: ValVar ID: 1884
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1884
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %19 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %19 = load i8*, i8** %end_instrumented, align 4
Node:   %19 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_cdata_instrumented
Checking aliasing of  with argument args of parse_cdata_instrumented
Checking aliasing of  with argument state_id of parse_cdata_instrumented
Checking aliasing of  with argument args_id of parse_cdata_instrumented
Def of param: GepVFGNode ID: 531 GepStmt: [Var1915 <-- Var6]	
   %20 = getelementptr inbounds [4 x i8], [4 x i8]* @parse_cdata.ENDTAG, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1915
   %20 = getelementptr inbounds [4 x i8], [4 x i8]* @parse_cdata.ENDTAG, i32 0, i32 0 
On edge 6-->1915
[SelectDef] On node: ValVar ID: 6
 @parse_cdata.ENDTAG = internal constant [4 x i8] c"]]>\00", align 1 { Glob  }
On edge 3-->6
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to __assert_fail inside str_startswith_instrumented
 Analyzing call to __assert_fail inside parse_instruction_instrumented
 Analyzing call to __assert_fail inside parse_attributes_instrumented
 Analyzing call to str_rtrim_instrumented inside parse_attributes_instrumented
Function str_rtrim_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1371 LoadStmt: [Var2405 <-- Var2325]	
   %29 = load i8*, i8** %name_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2405
   %29 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2405
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
Node 2325 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
Node 691 already visited
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
Node 919 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
Defs of param 0 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %29 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %29 = load i8*, i8** %name_instrumented, align 4
Node:   %29 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1378 LoadStmt: [Var2406 <-- Var2329]	
   %30 = load i8*, i8** %eq_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2406
   %30 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2406
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1434-->2395
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
Node 2329 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
Node 919 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
Defs of param 1 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0)
Node:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Node:   %30 = load i8*, i8** %eq_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0)
Node:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Node:   %30 = load i8*, i8** %eq_instrumented, align 4
Node:   %30 = load i8*, i8** %eq_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to strlen inside str_startswith_instrumented
 Analyzing call to count_lines_instrumented inside main
Function count_lines_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of arraydecay33 with argument argc of main
Checking aliasing of arraydecay33 with argument argv of main
Def of param: GepVFGNode ID: 628 GepStmt: [Var475 <-- Var326]	
   %arraydecay33 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 475
   %arraydecay33 = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0 
On edge 326-->475
[SelectDef] On node: ValVar ID: 326
   %buffer = alloca [8128 x i8], align 1 
On edge 327-->326
[SelectDefs] Adding node: FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param 0 are 1
FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
Defs of param arraydecay33 number 0 is 1 and has lenght 8128
Parameter 1 is not a pointer
Parameter 2 is not a pointer
 Analyzing call to memcmp inside str_startswith_instrumented
 Analyzing call to __assert_fail inside str_findstr_instrumented
 Analyzing call to str_findchr_instrumented inside parse_attributes_instrumented
Function str_findchr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1370 LoadStmt: [Var2393 <-- Var2325]	
   %25 = load i8*, i8** %name_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
Node 2393 already visited
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
Node 2333 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
Node 691 already visited
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
Node 919 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0) 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
Defs of param 0 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1361 LoadStmt: [Var2394 <-- Var2323]	
   %26 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2394
   %26 = load i8*, i8** %end_instrumented, align 4 
On edge 2323-->2394
[SelectDef] On node: ValVar ID: 2323
   %end_instrumented = alloca i8*, align 4 
On edge 2324-->2323
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2323
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2324 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 2357-->2323
[SelectDef] On node: ValVar ID: 2357
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 2353-->2357
[SelectDef] On node: ValVar ID: 2353
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 2352-->2353
[SelectDef] On node: ValVar ID: 2352
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 2351-->2352
[SelectDef] On node: ValVar ID: 2351
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2351
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
Defs of param 1 are 5
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %26 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %26 = load i8*, i8** %end_instrumented, align 4
Node:   %26 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
Parameter 4 is not a pointer
 Analyzing call to parse_attributes_instrumented inside parse_start_instrumented
Function parse_attributes_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to __assert_fail inside str_findstr_instrumented
 Analyzing call to state_setpos_instrumented inside parse_attributes_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1390 LoadStmt: [Var2461 <-- Var2335]	
   %52 = load i8*, i8** %value_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2461
   %52 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2461
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
Node 2335 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
Node 919 already visited
Defs of param 2 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0)
Node:   store i8* %call30_instrumented, i8** %quot_instrumented, align 4
Node:   store i8* %call14_instrumented, i8** %quot_instrumented, align 4
Node:   %43 = load i8*, i8** %quot_instrumented, align 4
Node:   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1
Node:   store i8* %add.ptr28_instrumented, i8** %value_instrumented, align 4
Node:   %52 = load i8*, i8** %value_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0)
Node:   store i8* %call30_instrumented, i8** %quot_instrumented, align 4
Node:   store i8* %call14_instrumented, i8** %quot_instrumented, align 4
Node:   %43 = load i8*, i8** %quot_instrumented, align 4
Node:   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1
Node:   store i8* %add.ptr28_instrumented, i8** %value_instrumented, align 4
Node:   %52 = load i8*, i8** %value_instrumented, align 4
Node:   %52 = load i8*, i8** %value_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 4 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to strlen inside str_findstr_instrumented
 Analyzing call to __isoc99_scanf inside main
 Analyzing call to __assert_fail inside state_pushtoken_instrumented
 Analyzing call to str_findchr_instrumented inside parse_characters_instrumented
Function str_findchr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1185 LoadStmt: [Var1606 <-- Var1535]	
   %33 = load i8*, i8** %ampr_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
Node 1606 already visited
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
Node 919 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0) 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
Defs of param 0 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %33 = load i8*, i8** %ampr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %33 = load i8*, i8** %ampr_instrumented, align 4
Node:   %33 = load i8*, i8** %ampr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1174 LoadStmt: [Var1607 <-- Var1531]	
   %34 = load i8*, i8** %limit_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1607
   %34 = load i8*, i8** %limit_instrumented, align 4 
On edge 1531-->1607
[SelectDef] On node: ValVar ID: 1531
   %limit_instrumented = alloca i8*, align 4 
On edge 1532-->1531
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1531
	-  %limit_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1532 (base object)
   %limit_instrumented = alloca i8*, align 4 
On edge 1604-->1531
[SelectDef] On node: ValVar ID: 1604
   %cond_instrumented = phi i8* [ %add.ptr13_instrumented, %cond.true_instrumented ], [ %32, %cond.false_instrumented ] 
On edge 1599-->1604
[SelectDef] On node: ValVar ID: 1599
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %31, i32 8 
On edge 1598-->1599
[SelectDef] On node: ValVar ID: 1598
   %31 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1598
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
Node 919 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
Node 1535 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
Defs of param 1 are 29
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call34_instrumented = call i8* @str_findchr_instrumented(i8* %36, i8* %37, i32 60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call34_instrumented, i8** %lt33_instrumented, align 4
Node:   %41 = load i8*, i8** %lt33_instrumented, align 4
Node:   %41 = load i8*, i8** %lt33_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %32 = load i8*, i8** %end.addr_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %add.ptr13_instrumented, %cond.true_instrumented ], [ %32, %cond.false_instrumented ]
Node:   store i8* %cond_instrumented, i8** %limit_instrumented, align 4
Node:   %34 = load i8*, i8** %limit_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call34_instrumented = call i8* @str_findchr_instrumented(i8* %36, i8* %37, i32 60, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call34_instrumented, i8** %lt33_instrumented, align 4
Node:   %41 = load i8*, i8** %lt33_instrumented, align 4
Node:   %41 = load i8*, i8** %lt33_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %32 = load i8*, i8** %end.addr_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %add.ptr13_instrumented, %cond.true_instrumented ], [ %32, %cond.false_instrumented ]
Node:   store i8* %cond_instrumented, i8** %limit_instrumented, align 4
Node:   %34 = load i8*, i8** %limit_instrumented, align 4
Node:   %34 = load i8*, i8** %limit_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
Parameter 4 is not a pointer
 Analyzing call to NameStartChar inside parse_attributes_instrumented
 Analyzing call to state_pushtoken_instrumented inside parse_attributes_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1372 LoadStmt: [Var2413 <-- Var2325]	
   %33 = load i8*, i8** %name_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2413
   %33 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2413
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
Node 2325 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
Node 691 already visited
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
Node 919 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
Defs of param 3 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %33 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %33 = load i8*, i8** %name_instrumented, align 4
Node:   %33 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 4 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1380 LoadStmt: [Var2414 <-- Var2331]	
   %34 = load i8*, i8** %space_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2414
   %34 = load i8*, i8** %space_instrumented, align 4 
On edge 2331-->2414
[SelectDef] On node: ValVar ID: 2331
   %space_instrumented = alloca i8*, align 4 
On edge 2332-->2331
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2331
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2332 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 2407-->2331
[SelectDef] On node: ValVar ID: 2407
   %call11_instrumented = call i8* @str_rtrim_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2511-->2407
[SelectDef] On node: RetPN ID: 2511 unique return node for function str_rtrim_instrumented
On edge 2574-->2511
[SelectDef] On node: ValVar ID: 2574
   %18 = load i8*, i8** %retval_instrumented, align 4 
On edge 2521-->2574
[SelectDef] On node: ValVar ID: 2521
   %retval_instrumented = alloca i8*, align 4 
On edge 2522-->2521
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2521
	-  %retval_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4 
On edge 2562-->2521
On edge 2571-->2521
[SelectDef] On node: ValVar ID: 2571
   %17 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2523-->2571
[SelectDef] On node: ValVar ID: 2523
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2524-->2523
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2523
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2524 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2512-->2523
[SelectDef] On node: ValVar ID: 2512
 i8* %start { 0th arg str_rtrim_instrumented  }
On edge 2405-->2512
[SelectDef] On node: ValVar ID: 2405
   %29 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2405
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
Node 2325 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
Node 691 already visited
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
Node 919 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 2562
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2527-->2562
[SelectDef] On node: ValVar ID: 2527
   %it_instrumented = alloca i8*, align 4 
On edge 2528-->2527
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2527
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2545-->2527
On edge 2568-->2527
[SelectDef] On node: ValVar ID: 2568
   %16 = load i8*, i8** %prev_instrumented, align 4 
On edge 2529-->2568
[SelectDef] On node: ValVar ID: 2529
   %prev_instrumented = alloca i8*, align 4 
On edge 2530-->2529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2529
	-  %prev_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2530 (base object)
   %prev_instrumented = alloca i8*, align 4 
On edge 2554-->2529
[SelectDef] On node: ValVar ID: 2554
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %12, i32 -1 
On edge 2553-->2554
[SelectDef] On node: ValVar ID: 2553
   %12 = load i8*, i8** %it_instrumented, align 4 
On edge 2527-->2553
Node 2527 already visited
[SelectDef] On node: ValVar ID: 2545
   %9 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2525-->2545
[SelectDef] On node: ValVar ID: 2525
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2526-->2525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2525
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2526 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2513-->2525
[SelectDef] On node: ValVar ID: 2513
 i8* %end { 1st arg str_rtrim_instrumented  }
On edge 2406-->2513
[SelectDef] On node: ValVar ID: 2406
   %30 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2406
Node 2329 already visited
Defs of param 4 are 34
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Node:   %30 = load i8*, i8** %eq_instrumented, align 4
Node:   %30 = load i8*, i8** %eq_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %end.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %15 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %15, i8** %retval_instrumented, align 4
Node:   %18 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_rtrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  %prev_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_rtrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 221, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %start.addr_instrumented, align 4
  %11 = load i8*, i8** %it_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %12, i32 -1
  store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4
  %13 = load i8*, i8** %prev_instrumented, align 4
  %14 = load i8, i8* %13, align 1
  %conv_instrumented = zext i8 %14 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br i1 %tobool_instrumented, label %if.end3_instrumented, label %if.then2_instrumented

if.then2_instrumented:                            ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  store i8* %15, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end3_instrumented:                             ; preds = %for.body_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %if.end3_instrumented
  %16 = load i8*, i8** %prev_instrumented, align 4
  store i8* %16, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %for.cond_instrumented
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %17, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %for.end_instrumented, %if.then2_instrumented
  %18 = load i8*, i8** %retval_instrumented, align 4
  %19 = load i16, i16* @zbouncer_recursion_counter, align 2
  %20 = sext i16 %19 to i32
  %21 = add i32 %20, -1
  %22 = trunc i32 %21 to i16
  store i16 %22, i16* @zbouncer_recursion_counter, align 2
  ret i8* %18
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_rtrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  %prev_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_rtrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 221, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %start.addr_instrumented, align 4
  %11 = load i8*, i8** %it_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %12, i32 -1
  store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4
  %13 = load i8*, i8** %prev_instrumented, align 4
  %14 = load i8, i8* %13, align 1
  %conv_instrumented = zext i8 %14 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br i1 %tobool_instrumented, label %if.end3_instrumented, label %if.then2_instrumented

if.then2_instrumented:                            ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  store i8* %15, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end3_instrumented:                             ; preds = %for.body_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %if.end3_instrumented
  %16 = load i8*, i8** %prev_instrumented, align 4
  store i8* %16, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %for.cond_instrumented
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %17, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %for.end_instrumented, %if.then2_instrumented
  %18 = load i8*, i8** %retval_instrumented, align 4
  %19 = load i16, i16* @zbouncer_recursion_counter, align 2
  %20 = sext i16 %19 to i32
  %21 = add i32 %20, -1
  %22 = trunc i32 %21 to i16
  store i16 %22, i16* @zbouncer_recursion_counter, align 2
  ret i8* %18
}

Node:   %call11_instrumented = call i8* @str_rtrim_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Node:   %34 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Node:   %30 = load i8*, i8** %eq_instrumented, align 4
Node:   %30 = load i8*, i8** %eq_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %end.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %15 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %15, i8** %retval_instrumented, align 4
Node:   %18 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_rtrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  %prev_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_rtrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 221, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %start.addr_instrumented, align 4
  %11 = load i8*, i8** %it_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %12, i32 -1
  store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4
  %13 = load i8*, i8** %prev_instrumented, align 4
  %14 = load i8, i8* %13, align 1
  %conv_instrumented = zext i8 %14 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br i1 %tobool_instrumented, label %if.end3_instrumented, label %if.then2_instrumented

if.then2_instrumented:                            ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  store i8* %15, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end3_instrumented:                             ; preds = %for.body_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %if.end3_instrumented
  %16 = load i8*, i8** %prev_instrumented, align 4
  store i8* %16, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %for.cond_instrumented
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %17, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %for.end_instrumented, %if.then2_instrumented
  %18 = load i8*, i8** %retval_instrumented, align 4
  %19 = load i16, i16* @zbouncer_recursion_counter, align 2
  %20 = sext i16 %19 to i32
  %21 = add i32 %20, -1
  %22 = trunc i32 %21 to i16
  store i16 %22, i16* @zbouncer_recursion_counter, align 2
  ret i8* %18
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_rtrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  %prev_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_rtrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 221, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %start.addr_instrumented, align 4
  %11 = load i8*, i8** %it_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %12, i32 -1
  store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4
  %13 = load i8*, i8** %prev_instrumented, align 4
  %14 = load i8, i8* %13, align 1
  %conv_instrumented = zext i8 %14 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br i1 %tobool_instrumented, label %if.end3_instrumented, label %if.then2_instrumented

if.then2_instrumented:                            ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  store i8* %15, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end3_instrumented:                             ; preds = %for.body_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %if.end3_instrumented
  %16 = load i8*, i8** %prev_instrumented, align 4
  store i8* %16, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %for.cond_instrumented
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %17, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %for.end_instrumented, %if.then2_instrumented
  %18 = load i8*, i8** %retval_instrumented, align 4
  %19 = load i16, i16* @zbouncer_recursion_counter, align 2
  %20 = sext i16 %19 to i32
  %21 = add i32 %20, -1
  %22 = trunc i32 %21 to i16
  store i16 %22, i16* @zbouncer_recursion_counter, align 2
  ret i8* %18
}

Node:   %call11_instrumented = call i8* @str_rtrim_instrumented(i8* %29, i8* %30, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Node:   %34 = load i8*, i8** %space_instrumented, align 4
Node:   %34 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 4 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to str_findchr_instrumented inside parse_attributes_instrumented
Function str_findchr_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1389 LoadStmt: [Var2446 <-- Var2335]	
   %44 = load i8*, i8** %value_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0) 
On edge 1434-->2451
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
Node 2446 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
Node 919 already visited
Defs of param 0 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0)
Node:   store i8* %call30_instrumented, i8** %quot_instrumented, align 4
Node:   store i8* %call14_instrumented, i8** %quot_instrumented, align 4
Node:   %43 = load i8*, i8** %quot_instrumented, align 4
Node:   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1
Node:   store i8* %add.ptr28_instrumented, i8** %value_instrumented, align 4
Node:   %44 = load i8*, i8** %value_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0)
Node:   store i8* %call30_instrumented, i8** %quot_instrumented, align 4
Node:   store i8* %call14_instrumented, i8** %quot_instrumented, align 4
Node:   %43 = load i8*, i8** %quot_instrumented, align 4
Node:   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1
Node:   store i8* %add.ptr28_instrumented, i8** %value_instrumented, align 4
Node:   %44 = load i8*, i8** %value_instrumented, align 4
Node:   %44 = load i8*, i8** %value_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1365 LoadStmt: [Var2447 <-- Var2323]	
   %45 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2447
   %45 = load i8*, i8** %end_instrumented, align 4 
On edge 2323-->2447
[SelectDef] On node: ValVar ID: 2323
   %end_instrumented = alloca i8*, align 4 
On edge 2324-->2323
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2323
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2324 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 2357-->2323
[SelectDef] On node: ValVar ID: 2357
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 2353-->2357
[SelectDef] On node: ValVar ID: 2353
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 2352-->2353
[SelectDef] On node: ValVar ID: 2352
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 2351-->2352
[SelectDef] On node: ValVar ID: 2351
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2351
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
Defs of param 1 are 5
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %45 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %45 = load i8*, i8** %end_instrumented, align 4
Node:   %45 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
Parameter 4 is not a pointer
 Analyzing call to llvm.memcpy.p0i8.p0i8.i32 inside sxml_parse_instrumented
 Analyzing call to print_chartokens_instrumented inside print_prettyxml_instrumented
Function print_chartokens_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument buffer of print_prettyxml_instrumented
Parameter 0 is aliased with argument buffer
Parameter 1 is a pointer
Checking aliasing of arrayidx9_instrumented with argument buffer of print_prettyxml_instrumented
Checking aliasing of arrayidx9_instrumented with argument tokens of print_prettyxml_instrumented
Parameter 1 is aliased with argument tokens
Parameter 2 is not a pointer
Parameter 3 is not a pointer
Parameter 4 is not a pointer
 Analyzing call to state_pushtoken_instrumented inside parse_characters_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1171 LoadStmt: [Var1577 <-- Var1529]	
   %22 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1577
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1577
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1608
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->2451
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
Node 919 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
Node 1529 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
Defs of param 3 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
Node:   %22 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 4 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_characters_instrumented
Checking aliasing of  with argument args of parse_characters_instrumented
Checking aliasing of  with argument end of parse_characters_instrumented
Checking aliasing of  with argument state_id of parse_characters_instrumented
Checking aliasing of  with argument args_id of parse_characters_instrumented
Checking aliasing of  with argument end_id of parse_characters_instrumented
Def of param: LoadVFGNode ID: 1180 LoadStmt: [Var1578 <-- Var1535]	
   %23 = load i8*, i8** %ampr_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1578
   %23 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1578
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->2451
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
Node 919 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
Node 1535 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
Defs of param 4 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %23 = load i8*, i8** %ampr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Node:   %23 = load i8*, i8** %ampr_instrumented, align 4
Node:   %23 = load i8*, i8** %ampr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 4 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to memcmp inside str_findstr_instrumented
 Analyzing call to state_setpos_instrumented inside parse_attributes_instrumented
Function state_setpos_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1373 LoadStmt: [Var2500 <-- Var2325]	
   %69 = load i8*, i8** %name_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2500
   %69 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2500
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->2451
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
Node 2325 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
Node 691 already visited
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
Node 919 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
Defs of param 2 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %69 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %69 = load i8*, i8** %name_instrumented, align 4
Node:   %69 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 4 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to printf inside print_chartokens_instrumented
 Analyzing call to str_startswith_instrumented inside parse_instruction_instrumented
Function str_startswith_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1041 LoadStmt: [Var1152 <-- Var1044]	
   %42 = load i8*, i8** %quest_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1152
   %42 = load i8*, i8** %quest_instrumented, align 4 
On edge 1044-->1152
[SelectDef] On node: ValVar ID: 1044
   %quest_instrumented = alloca i8*, align 4 
On edge 1045-->1044
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1044
	-  %quest_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1045 (base object)
   %quest_instrumented = alloca i8*, align 4 
On edge 1141-->1044
[SelectDef] On node: ValVar ID: 1141
   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %37, i32 %39 
On edge 1137-->1141
[SelectDef] On node: ValVar ID: 1137
   %37 = load i8*, i8** %buffer16_instrumented, align 4 
On edge 1136-->1137
[SelectDef] On node: ValVar ID: 1136
   %buffer16_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %36, i32 0, i32 0 
On edge 1135-->1136
[SelectDef] On node: ValVar ID: 1135
   %36 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1135
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 0 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %37 = load i8*, i8** %buffer16_instrumented, align 4
Node:   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %37, i32 %39
Node:   store i8* %add.ptr18_instrumented, i8** %quest_instrumented, align 4
Node:   %42 = load i8*, i8** %quest_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %37 = load i8*, i8** %buffer16_instrumented, align 4
Node:   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %37, i32 %39
Node:   store i8* %add.ptr18_instrumented, i8** %quest_instrumented, align 4
Node:   %42 = load i8*, i8** %quest_instrumented, align 4
Node:   %42 = load i8*, i8** %quest_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: LoadVFGNode ID: 1056 LoadStmt: [Var1153 <-- Var1050]	
   %43 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1153
   %43 = load i8*, i8** %end_instrumented, align 4 
On edge 1050-->1153
[SelectDef] On node: ValVar ID: 1050
   %end_instrumented = alloca i8*, align 4 
On edge 1051-->1050
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1050
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1051 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1068-->1050
[SelectDef] On node: ValVar ID: 1068
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1064-->1068
[SelectDef] On node: ValVar ID: 1064
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1063-->1064
[SelectDef] On node: ValVar ID: 1063
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1062-->1063
[SelectDef] On node: ValVar ID: 1062
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1062
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 1 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %43 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %43 = load i8*, i8** %end_instrumented, align 4
Node:   %43 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_instruction_instrumented
Checking aliasing of  with argument args of parse_instruction_instrumented
Checking aliasing of  with argument state_id of parse_instruction_instrumented
Checking aliasing of  with argument args_id of parse_instruction_instrumented
Def of param: GepVFGNode ID: 585 GepStmt: [Var1154 <-- Var58]	
   %44 = getelementptr inbounds [3 x i8], [3 x i8]* @parse_instruction.ENDTAG, i32 0, i32 0 
[SelectDef] On node: ValVar ID: 1154
   %44 = getelementptr inbounds [3 x i8], [3 x i8]* @parse_instruction.ENDTAG, i32 0, i32 0 
On edge 58-->1154
[SelectDef] On node: ValVar ID: 58
 @parse_instruction.ENDTAG = internal constant [3 x i8] c"?>\00", align 1 { Glob  }
On edge 3-->58
Discarding edge
Defs of param 2 are 0
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to __assert_fail inside str_rtrim_instrumented
 Analyzing call to WhiteSpace inside str_rtrim_instrumented
 Analyzing call to parse_characters_instrumented inside parse_attrvalue_instrumented
Function parse_characters_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_attrvalue_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attrvalue_instrumented
Checking aliasing of  with argument args of parse_attrvalue_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is a pointer
Checking aliasing of  with argument state of parse_attrvalue_instrumented
Checking aliasing of  with argument args of parse_attrvalue_instrumented
Checking aliasing of  with argument end of parse_attrvalue_instrumented
Checking aliasing of  with argument state_id of parse_attrvalue_instrumented
Checking aliasing of  with argument args_id of parse_attrvalue_instrumented
Checking aliasing of  with argument end_id of parse_attrvalue_instrumented
Def of param: LoadVFGNode ID: 1423 LoadStmt: [Var2620 <-- Var2599]	
   %11 = load i8*, i8** %end.addr_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2620
   %11 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2599-->2620
[SelectDef] On node: ValVar ID: 2599
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2600-->2599
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2599
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2600 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2584-->2599
[SelectDef] On node: ValVar ID: 2584
 i8* %end { 2nd arg parse_attrvalue_instrumented  }
On edge 2465-->2584
[SelectDef] On node: ValVar ID: 2465
   %55 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2465
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->2451
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
Node 919 already visited
Defs of param 2 are 29
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call30_instrumented, i8** %quot_instrumented, align 4
Node:   %55 = load i8*, i8** %quot_instrumented, align 4
Node:   %55 = load i8*, i8** %quot_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %11 = load i8*, i8** %end.addr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call30_instrumented, i8** %quot_instrumented, align 4
Node:   %55 = load i8*, i8** %quot_instrumented, align 4
Node:   %55 = load i8*, i8** %quot_instrumented, align 4
Node: i8* %end
Node:   store i8* %end, i8** %end.addr_instrumented, align 4
Node:   %11 = load i8*, i8** %end.addr_instrumented, align 4
Node:   %11 = load i8*, i8** %end.addr_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 2 is 4 and has lenght 4
Parameter 3 is not a pointer
Parameter 4 is not a pointer
Parameter 5 is not a pointer
 Analyzing call to print_indent inside print_prettyxml_instrumented
 Analyzing call to str_ltrim_instrumented inside parse_attributes_instrumented
Function str_ltrim_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of add.ptr41_instrumented with argument state of parse_attributes_instrumented
Checking aliasing of add.ptr41_instrumented with argument args of parse_attributes_instrumented
Checking aliasing of add.ptr41_instrumented with argument state_id of parse_attributes_instrumented
Checking aliasing of add.ptr41_instrumented with argument args_id of parse_attributes_instrumented
Def of param: GepVFGNode ID: 808 GepStmt: [Var2477 <-- Var2476]	
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
[SelectDef] On node: ValVar ID: 2477
   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1 
On edge 2476-->2477
[SelectDef] On node: ValVar ID: 2476
   %58 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2476
[SelectDef] On node: ValVar ID: 2333
   %quot_instrumented = alloca i8*, align 4 
On edge 2334-->2333
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2333
	-  %quot_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
On edge 2419-->2333
On edge 2451-->2333
[SelectDef] On node: ValVar ID: 2451
   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->2451
[SelectDef] On node: RetPN ID: 1434 unique return node for function str_findchr_instrumented
On edge 1501-->1434
[SelectDef] On node: ValVar ID: 1501
   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ] 
On edge 1496-->1501
[SelectDef] On node: ValVar ID: 1496
   %19 = load i8*, i8** %it_instrumented, align 4 
On edge 1451-->1496
[SelectDef] On node: ValVar ID: 1451
   %it_instrumented = alloca i8*, align 4 
On edge 1452-->1451
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1451
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 1491-->1451
[SelectDef] On node: ValVar ID: 1491
   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7 
On edge 1484-->1491
[SelectDef] On node: ValVar ID: 1484
   %14 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 1445-->1484
[SelectDef] On node: ValVar ID: 1445
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1446-->1445
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1445
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 1435-->1445
[SelectDef] On node: ValVar ID: 1435
 i8* %start { 0th arg str_findchr_instrumented  }
On edge 823-->1435
On edge 1548-->1435
On edge 1606-->1435
On edge 1719-->1435
On edge 2393-->1435
On edge 2446-->1435
[SelectDef] On node: ValVar ID: 2446
   %44 = load i8*, i8** %value_instrumented, align 4 
On edge 2335-->2446
[SelectDef] On node: ValVar ID: 2335
   %value_instrumented = alloca i8*, align 4 
On edge 2336-->2335
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2335
	-  %value_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
On edge 2444-->2335
[SelectDef] On node: ValVar ID: 2444
   %add.ptr28_instrumented = getelementptr inbounds i8, i8* %43, i32 1 
On edge 2443-->2444
[SelectDef] On node: ValVar ID: 2443
   %43 = load i8*, i8** %quot_instrumented, align 4 
On edge 2333-->2443
Node 2333 already visited
[SelectDef] On node: ValVar ID: 2393
   %25 = load i8*, i8** %name_instrumented, align 4 
On edge 2325-->2393
[SelectDef] On node: ValVar ID: 2325
   %name_instrumented = alloca i8*, align 4 
On edge 2326-->2325
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2325
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 2361-->2325
On edge 2479-->2325
[SelectDef] On node: ValVar ID: 2479
   %call42_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr41_instrumented, i8* %59, i32 0, i32 0) 
On edge 919-->2479
[SelectDef] On node: RetPN ID: 919 unique return node for function str_ltrim_instrumented
On edge 972-->919
[SelectDef] On node: ValVar ID: 972
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->972
[SelectDef] On node: ValVar ID: 933
   %it_instrumented = alloca i8*, align 4 
On edge 934-->933
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 933
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 949-->933
On edge 969-->933
[SelectDef] On node: ValVar ID: 969
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 968-->969
[SelectDef] On node: ValVar ID: 968
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 933-->968
Node 933 already visited
[SelectDef] On node: ValVar ID: 949
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 929-->949
[SelectDef] On node: ValVar ID: 929
   %start.addr_instrumented = alloca i8*, align 4 
On edge 930-->929
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 929
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 920-->929
[SelectDef] On node: ValVar ID: 920
 i8* %start { 0th arg str_ltrim_instrumented  }
On edge 746-->920
On edge 1733-->920
On edge 2359-->920
On edge 2417-->920
On edge 2477-->920
Node 2477 already visited
[SelectDef] On node: ValVar ID: 2417
   %add.ptr13_instrumented = getelementptr inbounds i8, i8* %35, i32 1 
On edge 2416-->2417
[SelectDef] On node: ValVar ID: 2416
   %35 = load i8*, i8** %eq_instrumented, align 4 
On edge 2329-->2416
[SelectDef] On node: ValVar ID: 2329
   %eq_instrumented = alloca i8*, align 4 
On edge 2330-->2329
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2329
	-  %eq_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
On edge 2395-->2329
[SelectDef] On node: ValVar ID: 2395
   %call6_instrumented = call i8* @str_findchr_instrumented(i8* %25, i8* %26, i32 61, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->2395
Node 1434 already visited
[SelectDef] On node: ValVar ID: 2359
   %12 = load i8*, i8** %start_instrumented, align 4 
On edge 2321-->2359
[SelectDef] On node: ValVar ID: 2321
   %start_instrumented = alloca i8*, align 4 
On edge 2322-->2321
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2321
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 2349-->2321
[SelectDef] On node: ValVar ID: 2349
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 2345-->2349
[SelectDef] On node: ValVar ID: 2345
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 2344-->2345
[SelectDef] On node: ValVar ID: 2344
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 2343-->2344
[SelectDef] On node: ValVar ID: 2343
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2343
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1733
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1661-->1733
[SelectDef] On node: ValVar ID: 1661
   %space_instrumented = alloca i8*, align 4 
On edge 1662-->1661
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1661
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1731-->1661
[SelectDef] On node: ValVar ID: 1731
   %call13_instrumented = call i8* @str_find_notalnum_instrumented(i8* %27, i8* %28, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1731
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
Node 1040 already visited
[SelectDef] On node: ValVar ID: 746
   %16 = load i8*, i8** %start_instrumented, align 4 
On edge 695-->746
[SelectDef] On node: ValVar ID: 695
   %start_instrumented = alloca i8*, align 4 
On edge 696-->695
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 695
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 744-->695
[SelectDef] On node: ValVar ID: 744
   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15 
On edge 741-->744
[SelectDef] On node: ValVar ID: 741
   %14 = load i8*, i8** %buffer5_instrumented, align 4 
On edge 740-->741
[SelectDef] On node: ValVar ID: 740
   %buffer5_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->740
Node 691 already visited
[SelectDef] On node: ValVar ID: 2361
   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2361
Node 919 already visited
[SelectDef] On node: ValVar ID: 1719
   %23 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1719
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1606
   %33 = load i8*, i8** %ampr_instrumented, align 4 
On edge 1535-->1606
[SelectDef] On node: ValVar ID: 1535
   %ampr_instrumented = alloca i8*, align 4 
On edge 1536-->1535
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1535
	-  %ampr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
On edge 1550-->1535
[SelectDef] On node: ValVar ID: 1550
   %call_instrumented = call i8* @str_findchr_instrumented(i8* %8, i8* %9, i32 38, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1550
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1548
   %8 = load i8*, i8** %start_instrumented, align 4 
On edge 1529-->1548
[SelectDef] On node: ValVar ID: 1529
   %start_instrumented = alloca i8*, align 4 
On edge 1530-->1529
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1529
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1546-->1529
On edge 1623-->1529
[SelectDef] On node: ValVar ID: 1623
   %add.ptr20_instrumented = getelementptr inbounds i8, i8* %40, i32 1 
On edge 1622-->1623
[SelectDef] On node: ValVar ID: 1622
   %40 = load i8*, i8** %colon_instrumented, align 4 
On edge 1533-->1622
[SelectDef] On node: ValVar ID: 1533
   %colon_instrumented = alloca i8*, align 4 
On edge 1534-->1533
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1533
	-  %colon_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
On edge 1608-->1533
[SelectDef] On node: ValVar ID: 1608
   %call14_instrumented = call i8* @str_findchr_instrumented(i8* %33, i8* %34, i32 59, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 1434-->1608
Node 1434 already visited
[SelectDef] On node: ValVar ID: 1546
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1542-->1546
[SelectDef] On node: ValVar ID: 1542
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1541-->1542
[SelectDef] On node: ValVar ID: 1541
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1540-->1541
[SelectDef] On node: ValVar ID: 1540
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1540
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 823
   %36 = load i8*, i8** %start29_instrumented, align 4 
On edge 701-->823
[SelectDef] On node: ValVar ID: 701
   %start29_instrumented = alloca i8*, align 4 
On edge 702-->701
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 701
	-  %start29_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
On edge 821-->701
[SelectDef] On node: ValVar ID: 821
   %add.ptr32_instrumented = getelementptr inbounds i8, i8* %34, i32 %35 
On edge 818-->821
[SelectDef] On node: ValVar ID: 818
   %34 = load i8*, i8** %buffer30_instrumented, align 4 
On edge 817-->818
[SelectDef] On node: ValVar ID: 817
   %buffer30_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 
On edge 691-->817
Node 691 already visited
[SelectDef] On node: ValVar ID: 2419
   %call14_instrumented = call i8* @str_ltrim_instrumented(i8* %add.ptr13_instrumented, i8* %36, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 919-->2419
Node 919 already visited
Defs of param 0 are 28
Ignoring FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  since it's a dominator
Ignoring FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  since it's a dominator
Ignoring FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  since it's a dominator
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call30_instrumented, i8** %quot_instrumented, align 4
Node:   %58 = load i8*, i8** %quot_instrumented, align 4
Node:   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %12, i8* %13, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node:   %25 = load i8*, i8** %name_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %14 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
Node:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Node:   %19 = load i8*, i8** %it_instrumented, align 4
Node:   %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findchr_instrumented(i8* %start, i8* %end, i32 %c, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %c.addr_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i32 %c, i32* %c.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 119, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i32, i32* %c.addr_instrumented, align 4
  %cmp1_instrumented = icmp sle i32 0, %9
  br i1 %cmp1_instrumented, label %land.lhs.true_instrumented, label %if.else4_instrumented

land.lhs.true_instrumented:                       ; preds = %if.end_instrumented
  %10 = load i32, i32* %c.addr_instrumented, align 4
  %cmp2_instrumented = icmp sle i32 %10, 127
  br i1 %cmp2_instrumented, label %if.then3_instrumented, label %if.else4_instrumented

if.then3_instrumented:                            ; preds = %land.lhs.true_instrumented
  br label %if.end5_instrumented

if.else4_instrumented:                            ; preds = %land.lhs.true_instrumented, %if.end_instrumented
  %11 = getelementptr inbounds [19 x i8], [19 x i8]* @.str.13, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.str_findchr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 120, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end5_instrumented:                             ; preds = %if.then3_instrumented
  %14 = load i8*, i8** %start.addr_instrumented, align 4
  %15 = load i32, i32* %c.addr_instrumented, align 4
  %16 = load i8*, i8** %end.addr_instrumented, align 4
  %17 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %17 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %call_instrumented = call i8* @memchr(i8* %14, i32 %15, i32 %sub.ptr.sub_instrumented) #7
  store i8* %call_instrumented, i8** %it_instrumented, align 4
  %18 = load i8*, i8** %it_instrumented, align 4
  %cmp6_instrumented = icmp ne i8* %18, null
  br i1 %cmp6_instrumented, label %cond.true_instrumented, label %cond.false_instrumented

cond.true_instrumented:                           ; preds = %if.end5_instrumented
  %19 = load i8*, i8** %it_instrumented, align 4
  br label %cond.end_instrumented

cond.false_instrumented:                          ; preds = %if.end5_instrumented
  %20 = load i8*, i8** %end.addr_instrumented, align 4
  br label %cond.end_instrumented

cond.end_instrumented:                            ; preds = %cond.false_instrumented, %cond.true_instrumented
  %cond_instrumented = phi i8* [ %19, %cond.true_instrumented ], [ %20, %cond.false_instrumented ]
  %21 = load i16, i16* @zbouncer_recursion_counter, align 2
  %22 = sext i16 %21 to i32
  %23 = add i32 %22, -1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* @zbouncer_recursion_counter, align 2
  ret i8* %cond_instrumented

UnifiedUnreachableBlock:                          ; preds = %if.else4_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call30_instrumented = call i8* @str_findchr_instrumented(i8* %44, i8* %45, i32 %conv29_instrumented, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call30_instrumented, i8** %quot_instrumented, align 4
Node:   %58 = load i8*, i8** %quot_instrumented, align 4
Node:   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1
Node:   %add.ptr41_instrumented = getelementptr inbounds i8, i8* %58, i32 1
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param add.ptr41_instrumented number 0 is 4 and has lenght 4
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_attributes_instrumented
Checking aliasing of  with argument args of parse_attributes_instrumented
Checking aliasing of  with argument state_id of parse_attributes_instrumented
Checking aliasing of  with argument args_id of parse_attributes_instrumented
Def of param: LoadVFGNode ID: 1367 LoadStmt: [Var2478 <-- Var2323]	
   %59 = load i8*, i8** %end_instrumented, align 4 
[SelectDef] On node: ValVar ID: 2478
   %59 = load i8*, i8** %end_instrumented, align 4 
On edge 2323-->2478
[SelectDef] On node: ValVar ID: 2323
   %end_instrumented = alloca i8*, align 4 
On edge 2324-->2323
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2323
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2324 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 2357-->2323
[SelectDef] On node: ValVar ID: 2357
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 2353-->2357
[SelectDef] On node: ValVar ID: 2353
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 2352-->2353
[SelectDef] On node: ValVar ID: 2352
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 2351-->2352
[SelectDef] On node: ValVar ID: 2351
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2351
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
Defs of param 1 are 5
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %59 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %9 = load i8*, i8** %buffer1_instrumented, align 4
Node:   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11
Node:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Node:   %59 = load i8*, i8** %end_instrumented, align 4
Node:   %59 = load i8*, i8** %end_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 1 is 4 and has lenght 4
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to print_tokenvalue_instrumented inside print_prettyxml_instrumented
Function print_tokenvalue_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument buffer of print_prettyxml_instrumented
Parameter 0 is aliased with argument buffer
Parameter 1 is a pointer
Checking aliasing of arrayidx_instrumented with argument buffer of print_prettyxml_instrumented
Checking aliasing of arrayidx_instrumented with argument tokens of print_prettyxml_instrumented
Parameter 1 is aliased with argument tokens
Parameter 2 is not a pointer
Parameter 3 is not a pointer
 Analyzing call to state_pushtoken_instrumented inside parse_comment_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Checking aliasing of  with argument state_id of parse_comment_instrumented
Checking aliasing of  with argument args_id of parse_comment_instrumented
Def of param: LoadVFGNode ID: 1239 LoadStmt: [Var1834 <-- Var1778]	
   %25 = load i8*, i8** %start_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1834
   %25 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1834
[SelectDef] On node: ValVar ID: 1778
   %start_instrumented = alloca i8*, align 4 
On edge 1779-->1778
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1778
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1790-->1778
On edge 1819-->1778
[SelectDef] On node: ValVar ID: 1819
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 4 
On edge 1818-->1819
[SelectDef] On node: ValVar ID: 1818
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1818
Node 1778 already visited
[SelectDef] On node: ValVar ID: 1790
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1786-->1790
[SelectDef] On node: ValVar ID: 1786
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1785-->1786
[SelectDef] On node: ValVar ID: 1785
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1784-->1785
[SelectDef] On node: ValVar ID: 1784
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1784
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 3 are 3
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 4
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %25 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 4
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %25 = load i8*, i8** %start_instrumented, align 4
Node:   %25 = load i8*, i8** %start_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 4 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_comment_instrumented
Checking aliasing of  with argument args of parse_comment_instrumented
Checking aliasing of  with argument state_id of parse_comment_instrumented
Checking aliasing of  with argument args_id of parse_comment_instrumented
Def of param: LoadVFGNode ID: 1233 LoadStmt: [Var1835 <-- Var1776]	
   %26 = load i8*, i8** %dash_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1835
   %26 = load i8*, i8** %dash_instrumented, align 4 
On edge 1776-->1835
[SelectDef] On node: ValVar ID: 1776
   %dash_instrumented = alloca i8*, align 4 
On edge 1777-->1776
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1776
	-  %dash_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1777 (base object)
   %dash_instrumented = alloca i8*, align 4 
On edge 1824-->1776
[SelectDef] On node: ValVar ID: 1824
   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2009-->1824
[SelectDef] On node: RetPN ID: 2009 unique return node for function str_findstr_instrumented
On edge 2112-->2009
[SelectDef] On node: ValVar ID: 2112
   %31 = load i8*, i8** %retval_instrumented, align 4 
On edge 2021-->2112
[SelectDef] On node: ValVar ID: 2021
   %retval_instrumented = alloca i8*, align 4 
On edge 2022-->2021
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2021
	-  %retval_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4 
On edge 2101-->2021
On edge 2109-->2021
[SelectDef] On node: ValVar ID: 2109
   %30 = load i8*, i8** %end.addr_instrumented, align 4 
On edge 2025-->2109
[SelectDef] On node: ValVar ID: 2025
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2026-->2025
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2025
	-  %end.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2026 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
On edge 2011-->2025
[SelectDef] On node: ValVar ID: 2011
 i8* %end { 1st arg str_findstr_instrumented  }
On edge 1237-->2011
On edge 1822-->2011
On edge 1914-->2011
[SelectDef] On node: ValVar ID: 1914
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1872-->1914
[SelectDef] On node: ValVar ID: 1872
   %end_instrumented = alloca i8*, align 4 
On edge 1873-->1872
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1872
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1890-->1872
[SelectDef] On node: ValVar ID: 1890
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1886-->1890
[SelectDef] On node: ValVar ID: 1886
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1885-->1886
[SelectDef] On node: ValVar ID: 1885
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1884-->1885
[SelectDef] On node: ValVar ID: 1884
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1884
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1822
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1780-->1822
[SelectDef] On node: ValVar ID: 1780
   %end_instrumented = alloca i8*, align 4 
On edge 1781-->1780
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1780
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1798-->1780
[SelectDef] On node: ValVar ID: 1798
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1794-->1798
[SelectDef] On node: ValVar ID: 1794
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1793-->1794
[SelectDef] On node: ValVar ID: 1793
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1792-->1793
[SelectDef] On node: ValVar ID: 1792
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1792
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1237
   %19 = load i8*, i8** %end_instrumented, align 4 
On edge 1194-->1237
[SelectDef] On node: ValVar ID: 1194
   %end_instrumented = alloca i8*, align 4 
On edge 1195-->1194
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1194
	-  %end_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4 
On edge 1212-->1194
[SelectDef] On node: ValVar ID: 1212
   %add.ptr2_instrumented = getelementptr inbounds i8, i8* %9, i32 %11 
On edge 1208-->1212
[SelectDef] On node: ValVar ID: 1208
   %9 = load i8*, i8** %buffer1_instrumented, align 4 
On edge 1207-->1208
[SelectDef] On node: ValVar ID: 1207
   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %8, i32 0, i32 0 
On edge 1206-->1207
[SelectDef] On node: ValVar ID: 1206
   %8 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1206
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 2101
   %28 = load i8*, i8** %it_instrumented, align 4 
On edge 2033-->2101
[SelectDef] On node: ValVar ID: 2033
   %it_instrumented = alloca i8*, align 4 
On edge 2034-->2033
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2033
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2034 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2088-->2033
[SelectDef] On node: ValVar ID: 2088
   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7 
On edge 2078-->2088
[SelectDef] On node: ValVar ID: 2078
   %19 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2023-->2078
[SelectDef] On node: ValVar ID: 2023
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2024-->2023
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2023
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2010-->2023
On edge 2106-->2023
[SelectDef] On node: ValVar ID: 2106
   %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1 
On edge 2105-->2106
[SelectDef] On node: ValVar ID: 2105
   %29 = load i8*, i8** %it_instrumented, align 4 
On edge 2033-->2105
Node 2033 already visited
[SelectDef] On node: ValVar ID: 2010
 i8* %start { 0th arg str_findstr_instrumented  }
On edge 1236-->2010
On edge 1821-->2010
On edge 1913-->2010
[SelectDef] On node: ValVar ID: 1913
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1913
[SelectDef] On node: ValVar ID: 1870
   %start_instrumented = alloca i8*, align 4 
On edge 1871-->1870
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1870
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1882-->1870
On edge 1911-->1870
[SelectDef] On node: ValVar ID: 1911
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1910-->1911
[SelectDef] On node: ValVar ID: 1910
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1870-->1910
Node 1870 already visited
[SelectDef] On node: ValVar ID: 1882
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1878-->1882
[SelectDef] On node: ValVar ID: 1878
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1877-->1878
[SelectDef] On node: ValVar ID: 1877
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1876-->1877
[SelectDef] On node: ValVar ID: 1876
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1876
Node 1866 already visited
[SelectDef] On node: ValVar ID: 1821
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1821
[SelectDef] On node: ValVar ID: 1778
   %start_instrumented = alloca i8*, align 4 
On edge 1779-->1778
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1778
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1790-->1778
On edge 1819-->1778
[SelectDef] On node: ValVar ID: 1819
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 4 
On edge 1818-->1819
[SelectDef] On node: ValVar ID: 1818
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1778-->1818
Node 1778 already visited
[SelectDef] On node: ValVar ID: 1790
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1786-->1790
[SelectDef] On node: ValVar ID: 1786
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1785-->1786
[SelectDef] On node: ValVar ID: 1785
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1784-->1785
[SelectDef] On node: ValVar ID: 1784
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1784
Node 1774 already visited
[SelectDef] On node: ValVar ID: 1236
   %18 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1236
[SelectDef] On node: ValVar ID: 1192
   %start_instrumented = alloca i8*, align 4 
On edge 1193-->1192
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1192
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1204-->1192
On edge 1234-->1192
[SelectDef] On node: ValVar ID: 1234
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9 
On edge 1233-->1234
[SelectDef] On node: ValVar ID: 1233
   %17 = load i8*, i8** %start_instrumented, align 4 
On edge 1192-->1233
Node 1192 already visited
[SelectDef] On node: ValVar ID: 1204
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1200-->1204
[SelectDef] On node: ValVar ID: 1200
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1199-->1200
[SelectDef] On node: ValVar ID: 1199
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1198-->1199
[SelectDef] On node: ValVar ID: 1198
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1198
Node 1188 already visited
Defs of param 4 are 15
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call6_instrumented, i8** %dash_instrumented, align 4
Node:   %26 = load i8*, i8** %dash_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %17 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %17, i32 9
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node:   %18 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %19 = load i8*, i8** %start.addr_instrumented, align 4
Node:   %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
Node:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Node:   %28 = load i8*, i8** %it_instrumented, align 4
Node:   store i8* %28, i8** %retval_instrumented, align 4
Node:   %31 = load i8*, i8** %retval_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_findstr_instrumented(i8* %start, i8* %end, i8* %needle, i32 %start_id, i32 %end_id, i32 %needle_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %retval_instrumented = alloca i8*, align 4
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %needle.addr_instrumented = alloca i8*, align 4
  %needlelen_instrumented = alloca i32, align 4
  %first_instrumented = alloca i32, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  store i8* %needle, i8** %needle.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 130, i8* %8) #6
  br label %UnifiedUnreachableBlock

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %needle.addr_instrumented, align 4
  %call_instrumented = call i32 @strlen(i8* %9) #7
  store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
  %10 = load i32, i32* %needlelen_instrumented, align 4
  %cmp1_instrumented = icmp ult i32 0, %10
  br i1 %cmp1_instrumented, label %if.then2_instrumented, label %if.else3_instrumented

if.then2_instrumented:                            ; preds = %if.end_instrumented
  br label %if.end4_instrumented

if.else3_instrumented:                            ; preds = %if.end_instrumented
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* @.str.12, i32 0, i32 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %13 = getelementptr inbounds [66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.str_findstr, i32 0, i32 0
  call void @__assert_fail(i8* %11, i8* %12, i32 133, i8* %13) #6
  br label %UnifiedUnreachableBlock

if.end4_instrumented:                             ; preds = %if.then2_instrumented
  %14 = load i8*, i8** %needle.addr_instrumented, align 4
  %arrayidx_instrumented = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx_instrumented, align 1
  %conv_instrumented = zext i8 %15 to i32
  store i32 %conv_instrumented, i32* %first_instrumented, align 4
  br label %while.cond_instrumented

while.cond_instrumented:                          ; preds = %if.end17_instrumented, %if.end4_instrumented
  %16 = load i8*, i8** %start.addr_instrumented, align 4
  %17 = load i32, i32* %needlelen_instrumented, align 4
  %add.ptr_instrumented = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp5_instrumented = icmp ule i8* %add.ptr_instrumented, %18
  br i1 %cmp5_instrumented, label %while.body_instrumented, label %while.end_instrumented

while.body_instrumented:                          ; preds = %while.cond_instrumented
  %19 = load i8*, i8** %start.addr_instrumented, align 4
  %20 = load i32, i32* %first_instrumented, align 4
  %21 = load i8*, i8** %end.addr_instrumented, align 4
  %22 = load i8*, i8** %start.addr_instrumented, align 4
  %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %21 to i32
  %sub.ptr.rhs.cast_instrumented = ptrtoint i8* %22 to i32
  %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
  %23 = load i32, i32* %needlelen_instrumented, align 4
  %sub_instrumented = sub i32 %23, 1
  %sub7_instrumented = sub i32 %sub.ptr.sub_instrumented, %sub_instrumented
  %call8_instrumented = call i8* @memchr(i8* %19, i32 %20, i32 %sub7_instrumented) #7
  store i8* %call8_instrumented, i8** %it_instrumented, align 4
  %24 = load i8*, i8** %it_instrumented, align 4
  %cmp9_instrumented = icmp eq i8* %24, null
  br i1 %cmp9_instrumented, label %if.then11_instrumented, label %if.end12_instrumented

if.then11_instrumented:                           ; preds = %while.body_instrumented
  br label %while.end_instrumented

if.end12_instrumented:                            ; preds = %while.body_instrumented
  %25 = load i8*, i8** %it_instrumented, align 4
  %26 = load i8*, i8** %needle.addr_instrumented, align 4
  %27 = load i32, i32* %needlelen_instrumented, align 4
  %call13_instrumented = call i32 @memcmp(i8* %25, i8* %26, i32 %27) #7
  %cmp14_instrumented = icmp eq i32 %call13_instrumented, 0
  br i1 %cmp14_instrumented, label %if.then16_instrumented, label %if.end17_instrumented

if.then16_instrumented:                           ; preds = %if.end12_instrumented
  %28 = load i8*, i8** %it_instrumented, align 4
  store i8* %28, i8** %retval_instrumented, align 4
  br label %return_instrumented

if.end17_instrumented:                            ; preds = %if.end12_instrumented
  %29 = load i8*, i8** %it_instrumented, align 4
  %add.ptr18_instrumented = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
  br label %while.cond_instrumented

while.end_instrumented:                           ; preds = %if.then11_instrumented, %while.cond_instrumented
  %30 = load i8*, i8** %end.addr_instrumented, align 4
  store i8* %30, i8** %retval_instrumented, align 4
  br label %return_instrumented

return_instrumented:                              ; preds = %while.end_instrumented, %if.then16_instrumented
  %31 = load i8*, i8** %retval_instrumented, align 4
  %32 = load i16, i16* @zbouncer_recursion_counter, align 2
  %33 = sext i16 %32 to i32
  %34 = add i32 %33, -1
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* @zbouncer_recursion_counter, align 2
  ret i8* %31

UnifiedUnreachableBlock:                          ; preds = %if.else3_instrumented, %if.else_instrumented
  unreachable
}

Node:   %call6_instrumented = call i8* @str_findstr_instrumented(i8* %18, i8* %19, i8* %20, i32 0, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call6_instrumented, i8** %dash_instrumented, align 4
Node:   %26 = load i8*, i8** %dash_instrumented, align 4
Node:   %26 = load i8*, i8** %dash_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 4 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to print_indent inside print_prettyxml_instrumented
 Analyzing call to llvm.memcpy.p0i8.p0i8.i32 inside sxml_parse_instrumented
 Analyzing call to state_pushtoken_instrumented inside parse_start_instrumented
Function state_pushtoken_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Parameter 0 is aliased with argument state
Parameter 1 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Parameter 1 is aliased with argument args
Parameter 2 is not a pointer
Parameter 3 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Checking aliasing of  with argument state_id of parse_start_instrumented
Checking aliasing of  with argument args_id of parse_start_instrumented
Def of param: LoadVFGNode ID: 1114 LoadStmt: [Var1361 <-- Var1289]	
   %28 = load i8*, i8** %name_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1361
   %28 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1361
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Defs of param 3 are 4
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1
Node:   store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4
Node:   %28 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1
Node:   store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4
Node:   %28 = load i8*, i8** %name_instrumented, align 4
Node:   %28 = load i8*, i8** %name_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 3 is 4 and has lenght 4
Parameter 4 is a pointer
Checking aliasing of  with argument state of parse_start_instrumented
Checking aliasing of  with argument args of parse_start_instrumented
Checking aliasing of  with argument state_id of parse_start_instrumented
Checking aliasing of  with argument args_id of parse_start_instrumented
Def of param: LoadVFGNode ID: 1117 LoadStmt: [Var1362 <-- Var1291]	
   %29 = load i8*, i8** %space_instrumented, align 4 
[SelectDef] On node: ValVar ID: 1362
   %29 = load i8*, i8** %space_instrumented, align 4 
On edge 1291-->1362
[SelectDef] On node: ValVar ID: 1291
   %space_instrumented = alloca i8*, align 4 
On edge 1292-->1291
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1291
	-  %space_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1292 (base object)
   %space_instrumented = alloca i8*, align 4 
On edge 1351-->1291
[SelectDef] On node: ValVar ID: 1351
   %call10_instrumented = call i8* @str_find_notalnum_instrumented(i8* %22, i8* %23, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3 
On edge 2245-->1351
[SelectDef] On node: RetPN ID: 2245 unique return node for function str_find_notalnum_instrumented
On edge 2298-->2245
[SelectDef] On node: ValVar ID: 2298
   %16 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2298
[SelectDef] On node: ValVar ID: 2259
   %it_instrumented = alloca i8*, align 4 
On edge 2260-->2259
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2259
	-  %it_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
On edge 2275-->2259
On edge 2295-->2259
[SelectDef] On node: ValVar ID: 2295
   %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1 
On edge 2294-->2295
[SelectDef] On node: ValVar ID: 2294
   %15 = load i8*, i8** %it_instrumented, align 4 
On edge 2259-->2294
Node 2259 already visited
[SelectDef] On node: ValVar ID: 2275
   %9 = load i8*, i8** %start.addr_instrumented, align 4 
On edge 2255-->2275
[SelectDef] On node: ValVar ID: 2255
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2256-->2255
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2255
	-  %start.addr_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
On edge 2246-->2255
[SelectDef] On node: ValVar ID: 2246
 i8* %start { 0th arg str_find_notalnum_instrumented  }
On edge 1099-->2246
On edge 1349-->2246
On edge 1729-->2246
[SelectDef] On node: ValVar ID: 1729
   %27 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1729
[SelectDef] On node: ValVar ID: 1663
   %start_instrumented = alloca i8*, align 4 
On edge 1664-->1663
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1663
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1675-->1663
On edge 1717-->1663
[SelectDef] On node: ValVar ID: 1717
   %add.ptr7_instrumented = getelementptr inbounds i8, i8* %22, i32 2 
On edge 1716-->1717
[SelectDef] On node: ValVar ID: 1716
   %22 = load i8*, i8** %start_instrumented, align 4 
On edge 1663-->1716
Node 1663 already visited
[SelectDef] On node: ValVar ID: 1675
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1671-->1675
[SelectDef] On node: ValVar ID: 1671
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1670-->1671
[SelectDef] On node: ValVar ID: 1670
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1669-->1670
[SelectDef] On node: ValVar ID: 1669
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1669
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1349
   %22 = load i8*, i8** %name_instrumented, align 4 
On edge 1289-->1349
[SelectDef] On node: ValVar ID: 1289
   %name_instrumented = alloca i8*, align 4 
On edge 1290-->1289
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1289
	-  %name_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
On edge 1347-->1289
[SelectDef] On node: ValVar ID: 1347
   %add.ptr9_instrumented = getelementptr inbounds i8, i8* %21, i32 1 
On edge 1346-->1347
[SelectDef] On node: ValVar ID: 1346
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1293-->1346
[SelectDef] On node: ValVar ID: 1293
   %start_instrumented = alloca i8*, align 4 
On edge 1294-->1293
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1293
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1305-->1293
[SelectDef] On node: ValVar ID: 1305
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1301-->1305
[SelectDef] On node: ValVar ID: 1301
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1300-->1301
[SelectDef] On node: ValVar ID: 1300
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1299-->1300
[SelectDef] On node: ValVar ID: 1299
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1299
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
Node 691 already visited
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 1099
   %21 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1099
[SelectDef] On node: ValVar ID: 1048
   %start_instrumented = alloca i8*, align 4 
On edge 1049-->1048
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1048
	-  %start_instrumented = alloca i8*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
On edge 1060-->1048
On edge 1097-->1048
[SelectDef] On node: ValVar ID: 1097
   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2 
On edge 1096-->1097
[SelectDef] On node: ValVar ID: 1096
   %20 = load i8*, i8** %start_instrumented, align 4 
On edge 1048-->1096
Node 1048 already visited
[SelectDef] On node: ValVar ID: 1060
   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7 
On edge 1056-->1060
[SelectDef] On node: ValVar ID: 1056
   %5 = load i8*, i8** %buffer_instrumented, align 4 
On edge 1055-->1056
[SelectDef] On node: ValVar ID: 1055
   %buffer_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %4, i32 0, i32 0 
On edge 1054-->1055
[SelectDef] On node: ValVar ID: 1054
   %4 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1054
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
Defs of param 4 are 11
FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
ISSUE: Definition of FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4  is not present in trace
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call10_instrumented = call i8* @str_find_notalnum_instrumented(i8* %22, i8* %23, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call10_instrumented, i8** %space_instrumented, align 4
Node:   %29 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %5 = load i8*, i8** %buffer_instrumented, align 4
Node:   %add.ptr_instrumented = getelementptr inbounds i8, i8* %5, i32 %7
Node:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Node:   %20 = load i8*, i8** %start_instrumented, align 4
Node:   %add.ptr5_instrumented = getelementptr inbounds i8, i8* %20, i32 2
Node:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node:   %21 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_find_notalnum_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [58 x i8], [58 x i8]* @__PRETTY_FUNCTION__.str_find_notalnum, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 236, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @NameChar(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call10_instrumented = call i8* @str_find_notalnum_instrumented(i8* %22, i8* %23, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call10_instrumented, i8** %space_instrumented, align 4
Node:   %29 = load i8*, i8** %space_instrumented, align 4
Node:   %29 = load i8*, i8** %space_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Defs of param  number 4 is 4 and has lenght 4
Parameter 5 is not a pointer
Parameter 6 is not a pointer
Parameter 7 is not a pointer
Parameter 8 is not a pointer
 Analyzing call to print_tokenvalue_instrumented inside print_prettyxml_instrumented
Function print_tokenvalue_instrumentedis instrumented
Parameter 0 is a pointer
Checking aliasing of  with argument buffer of print_prettyxml_instrumented
Parameter 0 is aliased with argument buffer
Parameter 1 is a pointer
Checking aliasing of  with argument buffer of print_prettyxml_instrumented
Checking aliasing of  with argument tokens of print_prettyxml_instrumented
Parameter 1 is aliased with argument tokens
Parameter 2 is not a pointer
Parameter 3 is not a pointer
Checking function hook_exit
Checking function llvm.memcpy.p0i8.p0i8.i32
Checking function __assert_fail
Checking function strlen
Checking function memchr
Checking function memcmp
Checking function NameStartChar
Checking function NameChar
Checking function WhiteSpace
Checking function main
Checking function gettimeofday
Checking function __isoc99_scanf
Checking function llvm.memmove.p0i8.p0i8.i32
Checking function fread
Checking function fprintf
Checking function sprintf
Checking function printf
Checking function print_indent
Checking function puts
Checking function wrapper_scanf
Checking function sxml_init_instrumented
Checking function sxml_parse_instrumented
Checking function str_ltrim_instrumented
Checking function state_setpos_instrumented
Checking function parse_instruction_instrumented
Checking function parse_doctype_instrumented
Checking function parse_start_instrumented
Checking function str_findchr_instrumented
Checking function parse_characters_instrumented
Checking function parse_end_instrumented
Checking function parse_comment_instrumented
Checking function parse_cdata_instrumented
Checking function str_startswith_instrumented
Checking function str_findstr_instrumented
Checking function state_pushtoken_instrumented
Checking function str_find_notalnum_instrumented
Checking function parse_attributes_instrumented
Checking function str_rtrim_instrumented
Checking function parse_attrvalue_instrumented
Checking function print_prettyxml_instrumented
Checking function count_lines_instrumented
Checking function print_tokenvalue_instrumented
Checking function print_chartokens_instrumented
Checking function hook_exit
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i16 %7, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %7, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function llvm.memcpy.p0i8.p0i8.i32
Checking function __assert_fail
Checking function strlen
Checking function memchr
Checking function memcmp
Checking function NameStartChar
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %c, i32* %c.addr, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 162
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 163
[SelectDef] On node: FIObjVar ID: 163 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 163 (base object)
   %c.addr = alloca i32, align 4  to result
Found:
	- NodeId: 163 Instr:   %c.addr = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval, align 4
Target of   store i32 1, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 160
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 161
[SelectDef] On node: FIObjVar ID: 161 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 161 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 161 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 %lor.ext, i32* %retval, align 4
Target of   store i32 %lor.ext, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 160
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 161
[SelectDef] On node: FIObjVar ID: 161 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 161 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 161 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i16 %17, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %17, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function NameChar
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %c, i32* %c.addr, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 222
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 223
[SelectDef] On node: FIObjVar ID: 223 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 223 (base object)
   %c.addr = alloca i32, align 4  to result
Found:
	- NodeId: 223 Instr:   %c.addr = alloca i32, align 4
Finding defs for:   store i16 %19, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %19, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function WhiteSpace
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %c, i32* %c.addr, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 289
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 290
[SelectDef] On node: FIObjVar ID: 290 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 290 (base object)
   %c.addr = alloca i32, align 4  to result
Found:
	- NodeId: 290 Instr:   %c.addr = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval, align 4
Target of   store i32 1, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 287
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 288
[SelectDef] On node: FIObjVar ID: 288 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 288 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 288 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval, align 4
Target of   store i32 0, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 287
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 288
[SelectDef] On node: FIObjVar ID: 288 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 288 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 288 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i16 %9, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %9, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function main
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 0, i32* %retval, align 4
Target of   store i32 0, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 316
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 317
[SelectDef] On node: FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 317 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 %argc, i32* %argc.addr, align 4
Target of   store i32 %argc, i32* %argc.addr, align 4 is   %argc.addr = alloca i32, align 4 with PAG id 318
Checking PagEdge node associated to:   %argc.addr = alloca i32, align 4
Visist starts at PAGNode 319
[SelectDef] On node: FIObjVar ID: 319 (base object)
   %argc.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 319 (base object)
   %argc.addr = alloca i32, align 4  to result
Found:
	- NodeId: 319 Instr:   %argc.addr = alloca i32, align 4
Finding defs for:   store i8** %argv, i8*** %argv.addr, align 4
Target of   store i8** %argv, i8*** %argv.addr, align 4 is   %argv.addr = alloca i8**, align 4 with PAG id 320
Checking PagEdge node associated to:   %argv.addr = alloca i8**, align 4
Visist starts at PAGNode 321
[SelectDef] On node: FIObjVar ID: 321 (base object)
   %argv.addr = alloca i8**, align 4 
Start node is a Def already, adding FIObjVar ID: 321 (base object)
   %argv.addr = alloca i8**, align 4  to result
Found:
	- NodeId: 321 Instr:   %argv.addr = alloca i8**, align 4
Finding defs for:   store i32 0, i32* %bufferlen, align 4
Target of   store i32 0, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 328
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 329
[SelectDef] On node: FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4  to result
Found:
	- NodeId: 329 Instr:   %bufferlen = alloca i32, align 4
Finding defs for:   store i32 0, i32* %indent, align 4
Target of   store i32 0, i32* %indent, align 4 is   %indent = alloca i32, align 4 with PAG id 332
Checking PagEdge node associated to:   %indent = alloca i32, align 4
Visist starts at PAGNode 333
[SelectDef] On node: FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4  to result
Found:
	- NodeId: 333 Instr:   %indent = alloca i32, align 4
Finding defs for:   store i32 1, i32* %lineno, align 4
Target of   store i32 1, i32* %lineno, align 4 is   %lineno = alloca i32, align 4 with PAG id 334
Checking PagEdge node associated to:   %lineno = alloca i32, align 4
Visist starts at PAGNode 335
[SelectDef] On node: FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4  to result
Found:
	- NodeId: 335 Instr:   %lineno = alloca i32, align 4
Finding defs for:   store %struct._IO_FILE* %4, %struct._IO_FILE** %file, align 4
Target of   store %struct._IO_FILE* %4, %struct._IO_FILE** %file, align 4 is   %file = alloca %struct._IO_FILE*, align 4 with PAG id 338
Checking PagEdge node associated to:   %file = alloca %struct._IO_FILE*, align 4
Visist starts at PAGNode 339
[SelectDef] On node: FIObjVar ID: 339 (base object)
   %file = alloca %struct._IO_FILE*, align 4 
Start node is a Def already, adding FIObjVar ID: 339 (base object)
   %file = alloca %struct._IO_FILE*, align 4  to result
Found:
	- NodeId: 339 Instr:   %file = alloca %struct._IO_FILE*, align 4
Finding defs for:   store i32 %call4, i32* %err, align 4
Target of   store i32 %call4, i32* %err, align 4 is   %err = alloca i32, align 4 with PAG id 342
Checking PagEdge node associated to:   %err = alloca i32, align 4
Visist starts at PAGNode 343
[SelectDef] On node: FIObjVar ID: 343 (base object)
   %err = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 343 (base object)
   %err = alloca i32, align 4  to result
Found:
	- NodeId: 343 Instr:   %err = alloca i32, align 4
Finding defs for:   store i32 0, i32* %ntokens7, align 4
Target of   store i32 0, i32* %ntokens7, align 4 is   %ntokens7 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1 with PAG id 400
Checking PagEdge node associated to:   %ntokens7 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1
Visist starts at PAGNode 340
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
Finding defs for:   store i32 0, i32* %ntokens12, align 4
Target of   store i32 0, i32* %ntokens12, align 4 is   %ntokens12 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1 with PAG id 409
Checking PagEdge node associated to:   %ntokens12 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1
Visist starts at PAGNode 340
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
Finding defs for:   store i32 %add, i32* %lineno, align 4
Target of   store i32 %add, i32* %lineno, align 4 is   %lineno = alloca i32, align 4 with PAG id 334
Checking PagEdge node associated to:   %lineno = alloca i32, align 4
Visist starts at PAGNode 335
[SelectDef] On node: FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4  to result
Found:
	- NodeId: 335 Instr:   %lineno = alloca i32, align 4
Finding defs for:   store i32 %sub, i32* %bufferlen, align 4
Target of   store i32 %sub, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 328
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 329
[SelectDef] On node: FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4  to result
Found:
	- NodeId: 329 Instr:   %bufferlen = alloca i32, align 4
Finding defs for:   store i32 %call25, i32* %len, align 4
Target of   store i32 %call25, i32* %len, align 4 is   %len = alloca i32, align 4 with PAG id 344
Checking PagEdge node associated to:   %len = alloca i32, align 4
Visist starts at PAGNode 345
[SelectDef] On node: FIObjVar ID: 345 (base object)
   %len = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 345 (base object)
   %len = alloca i32, align 4  to result
Found:
	- NodeId: 345 Instr:   %len = alloca i32, align 4
Finding defs for:   store i32 %add30, i32* %bufferlen, align 4
Target of   store i32 %add30, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 328
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 329
[SelectDef] On node: FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4  to result
Found:
	- NodeId: 329 Instr:   %bufferlen = alloca i32, align 4
Finding defs for:   store i32 0, i32* %bufferpos31, align 4
Target of   store i32 0, i32* %bufferpos31, align 4 is   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0 with PAG id 472
Checking PagEdge node associated to:   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Visist starts at PAGNode 340
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
Finding defs for:   store i32 %add36, i32* %lineno, align 4
Target of   store i32 %add36, i32* %lineno, align 4 is   %lineno = alloca i32, align 4 with PAG id 334
Checking PagEdge node associated to:   %lineno = alloca i32, align 4
Visist starts at PAGNode 335
[SelectDef] On node: FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4  to result
Found:
	- NodeId: 335 Instr:   %lineno = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval, align 4
Target of   store i32 1, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 316
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 317
[SelectDef] On node: FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 317 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 %sub55, i32* %seconds, align 4
Target of   store i32 %sub55, i32* %seconds, align 4 is   %seconds = alloca i32, align 4 with PAG id 348
Checking PagEdge node associated to:   %seconds = alloca i32, align 4
Visist starts at PAGNode 349
[SelectDef] On node: FIObjVar ID: 349 (base object)
   %seconds = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 349 (base object)
   %seconds = alloca i32, align 4  to result
Found:
	- NodeId: 349 Instr:   %seconds = alloca i32, align 4
Finding defs for:   store i32 %sub57, i32* %microseconds, align 4
Target of   store i32 %sub57, i32* %microseconds, align 4 is   %microseconds = alloca i32, align 4 with PAG id 350
Checking PagEdge node associated to:   %microseconds = alloca i32, align 4
Visist starts at PAGNode 351
[SelectDef] On node: FIObjVar ID: 351 (base object)
   %microseconds = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 351 (base object)
   %microseconds = alloca i32, align 4  to result
Found:
	- NodeId: 351 Instr:   %microseconds = alloca i32, align 4
Finding defs for:   store double %add59, double* %elapsed, align 8
Target of   store double %add59, double* %elapsed, align 8 is   %elapsed = alloca double, align 8 with PAG id 352
Checking PagEdge node associated to:   %elapsed = alloca double, align 8
Visist starts at PAGNode 353
[SelectDef] On node: FIObjVar ID: 353 (base object)
   %elapsed = alloca double, align 8 
Start node is a Def already, adding FIObjVar ID: 353 (base object)
   %elapsed = alloca double, align 8  to result
Found:
	- NodeId: 353 Instr:   %elapsed = alloca double, align 8
Finding defs for:   store i32 0, i32* %retval, align 4
Target of   store i32 0, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 316
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 317
[SelectDef] On node: FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 317 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i16 %60, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %60, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function gettimeofday
Checking function __isoc99_scanf
Checking function llvm.memmove.p0i8.p0i8.i32
Checking function fread
Checking function fprintf
Checking function sprintf
Checking function printf
Checking function print_indent
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %indentlevel, i32* %indentlevel.addr, align 4
Target of   store i32 %indentlevel, i32* %indentlevel.addr, align 4 is   %indentlevel.addr = alloca i32, align 4 with PAG id 603
Checking PagEdge node associated to:   %indentlevel.addr = alloca i32, align 4
Visist starts at PAGNode 604
[SelectDef] On node: FIObjVar ID: 604 (base object)
   %indentlevel.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 604 (base object)
   %indentlevel.addr = alloca i32, align 4  to result
Found:
	- NodeId: 604 Instr:   %indentlevel.addr = alloca i32, align 4
Finding defs for:   store i16 %11, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %11, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function puts
Checking function wrapper_scanf
Checking function sxml_init_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 643
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 644
[SelectDef] On node: FIObjVar ID: 644 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 644 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 644 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 0, i32* %bufferpos_instrumented, align 4
Target of   store i32 0, i32* %bufferpos_instrumented, align 4 is   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 0 with PAG id 647
Checking PagEdge node associated to:   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 0
Visist starts at PAGNode 646
[SelectDef] On node: ValVar ID: 646
   %4 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 643-->646
[SelectDef] On node: ValVar ID: 643
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 644-->643
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 643
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 644 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 636-->643
[SelectDef] On node: ValVar ID: 636
 %struct.sxml_t* %state { 0th arg sxml_init_instrumented  }
On edge 340-->636
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
	- NodeId: 644 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 0, i32* %ntokens_instrumented, align 4
Target of   store i32 0, i32* %ntokens_instrumented, align 4 is   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %5, i32 0, i32 1 with PAG id 650
Checking PagEdge node associated to:   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %5, i32 0, i32 1
Visist starts at PAGNode 649
[SelectDef] On node: ValVar ID: 649
   %5 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 643-->649
[SelectDef] On node: ValVar ID: 643
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 644-->643
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 643
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 644 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 636-->643
[SelectDef] On node: ValVar ID: 636
 %struct.sxml_t* %state { 0th arg sxml_init_instrumented  }
On edge 340-->636
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
	- NodeId: 644 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 0, i32* %taglevel_instrumented, align 4
Target of   store i32 0, i32* %taglevel_instrumented, align 4 is   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %6, i32 0, i32 2 with PAG id 653
Checking PagEdge node associated to:   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %6, i32 0, i32 2
Visist starts at PAGNode 652
[SelectDef] On node: ValVar ID: 652
   %6 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 643-->652
[SelectDef] On node: ValVar ID: 643
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 644-->643
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 643
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 644 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 636-->643
[SelectDef] On node: ValVar ID: 636
 %struct.sxml_t* %state { 0th arg sxml_init_instrumented  }
On edge 340-->636
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
	- NodeId: 644 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i16 %10, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %10, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function sxml_parse_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 677
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 678
[SelectDef] On node: FIObjVar ID: 678 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 678 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 678 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 679
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 680
[SelectDef] On node: FIObjVar ID: 680 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 680 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 680 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Target of   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 is   %bufferlen.addr_instrumented = alloca i32, align 4 with PAG id 681
Checking PagEdge node associated to:   %bufferlen.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 682
[SelectDef] On node: FIObjVar ID: 682 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 682 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 682 Instr:   %bufferlen.addr_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4 is   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 683
Checking PagEdge node associated to:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 684
[SelectDef] On node: FIObjVar ID: 684 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 684 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 684 Instr:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4
Target of   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4 is   %num_tokens.addr_instrumented = alloca i32, align 4 with PAG id 685
Checking PagEdge node associated to:   %num_tokens.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 686
[SelectDef] On node: FIObjVar ID: 686 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 686 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 686 Instr:   %num_tokens.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 689
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 690
[SelectDef] On node: FIObjVar ID: 690 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 690 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 690 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %buffer1_instrumented, align 4
Target of   store i8* %9, i8** %buffer1_instrumented, align 4 is   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 with PAG id 722
Checking PagEdge node associated to:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Visist starts at PAGNode 691
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store i32 %10, i32* %bufferlen2_instrumented, align 4
Target of   store i32 %10, i32* %bufferlen2_instrumented, align 4 is   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1 with PAG id 725
Checking PagEdge node associated to:   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Visist starts at PAGNode 691
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store %struct.sxmltok_t* %11, %struct.sxmltok_t** %tokens3_instrumented, align 4
Target of   store %struct.sxmltok_t* %11, %struct.sxmltok_t** %tokens3_instrumented, align 4 is   %tokens3_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 2 with PAG id 728
Checking PagEdge node associated to:   %tokens3_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 2
Visist starts at PAGNode 691
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store i32 %12, i32* %num_tokens4_instrumented, align 4
Target of   store i32 %12, i32* %num_tokens4_instrumented, align 4 is   %num_tokens4_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 3 with PAG id 731
Checking PagEdge node associated to:   %num_tokens4_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 3
Visist starts at PAGNode 691
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 695
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 696
[SelectDef] On node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 696 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call_instrumented, i8** %lt_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %lt_instrumented, align 4 is   %lt_instrumented = alloca i8*, align 4 with PAG id 697
Checking PagEdge node associated to:   %lt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 698
[SelectDef] On node: FIObjVar ID: 698 (base object)
   %lt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 698 (base object)
   %lt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 698 Instr:   %lt_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call14_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call14_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 693
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 694
[SelectDef] On node: FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 694 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call16_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call16_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 693
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 694
[SelectDef] On node: FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 694 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call17_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call17_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 693
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 694
[SelectDef] On node: FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 694 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %29, i32* %retval_instrumented, align 4
Target of   store i32 %29, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr32_instrumented, i8** %start29_instrumented, align 4
Target of   store i8* %add.ptr32_instrumented, i8** %start29_instrumented, align 4 is   %start29_instrumented = alloca i8*, align 4 with PAG id 701
Checking PagEdge node associated to:   %start29_instrumented = alloca i8*, align 4
Visist starts at PAGNode 702
[SelectDef] On node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 702 Instr:   %start29_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call34_instrumented, i8** %lt33_instrumented, align 4
Target of   store i8* %call34_instrumented, i8** %lt33_instrumented, align 4 is   %lt33_instrumented = alloca i8*, align 4 with PAG id 703
Checking PagEdge node associated to:   %lt33_instrumented = alloca i8*, align 4
Visist starts at PAGNode 704
[SelectDef] On node: FIObjVar ID: 704 (base object)
   %lt33_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 704 (base object)
   %lt33_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 704 Instr:   %lt33_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call43_instrumented, i32* %err42_instrumented, align 4
Target of   store i32 %call43_instrumented, i32* %err42_instrumented, align 4 is   %err42_instrumented = alloca i32, align 4 with PAG id 705
Checking PagEdge node associated to:   %err42_instrumented = alloca i32, align 4
Visist starts at PAGNode 706
[SelectDef] On node: FIObjVar ID: 706 (base object)
   %err42_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 706 (base object)
   %err42_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 706 Instr:   %err42_instrumented = alloca i32, align 4
Finding defs for:   store i32 %43, i32* %retval_instrumented, align 4
Target of   store i32 %43, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call59_instrumented, i32* %err28_instrumented, align 4
Target of   store i32 %call59_instrumented, i32* %err28_instrumented, align 4 is   %err28_instrumented = alloca i32, align 4 with PAG id 699
Checking PagEdge node associated to:   %err28_instrumented = alloca i32, align 4
Visist starts at PAGNode 700
[SelectDef] On node: FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 700 Instr:   %err28_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call61_instrumented, i32* %err28_instrumented, align 4
Target of   store i32 %call61_instrumented, i32* %err28_instrumented, align 4 is   %err28_instrumented = alloca i32, align 4 with PAG id 699
Checking PagEdge node associated to:   %err28_instrumented = alloca i32, align 4
Visist starts at PAGNode 700
[SelectDef] On node: FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 700 Instr:   %err28_instrumented = alloca i32, align 4
Finding defs for:   store i32 %cond_instrumented, i32* %err28_instrumented, align 4
Target of   store i32 %cond_instrumented, i32* %err28_instrumented, align 4 is   %err28_instrumented = alloca i32, align 4 with PAG id 699
Checking PagEdge node associated to:   %err28_instrumented = alloca i32, align 4
Visist starts at PAGNode 700
[SelectDef] On node: FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 700 Instr:   %err28_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call70_instrumented, i32* %err28_instrumented, align 4
Target of   store i32 %call70_instrumented, i32* %err28_instrumented, align 4 is   %err28_instrumented = alloca i32, align 4 with PAG id 699
Checking PagEdge node associated to:   %err28_instrumented = alloca i32, align 4
Visist starts at PAGNode 700
[SelectDef] On node: FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 700 Instr:   %err28_instrumented = alloca i32, align 4
Finding defs for:   store i32 %54, i32* %retval_instrumented, align 4
Target of   store i32 %54, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %62, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %62, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_ltrim_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 929
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 930
[SelectDef] On node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 930 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 931
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 932
[SelectDef] On node: FIObjVar ID: 932 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 932 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 932 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %it_instrumented, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 933
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 934
[SelectDef] On node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 934 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 933
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 934
[SelectDef] On node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 934 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %20, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %20, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function state_setpos_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 991
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 992
[SelectDef] On node: FIObjVar ID: 992 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 992 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 992 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 993
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 994
[SelectDef] On node: FIObjVar ID: 994 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 994 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 994 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %ptr, i8** %ptr.addr_instrumented, align 4
Target of   store i8* %ptr, i8** %ptr.addr_instrumented, align 4 is   %ptr.addr_instrumented = alloca i8*, align 4 with PAG id 995
Checking PagEdge node associated to:   %ptr.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 996
[SelectDef] On node: FIObjVar ID: 996 (base object)
   %ptr.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 996 (base object)
   %ptr.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 996 Instr:   %ptr.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4
Target of   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4 is   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0 with PAG id 1008
Checking PagEdge node associated to:   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0
Visist starts at PAGNode 1007
[SelectDef] On node: ValVar ID: 1007
   %7 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 991-->1007
[SelectDef] On node: ValVar ID: 991
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 992-->991
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 991
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 992 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 980-->991
[SelectDef] On node: ValVar ID: 980
 %struct.sxml_t* %state { 0th arg state_setpos_instrumented  }
On edge 687-->980
On edge 1119-->980
On edge 1160-->980
On edge 1255-->980
On edge 1364-->980
On edge 1420-->980
On edge 1586-->980
On edge 1630-->980
On edge 1746-->980
On edge 1838-->980
On edge 1929-->980
On edge 2459-->980
On edge 2498-->980
[SelectDef] On node: ValVar ID: 2498
   %67 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2498
[SelectDef] On node: ValVar ID: 2317
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2318-->2317
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2317
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2306-->2317
[SelectDef] On node: ValVar ID: 2306
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1123-->2306
On edge 1368-->2306
[SelectDef] On node: ValVar ID: 1368
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1368
[SelectDef] On node: ValVar ID: 1281
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1282-->1281
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1281
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1270-->1281
[SelectDef] On node: ValVar ID: 1270
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 687-->1270
Node 687 already visited
On edge 687-->1270
Node 687 already visited
[SelectDef] On node: ValVar ID: 1123
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1123
[SelectDef] On node: ValVar ID: 1038
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1039-->1038
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1038
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1027-->1038
[SelectDef] On node: ValVar ID: 1027
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 687-->1027
Node 687 already visited
On edge 687-->1027
Node 687 already visited
[SelectDef] On node: ValVar ID: 2459
   %50 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2459
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1929
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1864-->1929
[SelectDef] On node: ValVar ID: 1864
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1865-->1864
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1864
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1853-->1864
[SelectDef] On node: ValVar ID: 1853
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 687-->1853
Node 687 already visited
[SelectDef] On node: ValVar ID: 1838
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1772-->1838
[SelectDef] On node: ValVar ID: 1772
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1773-->1772
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1772
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1761-->1772
[SelectDef] On node: ValVar ID: 1761
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 687-->1761
Node 687 already visited
[SelectDef] On node: ValVar ID: 1746
   %36 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1655-->1746
[SelectDef] On node: ValVar ID: 1655
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1656-->1655
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1655
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1644-->1655
[SelectDef] On node: ValVar ID: 1644
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 687-->1644
Node 687 already visited
[SelectDef] On node: ValVar ID: 1630
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1630
[SelectDef] On node: ValVar ID: 1523
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1524-->1523
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1523
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1510-->1523
[SelectDef] On node: ValVar ID: 1510
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 687-->1510
Node 687 already visited
On edge 2618-->1510
[SelectDef] On node: ValVar ID: 2618
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2595-->2618
[SelectDef] On node: ValVar ID: 2595
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2596-->2595
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2595
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2582-->2595
[SelectDef] On node: ValVar ID: 2582
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2463-->2582
[SelectDef] On node: ValVar ID: 2463
   %53 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2463
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1586
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1586
Node 1523 already visited
[SelectDef] On node: ValVar ID: 1420
   %54 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1420
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1364
   %30 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1364
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1255
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1186-->1255
[SelectDef] On node: ValVar ID: 1186
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1187-->1186
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1186
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1175-->1186
[SelectDef] On node: ValVar ID: 1175
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 687-->1175
Node 687 already visited
[SelectDef] On node: ValVar ID: 1160
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1160
Node 1038 already visited
[SelectDef] On node: ValVar ID: 1119
   %29 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1119
Node 1038 already visited
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 1524 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 688 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 992 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1039 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1187 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1282 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1656 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1773 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1865 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2318 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2596 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i16 %16, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %16, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_instruction_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1038
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1039
[SelectDef] On node: FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1039 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1040
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1041
[SelectDef] On node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1048
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1049
[SelectDef] On node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1049 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1050
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1051
[SelectDef] On node: FIObjVar ID: 1051 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1051 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1051 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1048
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1049
[SelectDef] On node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1049 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1046
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1047
[SelectDef] On node: FIObjVar ID: 1047 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1047 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1047 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call12_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call12_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 1042
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 1043
[SelectDef] On node: FIObjVar ID: 1043 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1043 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1043 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %35, i32* %retval_instrumented, align 4
Target of   store i32 %35, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr18_instrumented, i8** %quest_instrumented, align 4
Target of   store i8* %add.ptr18_instrumented, i8** %quest_instrumented, align 4 is   %quest_instrumented = alloca i8*, align 4 with PAG id 1044
Checking PagEdge node associated to:   %quest_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1045
[SelectDef] On node: FIObjVar ID: 1045 (base object)
   %quest_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1045 (base object)
   %quest_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1045 Instr:   %quest_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call30_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call30_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %52, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %52, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_doctype_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1186
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1187
[SelectDef] On node: FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1187 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1188
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1189
[SelectDef] On node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1189 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1192
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1193
[SelectDef] On node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1193 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1194
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1195
[SelectDef] On node: FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1195 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1184
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1185
[SelectDef] On node: FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1185 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1184
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1185
[SelectDef] On node: FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1185 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1192
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1193
[SelectDef] On node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1193 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 is   %bracket_instrumented = alloca i8*, align 4 with PAG id 1190
Checking PagEdge node associated to:   %bracket_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1191
[SelectDef] On node: FIObjVar ID: 1191 (base object)
   %bracket_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1191 (base object)
   %bracket_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1191 Instr:   %bracket_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1184
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1185
[SelectDef] On node: FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1185 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call12_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call12_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1184
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1185
[SelectDef] On node: FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1185 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %34, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %34, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_start_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1281
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1282
[SelectDef] On node: FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1282 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1283
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1284
[SelectDef] On node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1293
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1294
[SelectDef] On node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1294 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1295
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1296
[SelectDef] On node: FIObjVar ID: 1296 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1296 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1296 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4
Target of   store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 1289
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1290
[SelectDef] On node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1290 Instr:   %name_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call10_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call10_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1291
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1292
[SelectDef] On node: FIObjVar ID: 1292 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1292 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1292 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call17_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call17_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 1285
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 1286
[SelectDef] On node: FIObjVar ID: 1286 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1286 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1286 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %36, i32* %retval_instrumented, align 4
Target of   store i32 %36, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr24_instrumented, i8** %gt_instrumented, align 4
Target of   store i8* %add.ptr24_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1287
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1288
[SelectDef] On node: FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1288 Instr:   %gt_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1287
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1288
[SelectDef] On node: FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1288 Instr:   %gt_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call44_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call44_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %61, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %61, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_findchr_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 1445
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1446
[SelectDef] On node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1446 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 1447
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1448
[SelectDef] On node: FIObjVar ID: 1448 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1448 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1448 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %c, i32* %c.addr_instrumented, align 4
Target of   store i32 %c, i32* %c.addr_instrumented, align 4 is   %c.addr_instrumented = alloca i32, align 4 with PAG id 1449
Checking PagEdge node associated to:   %c.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 1450
[SelectDef] On node: FIObjVar ID: 1450 (base object)
   %c.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1450 (base object)
   %c.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1450 Instr:   %c.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 1451
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1452
[SelectDef] On node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1452 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %24, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %24, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_characters_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1523
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1524
[SelectDef] On node: FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1524 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1525
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1526
[SelectDef] On node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1526 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 1527
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1528
[SelectDef] On node: FIObjVar ID: 1528 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1528 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1528 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1529
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1530
[SelectDef] On node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1530 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %ampr_instrumented, align 4 is   %ampr_instrumented = alloca i8*, align 4 with PAG id 1535
Checking PagEdge node associated to:   %ampr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1536
[SelectDef] On node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1536 Instr:   %ampr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call9_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call9_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1521
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1522
[SelectDef] On node: FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1522 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %cond_instrumented, i8** %limit_instrumented, align 4
Target of   store i8* %cond_instrumented, i8** %limit_instrumented, align 4 is   %limit_instrumented = alloca i8*, align 4 with PAG id 1531
Checking PagEdge node associated to:   %limit_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1532
[SelectDef] On node: FIObjVar ID: 1532 (base object)
   %limit_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1532 (base object)
   %limit_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1532 Instr:   %limit_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call14_instrumented, i8** %colon_instrumented, align 4
Target of   store i8* %call14_instrumented, i8** %colon_instrumented, align 4 is   %colon_instrumented = alloca i8*, align 4 with PAG id 1533
Checking PagEdge node associated to:   %colon_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1534
[SelectDef] On node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1534 Instr:   %colon_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %cond18_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %cond18_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1521
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1522
[SelectDef] On node: FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1522 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1529
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1530
[SelectDef] On node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1530 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call22_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call22_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1521
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1522
[SelectDef] On node: FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1522 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %52, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %52, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_end_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1655
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1656
[SelectDef] On node: FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1656 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1657
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1658
[SelectDef] On node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1658 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1663
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1664
[SelectDef] On node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1664 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1665
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1666
[SelectDef] On node: FIObjVar ID: 1666 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1666 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1666 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1653
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1654
[SelectDef] On node: FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1654 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1663
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1664
[SelectDef] On node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1664 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call8_instrumented, i8** %gt_instrumented, align 4
Target of   store i8* %call8_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1659
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1660
[SelectDef] On node: FIObjVar ID: 1660 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1660 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1660 Instr:   %gt_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1653
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1654
[SelectDef] On node: FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1654 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call13_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call13_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1661
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1662
[SelectDef] On node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1662 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1653
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1654
[SelectDef] On node: FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1654 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call21_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call21_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1653
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1654
[SelectDef] On node: FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1654 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %43, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %43, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_comment_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1772
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1773
[SelectDef] On node: FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1773 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1774
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1775
[SelectDef] On node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1775 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1778
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1779
[SelectDef] On node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1779 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1780
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1781
[SelectDef] On node: FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1781 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1770
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1771
[SelectDef] On node: FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1771 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1770
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1771
[SelectDef] On node: FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1771 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1778
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1779
[SelectDef] On node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1779 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %dash_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %dash_instrumented, align 4 is   %dash_instrumented = alloca i8*, align 4 with PAG id 1776
Checking PagEdge node associated to:   %dash_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1777
[SelectDef] On node: FIObjVar ID: 1777 (base object)
   %dash_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1777 (base object)
   %dash_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1777 Instr:   %dash_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1770
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1771
[SelectDef] On node: FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1771 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call12_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call12_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1770
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1771
[SelectDef] On node: FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1771 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %34, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %34, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_cdata_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1864
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1865
[SelectDef] On node: FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1865 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1866
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1867
[SelectDef] On node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1867 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1870
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1871
[SelectDef] On node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1871 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1872
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1873
[SelectDef] On node: FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1873 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1862
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1863
[SelectDef] On node: FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1863 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1862
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1863
[SelectDef] On node: FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1863 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1870
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1871
[SelectDef] On node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1871 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 is   %bracket_instrumented = alloca i8*, align 4 with PAG id 1868
Checking PagEdge node associated to:   %bracket_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1869
[SelectDef] On node: FIObjVar ID: 1869 (base object)
   %bracket_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1869 (base object)
   %bracket_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1869 Instr:   %bracket_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1862
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1863
[SelectDef] On node: FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1863 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call12_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call12_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1862
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1863
[SelectDef] On node: FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1863 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %34, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %34, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_startswith_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 1957
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1958
[SelectDef] On node: FIObjVar ID: 1958 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1958 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1958 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 1959
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1960
[SelectDef] On node: FIObjVar ID: 1960 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1960 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1960 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %prefix, i8** %prefix.addr_instrumented, align 4
Target of   store i8* %prefix, i8** %prefix.addr_instrumented, align 4 is   %prefix.addr_instrumented = alloca i8*, align 4 with PAG id 1961
Checking PagEdge node associated to:   %prefix.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1962
[SelectDef] On node: FIObjVar ID: 1962 (base object)
   %prefix.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1962 (base object)
   %prefix.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1962 Instr:   %prefix.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call_instrumented, i32* %nbytes_instrumented, align 4
Target of   store i32 %call_instrumented, i32* %nbytes_instrumented, align 4 is   %nbytes_instrumented = alloca i32, align 4 with PAG id 1963
Checking PagEdge node associated to:   %nbytes_instrumented = alloca i32, align 4
Visist starts at PAGNode 1964
[SelectDef] On node: FIObjVar ID: 1964 (base object)
   %nbytes_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1964 (base object)
   %nbytes_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1964 Instr:   %nbytes_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1955
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1956
[SelectDef] On node: FIObjVar ID: 1956 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1956 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1956 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %conv_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %conv_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1955
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1956
[SelectDef] On node: FIObjVar ID: 1956 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1956 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1956 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %20, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %20, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_findstr_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2023
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2024
[SelectDef] On node: FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2024 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2025
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2026
[SelectDef] On node: FIObjVar ID: 2026 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2026 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2026 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %needle, i8** %needle.addr_instrumented, align 4
Target of   store i8* %needle, i8** %needle.addr_instrumented, align 4 is   %needle.addr_instrumented = alloca i8*, align 4 with PAG id 2027
Checking PagEdge node associated to:   %needle.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2028
[SelectDef] On node: FIObjVar ID: 2028 (base object)
   %needle.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2028 (base object)
   %needle.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2028 Instr:   %needle.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
Target of   store i32 %call_instrumented, i32* %needlelen_instrumented, align 4 is   %needlelen_instrumented = alloca i32, align 4 with PAG id 2029
Checking PagEdge node associated to:   %needlelen_instrumented = alloca i32, align 4
Visist starts at PAGNode 2030
[SelectDef] On node: FIObjVar ID: 2030 (base object)
   %needlelen_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2030 (base object)
   %needlelen_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2030 Instr:   %needlelen_instrumented = alloca i32, align 4
Finding defs for:   store i32 %conv_instrumented, i32* %first_instrumented, align 4
Target of   store i32 %conv_instrumented, i32* %first_instrumented, align 4 is   %first_instrumented = alloca i32, align 4 with PAG id 2031
Checking PagEdge node associated to:   %first_instrumented = alloca i32, align 4
Visist starts at PAGNode 2032
[SelectDef] On node: FIObjVar ID: 2032 (base object)
   %first_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2032 (base object)
   %first_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2032 Instr:   %first_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %call8_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2033
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2034
[SelectDef] On node: FIObjVar ID: 2034 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2034 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2034 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %28, i8** %retval_instrumented, align 4
Target of   store i8* %28, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2021
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2022
[SelectDef] On node: FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2022 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
Target of   store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2023
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2024
[SelectDef] On node: FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2024 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %30, i8** %retval_instrumented, align 4
Target of   store i8* %30, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2021
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2022
[SelectDef] On node: FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2022 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %35, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %35, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function state_pushtoken_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 2137
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 2138
[SelectDef] On node: FIObjVar ID: 2138 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2138 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 2138 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 2139
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 2140
[SelectDef] On node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 2140 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %type, i32* %type.addr_instrumented, align 4
Target of   store i32 %type, i32* %type.addr_instrumented, align 4 is   %type.addr_instrumented = alloca i32, align 4 with PAG id 2141
Checking PagEdge node associated to:   %type.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2142
[SelectDef] On node: FIObjVar ID: 2142 (base object)
   %type.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2142 (base object)
   %type.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2142 Instr:   %type.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2143
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2144
[SelectDef] On node: FIObjVar ID: 2144 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2144 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2144 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2145
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2146
[SelectDef] On node: FIObjVar ID: 2146 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2146 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2146 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %ntokens_instrumented, align 4
Target of   store i32 %inc_instrumented, i32* %ntokens_instrumented, align 4 is   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 1 with PAG id 2157
Checking PagEdge node associated to:   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 1
Visist starts at PAGNode 2156
[SelectDef] On node: ValVar ID: 2156
   %4 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2137-->2156
[SelectDef] On node: ValVar ID: 2137
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2138-->2137
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2137
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2138 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2121-->2137
[SelectDef] On node: ValVar ID: 2121
 %struct.sxml_t* %state { 0th arg state_pushtoken_instrumented  }
On edge 1111-->2121
On edge 1249-->2121
On edge 1359-->2121
On edge 1396-->2121
On edge 1575-->2121
On edge 1625-->2121
On edge 1741-->2121
On edge 1832-->2121
On edge 1924-->2121
On edge 2411-->2121
[SelectDef] On node: ValVar ID: 2411
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2411
[SelectDef] On node: ValVar ID: 2317
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2318-->2317
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2317
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2306-->2317
[SelectDef] On node: ValVar ID: 2306
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1123-->2306
On edge 1368-->2306
[SelectDef] On node: ValVar ID: 1368
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1368
[SelectDef] On node: ValVar ID: 1281
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1282-->1281
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1281
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1270-->1281
[SelectDef] On node: ValVar ID: 1270
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 687-->1270
On edge 687-->1270
Node 687 already visited
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 1123
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1123
[SelectDef] On node: ValVar ID: 1038
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1039-->1038
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1038
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1027-->1038
[SelectDef] On node: ValVar ID: 1027
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 687-->1027
Node 687 already visited
On edge 687-->1027
Node 687 already visited
[SelectDef] On node: ValVar ID: 1924
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1864-->1924
[SelectDef] On node: ValVar ID: 1864
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1865-->1864
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1864
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1853-->1864
[SelectDef] On node: ValVar ID: 1853
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 687-->1853
Node 687 already visited
[SelectDef] On node: ValVar ID: 1832
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1772-->1832
[SelectDef] On node: ValVar ID: 1772
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1773-->1772
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1772
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1761-->1772
[SelectDef] On node: ValVar ID: 1761
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 687-->1761
Node 687 already visited
[SelectDef] On node: ValVar ID: 1741
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1655-->1741
[SelectDef] On node: ValVar ID: 1655
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1656-->1655
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1655
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1644-->1655
[SelectDef] On node: ValVar ID: 1644
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 687-->1644
Node 687 already visited
[SelectDef] On node: ValVar ID: 1625
   %41 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1625
[SelectDef] On node: ValVar ID: 1523
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1524-->1523
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1523
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1510-->1523
[SelectDef] On node: ValVar ID: 1510
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 687-->1510
Node 687 already visited
On edge 2618-->1510
[SelectDef] On node: ValVar ID: 2618
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2595-->2618
[SelectDef] On node: ValVar ID: 2595
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2596-->2595
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2595
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2582-->2595
[SelectDef] On node: ValVar ID: 2582
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2463-->2582
[SelectDef] On node: ValVar ID: 2463
   %53 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2463
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1575
   %20 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1575
Node 1523 already visited
[SelectDef] On node: ValVar ID: 1396
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1396
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1359
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1359
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1249
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1186-->1249
[SelectDef] On node: ValVar ID: 1186
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1187-->1186
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1186
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1175-->1186
[SelectDef] On node: ValVar ID: 1175
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 687-->1175
Node 687 already visited
[SelectDef] On node: ValVar ID: 1111
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1111
Node 1038 already visited
Found:
	- NodeId: 1524 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 688 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1039 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1187 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1282 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1656 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1773 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1865 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2138 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2318 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2596 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 %5, i32* %i_instrumented, align 4
Target of   store i32 %5, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2149
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2150
[SelectDef] On node: FIObjVar ID: 2150 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2150 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2150 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2135
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2136
[SelectDef] On node: FIObjVar ID: 2136 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2136 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2136 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2147
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2148
[SelectDef] On node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2148 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i16 %conv_instrumented, i16* %type2_instrumented, align 4
Target of   store i16 %conv_instrumented, i16* %type2_instrumented, align 4 is   %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0 with PAG id 2182
Checking PagEdge node associated to:   %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0
Visist starts at PAGNode 2181
[SelectDef] On node: ValVar ID: 2181
   %14 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2147-->2181
[SelectDef] On node: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2148-->2147
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2147
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2177-->2147
[SelectDef] On node: ValVar ID: 2177
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2175-->2177
[SelectDef] On node: ValVar ID: 2175
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2174-->2175
[SelectDef] On node: ValVar ID: 2174
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2173-->2174
[SelectDef] On node: ValVar ID: 2173
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2139-->2173
[SelectDef] On node: ValVar ID: 2139
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2140-->2139
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2139
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2122-->2139
[SelectDef] On node: ValVar ID: 2122
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1112-->2122
On edge 1250-->2122
On edge 1360-->2122
On edge 1397-->2122
On edge 1576-->2122
On edge 1626-->2122
On edge 1742-->2122
On edge 1833-->2122
On edge 1925-->2122
On edge 2412-->2122
[SelectDef] On node: ValVar ID: 2412
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2412
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1925
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1925
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
Node 691 already visited
[SelectDef] On node: ValVar ID: 1833
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1833
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1742
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1742
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1626
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1626
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1576
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1576
Node 1525 already visited
[SelectDef] On node: ValVar ID: 1397
   %46 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1397
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1360
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1360
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1250
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1250
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 1112
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1112
Node 1040 already visited
Found:
	- NodeId: 1526 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1189 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1658 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1775 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1867 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2140 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2148 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2598 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4
Target of   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4 is   %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2 with PAG id 2192
Checking PagEdge node associated to:   %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2
Visist starts at PAGNode 2191
[SelectDef] On node: ValVar ID: 2191
   %18 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2147-->2191
[SelectDef] On node: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2148-->2147
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2147
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2177-->2147
[SelectDef] On node: ValVar ID: 2177
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2175-->2177
[SelectDef] On node: ValVar ID: 2175
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2174-->2175
[SelectDef] On node: ValVar ID: 2174
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2173-->2174
[SelectDef] On node: ValVar ID: 2173
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2139-->2173
[SelectDef] On node: ValVar ID: 2139
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2140-->2139
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2139
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2122-->2139
[SelectDef] On node: ValVar ID: 2122
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1112-->2122
On edge 1250-->2122
On edge 1360-->2122
On edge 1397-->2122
On edge 1576-->2122
On edge 1626-->2122
On edge 1742-->2122
On edge 1833-->2122
On edge 1925-->2122
On edge 2412-->2122
[SelectDef] On node: ValVar ID: 2412
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2412
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1925
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1925
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
Node 691 already visited
[SelectDef] On node: ValVar ID: 1833
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1833
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1742
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1742
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1626
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1626
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1576
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1576
Node 1525 already visited
[SelectDef] On node: ValVar ID: 1397
   %46 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1397
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1360
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1360
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1250
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1250
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 1112
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1112
Node 1040 already visited
Found:
	- NodeId: 1526 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1189 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1658 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1775 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1867 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2140 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2148 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2598 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4
Target of   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4 is   %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3 with PAG id 2202
Checking PagEdge node associated to:   %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3
Visist starts at PAGNode 2201
[SelectDef] On node: ValVar ID: 2201
   %22 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2147-->2201
[SelectDef] On node: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2148-->2147
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2147
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2177-->2147
[SelectDef] On node: ValVar ID: 2177
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2175-->2177
[SelectDef] On node: ValVar ID: 2175
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2174-->2175
[SelectDef] On node: ValVar ID: 2174
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2173-->2174
[SelectDef] On node: ValVar ID: 2173
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2139-->2173
[SelectDef] On node: ValVar ID: 2139
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2140-->2139
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2139
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2122-->2139
[SelectDef] On node: ValVar ID: 2122
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1112-->2122
On edge 1250-->2122
On edge 1360-->2122
On edge 1397-->2122
On edge 1576-->2122
On edge 1626-->2122
On edge 1742-->2122
On edge 1833-->2122
On edge 1925-->2122
On edge 2412-->2122
[SelectDef] On node: ValVar ID: 2412
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2412
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1925
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1925
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
Node 691 already visited
[SelectDef] On node: ValVar ID: 1833
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1833
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1742
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1742
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1626
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1626
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1576
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1576
Node 1525 already visited
[SelectDef] On node: ValVar ID: 1397
   %46 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1397
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1360
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1360
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1250
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1250
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 1112
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1112
Node 1040 already visited
Found:
	- NodeId: 1526 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1189 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1658 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1775 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1867 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2140 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2148 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2598 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i16 0, i16* %size_instrumented, align 2
Target of   store i16 0, i16* %size_instrumented, align 2 is   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1 with PAG id 2205
Checking PagEdge node associated to:   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1
Visist starts at PAGNode 2204
[SelectDef] On node: ValVar ID: 2204
   %23 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2147-->2204
[SelectDef] On node: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2148-->2147
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2147
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2177-->2147
[SelectDef] On node: ValVar ID: 2177
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2175-->2177
[SelectDef] On node: ValVar ID: 2175
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2174-->2175
[SelectDef] On node: ValVar ID: 2174
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2173-->2174
[SelectDef] On node: ValVar ID: 2173
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2139-->2173
[SelectDef] On node: ValVar ID: 2139
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2140-->2139
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2139
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2122-->2139
[SelectDef] On node: ValVar ID: 2122
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1112-->2122
On edge 1250-->2122
On edge 1360-->2122
On edge 1397-->2122
On edge 1576-->2122
On edge 1626-->2122
On edge 1742-->2122
On edge 1833-->2122
On edge 1925-->2122
On edge 2412-->2122
[SelectDef] On node: ValVar ID: 2412
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2412
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1925
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1925
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
Node 691 already visited
[SelectDef] On node: ValVar ID: 1833
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1833
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1742
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1742
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1626
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1626
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1576
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1576
Node 1525 already visited
[SelectDef] On node: ValVar ID: 1397
   %46 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1397
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1360
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1360
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1250
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1250
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 1112
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1112
Node 1040 already visited
Found:
	- NodeId: 1526 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1189 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1658 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1775 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1867 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2140 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2148 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2598 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %inc7_instrumented, i32* %taglevel_instrumented, align 4
Target of   store i32 %inc7_instrumented, i32* %taglevel_instrumented, align 4 is   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %25, i32 0, i32 2 with PAG id 2210
Checking PagEdge node associated to:   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %25, i32 0, i32 2
Visist starts at PAGNode 2209
[SelectDef] On node: ValVar ID: 2209
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2137-->2209
[SelectDef] On node: ValVar ID: 2137
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2138-->2137
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2137
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2138 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2121-->2137
[SelectDef] On node: ValVar ID: 2121
 %struct.sxml_t* %state { 0th arg state_pushtoken_instrumented  }
On edge 1111-->2121
On edge 1249-->2121
On edge 1359-->2121
On edge 1396-->2121
On edge 1575-->2121
On edge 1625-->2121
On edge 1741-->2121
On edge 1832-->2121
On edge 1924-->2121
On edge 2411-->2121
[SelectDef] On node: ValVar ID: 2411
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2411
[SelectDef] On node: ValVar ID: 2317
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2318-->2317
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2317
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2306-->2317
[SelectDef] On node: ValVar ID: 2306
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1123-->2306
On edge 1368-->2306
[SelectDef] On node: ValVar ID: 1368
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1368
[SelectDef] On node: ValVar ID: 1281
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1282-->1281
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1281
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1270-->1281
[SelectDef] On node: ValVar ID: 1270
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 687-->1270
On edge 687-->1270
Node 687 already visited
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 1123
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1123
[SelectDef] On node: ValVar ID: 1038
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1039-->1038
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1038
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1027-->1038
[SelectDef] On node: ValVar ID: 1027
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 687-->1027
Node 687 already visited
On edge 687-->1027
Node 687 already visited
[SelectDef] On node: ValVar ID: 1924
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1864-->1924
[SelectDef] On node: ValVar ID: 1864
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1865-->1864
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1864
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1853-->1864
[SelectDef] On node: ValVar ID: 1853
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 687-->1853
Node 687 already visited
[SelectDef] On node: ValVar ID: 1832
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1772-->1832
[SelectDef] On node: ValVar ID: 1772
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1773-->1772
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1772
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1761-->1772
[SelectDef] On node: ValVar ID: 1761
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 687-->1761
Node 687 already visited
[SelectDef] On node: ValVar ID: 1741
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1655-->1741
[SelectDef] On node: ValVar ID: 1655
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1656-->1655
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1655
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1644-->1655
[SelectDef] On node: ValVar ID: 1644
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 687-->1644
Node 687 already visited
[SelectDef] On node: ValVar ID: 1625
   %41 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1625
[SelectDef] On node: ValVar ID: 1523
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1524-->1523
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1523
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1510-->1523
[SelectDef] On node: ValVar ID: 1510
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 687-->1510
Node 687 already visited
On edge 2618-->1510
[SelectDef] On node: ValVar ID: 2618
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2595-->2618
[SelectDef] On node: ValVar ID: 2595
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2596-->2595
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2595
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2582-->2595
[SelectDef] On node: ValVar ID: 2582
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2463-->2582
[SelectDef] On node: ValVar ID: 2463
   %53 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2463
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1575
   %20 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1575
Node 1523 already visited
[SelectDef] On node: ValVar ID: 1396
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1396
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1359
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1359
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1249
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1186-->1249
[SelectDef] On node: ValVar ID: 1186
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1187-->1186
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1186
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1175-->1186
[SelectDef] On node: ValVar ID: 1175
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 687-->1175
Node 687 already visited
[SelectDef] On node: ValVar ID: 1111
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1111
Node 1038 already visited
Found:
	- NodeId: 1524 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 688 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1039 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1187 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1282 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1656 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1773 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1865 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2138 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2318 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2596 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 %dec_instrumented, i32* %taglevel14_instrumented, align 4
Target of   store i32 %dec_instrumented, i32* %taglevel14_instrumented, align 4 is   %taglevel14_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %32, i32 0, i32 2 with PAG id 2230
Checking PagEdge node associated to:   %taglevel14_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %32, i32 0, i32 2
Visist starts at PAGNode 2229
[SelectDef] On node: ValVar ID: 2229
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2137-->2229
[SelectDef] On node: ValVar ID: 2137
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2138-->2137
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2137
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2138 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2121-->2137
[SelectDef] On node: ValVar ID: 2121
 %struct.sxml_t* %state { 0th arg state_pushtoken_instrumented  }
On edge 1111-->2121
On edge 1249-->2121
On edge 1359-->2121
On edge 1396-->2121
On edge 1575-->2121
On edge 1625-->2121
On edge 1741-->2121
On edge 1832-->2121
On edge 1924-->2121
On edge 2411-->2121
[SelectDef] On node: ValVar ID: 2411
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2411
[SelectDef] On node: ValVar ID: 2317
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2318-->2317
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2317
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2306-->2317
[SelectDef] On node: ValVar ID: 2306
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1123-->2306
On edge 1368-->2306
[SelectDef] On node: ValVar ID: 1368
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1368
[SelectDef] On node: ValVar ID: 1281
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1282-->1281
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1281
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1270-->1281
[SelectDef] On node: ValVar ID: 1270
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 687-->1270
On edge 687-->1270
Node 687 already visited
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 1123
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1123
[SelectDef] On node: ValVar ID: 1038
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1039-->1038
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1038
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1027-->1038
[SelectDef] On node: ValVar ID: 1027
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 687-->1027
Node 687 already visited
On edge 687-->1027
Node 687 already visited
[SelectDef] On node: ValVar ID: 1924
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1864-->1924
[SelectDef] On node: ValVar ID: 1864
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1865-->1864
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1864
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1853-->1864
[SelectDef] On node: ValVar ID: 1853
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 687-->1853
Node 687 already visited
[SelectDef] On node: ValVar ID: 1832
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1772-->1832
[SelectDef] On node: ValVar ID: 1772
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1773-->1772
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1772
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1761-->1772
[SelectDef] On node: ValVar ID: 1761
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 687-->1761
Node 687 already visited
[SelectDef] On node: ValVar ID: 1741
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1655-->1741
[SelectDef] On node: ValVar ID: 1655
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1656-->1655
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1655
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1644-->1655
[SelectDef] On node: ValVar ID: 1644
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 687-->1644
Node 687 already visited
[SelectDef] On node: ValVar ID: 1625
   %41 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1625
[SelectDef] On node: ValVar ID: 1523
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1524-->1523
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1523
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1510-->1523
[SelectDef] On node: ValVar ID: 1510
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 687-->1510
Node 687 already visited
On edge 2618-->1510
[SelectDef] On node: ValVar ID: 2618
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2595-->2618
[SelectDef] On node: ValVar ID: 2595
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2596-->2595
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2595
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2582-->2595
[SelectDef] On node: ValVar ID: 2582
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2463-->2582
[SelectDef] On node: ValVar ID: 2463
   %53 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2463
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1575
   %20 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1575
Node 1523 already visited
[SelectDef] On node: ValVar ID: 1396
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1396
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1359
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1359
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1249
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1186-->1249
[SelectDef] On node: ValVar ID: 1186
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1187-->1186
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1186
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1175-->1186
[SelectDef] On node: ValVar ID: 1175
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 687-->1175
Node 687 already visited
[SelectDef] On node: ValVar ID: 1111
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1111
Node 1038 already visited
Found:
	- NodeId: 1524 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 688 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1039 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1187 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1282 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1656 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1773 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1865 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2138 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2318 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2596 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2135
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2136
[SelectDef] On node: FIObjVar ID: 2136 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2136 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2136 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %38, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %38, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_find_notalnum_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2255
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2256
[SelectDef] On node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2256 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2257
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2258
[SelectDef] On node: FIObjVar ID: 2258 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2258 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2258 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %it_instrumented, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2259
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2260
[SelectDef] On node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2260 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2259
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2260
[SelectDef] On node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2260 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %20, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %20, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_attributes_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 2317
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 2318
[SelectDef] On node: FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 2318 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 2319
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 2320
[SelectDef] On node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 2321
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2322
[SelectDef] On node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2322 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 2323
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2324
[SelectDef] On node: FIObjVar ID: 2324 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2324 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2324 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 2325
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2326
[SelectDef] On node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2326 Instr:   %name_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %15, i32* %ntokens_instrumented, align 4
Target of   store i32 %15, i32* %ntokens_instrumented, align 4 is   %ntokens_instrumented = alloca i32, align 4 with PAG id 2327
Checking PagEdge node associated to:   %ntokens_instrumented = alloca i32, align 4
Visist starts at PAGNode 2328
[SelectDef] On node: FIObjVar ID: 2328 (base object)
   %ntokens_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2328 (base object)
   %ntokens_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2328 Instr:   %ntokens_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %eq_instrumented, align 4 is   %eq_instrumented = alloca i8*, align 4 with PAG id 2329
Checking PagEdge node associated to:   %eq_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2330
[SelectDef] On node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2330 Instr:   %eq_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call11_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 2331
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2332
[SelectDef] On node: FIObjVar ID: 2332 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2332 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2332 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call14_instrumented, i8** %quot_instrumented, align 4
Target of   store i8* %call14_instrumented, i8** %quot_instrumented, align 4 is   %quot_instrumented = alloca i8*, align 4 with PAG id 2333
Checking PagEdge node associated to:   %quot_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2334
[SelectDef] On node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2334 Instr:   %quot_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr28_instrumented, i8** %value_instrumented, align 4
Target of   store i8* %add.ptr28_instrumented, i8** %value_instrumented, align 4 is   %value_instrumented = alloca i8*, align 4 with PAG id 2335
Checking PagEdge node associated to:   %value_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2336
[SelectDef] On node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2336 Instr:   %value_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call30_instrumented, i8** %quot_instrumented, align 4
Target of   store i8* %call30_instrumented, i8** %quot_instrumented, align 4 is   %quot_instrumented = alloca i8*, align 4 with PAG id 2333
Checking PagEdge node associated to:   %quot_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2334
[SelectDef] On node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2334 Instr:   %quot_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call36_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call36_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 2337
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 2338
[SelectDef] On node: FIObjVar ID: 2338 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2338 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2338 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %57, i32* %retval_instrumented, align 4
Target of   store i32 %57, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call42_instrumented, i8** %name_instrumented, align 4
Target of   store i8* %call42_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 2325
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2326
[SelectDef] On node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2326 Instr:   %name_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %add.ptr43_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %add.ptr43_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2339
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2340
[SelectDef] On node: FIObjVar ID: 2340 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2340 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2340 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i16 %conv46_instrumented, i16* %size_instrumented, align 2
Target of   store i16 %conv46_instrumented, i16* %size_instrumented, align 2 is   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %66, i32 0, i32 1 with PAG id 2496
Checking PagEdge node associated to:   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %66, i32 0, i32 1
Visist starts at PAGNode 2495
[SelectDef] On node: ValVar ID: 2495
   %66 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2339-->2495
[SelectDef] On node: ValVar ID: 2339
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2340-->2339
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2339
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2340 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2487-->2339
[SelectDef] On node: ValVar ID: 2487
   %add.ptr43_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %61, i32 %sub_instrumented 
On edge 2484-->2487
[SelectDef] On node: ValVar ID: 2484
   %61 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2483-->2484
[SelectDef] On node: ValVar ID: 2483
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %60, i32 0, i32 2 
On edge 2482-->2483
[SelectDef] On node: ValVar ID: 2482
   %60 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2482
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
Found:
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2340 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %call47_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call47_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %74, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %74, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_rtrim_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2523
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2524
[SelectDef] On node: FIObjVar ID: 2524 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2524 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2524 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2525
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2526
[SelectDef] On node: FIObjVar ID: 2526 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2526 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2526 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %it_instrumented, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2527
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2528
[SelectDef] On node: FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2528 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4 is   %prev_instrumented = alloca i8*, align 4 with PAG id 2529
Checking PagEdge node associated to:   %prev_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2530
[SelectDef] On node: FIObjVar ID: 2530 (base object)
   %prev_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2530 (base object)
   %prev_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2530 Instr:   %prev_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %15, i8** %retval_instrumented, align 4
Target of   store i8* %15, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2521
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2522
[SelectDef] On node: FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2522 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %16, i8** %it_instrumented, align 4
Target of   store i8* %16, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2527
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2528
[SelectDef] On node: FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2528 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %17, i8** %retval_instrumented, align 4
Target of   store i8* %17, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2521
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2522
[SelectDef] On node: FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2522 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %22, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %22, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_attrvalue_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 2595
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 2596
[SelectDef] On node: FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 2596 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 2597
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 2598
[SelectDef] On node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 2598 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2599
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2600
[SelectDef] On node: FIObjVar ID: 2600 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2600 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2600 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 2601
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 2602
[SelectDef] On node: FIObjVar ID: 2602 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2602 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2602 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %13, i32* %retval_instrumented, align 4
Target of   store i32 %13, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2593
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2594
[SelectDef] On node: FIObjVar ID: 2594 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2594 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2594 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2593
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2594
[SelectDef] On node: FIObjVar ID: 2594 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2594 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2594 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %18, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %18, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function print_prettyxml_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2653
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2654
[SelectDef] On node: FIObjVar ID: 2654 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2654 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2654 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4 is   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2655
Checking PagEdge node associated to:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2656
[SelectDef] On node: FIObjVar ID: 2656 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2656 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2656 Instr:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4
Target of   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4 is   %num_tokens.addr_instrumented = alloca i32, align 4 with PAG id 2657
Checking PagEdge node associated to:   %num_tokens.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2658
[SelectDef] On node: FIObjVar ID: 2658 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2658 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2658 Instr:   %num_tokens.addr_instrumented = alloca i32, align 4
Finding defs for:   store i32* %indentlevel, i32** %indentlevel.addr_instrumented, align 4
Target of   store i32* %indentlevel, i32** %indentlevel.addr_instrumented, align 4 is   %indentlevel.addr_instrumented = alloca i32*, align 4 with PAG id 2659
Checking PagEdge node associated to:   %indentlevel.addr_instrumented = alloca i32*, align 4
Visist starts at PAGNode 2660
[SelectDef] On node: FIObjVar ID: 2660 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4 
Start node is a Def already, adding FIObjVar ID: 2660 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4  to result
Found:
	- NodeId: 2660 Instr:   %indentlevel.addr_instrumented = alloca i32*, align 4
Finding defs for:   store i32 0, i32* %i_instrumented, align 4
Target of   store i32 0, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2661
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2662
[SelectDef] On node: FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2662 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2663
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2664
[SelectDef] On node: FIObjVar ID: 2664 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2664 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2664 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %10, align 4
Target of   store i32 %inc_instrumented, i32* %10, align 4 is   %10 = load i32*, i32** %indentlevel.addr_instrumented, align 4 with PAG id 2687
Checking PagEdge node associated to:   %10 = load i32*, i32** %indentlevel.addr_instrumented, align 4
Visist starts at PAGNode 2659
[SelectDef] On node: ValVar ID: 2659
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2660-->2659
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2659
	-  %indentlevel.addr_instrumented = alloca i32*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2660 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2644-->2659
[SelectDef] On node: ValVar ID: 2644
 i32* %indentlevel { 3rd arg print_prettyxml_instrumented  }
On edge 332-->2644
On edge 332-->2644
Node 332 already visited
On edge 332-->2644
Node 332 already visited
[SelectDef] On node: ValVar ID: 332
   %indent = alloca i32, align 4 
On edge 333-->332
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 332
	-  %indent = alloca i32, align 4
[SelectDefs] Adding node: FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4 
On edge 228-->332
[SelectDef] On node: ValVar ID: 228
 i32 0 { constant data }
On edge 3-->228
Discarding edge
Found:
	- NodeId: 333 Instr:   %indent = alloca i32, align 4
	- NodeId: 2660 Instr:   %indentlevel.addr_instrumented = alloca i32*, align 4
Finding defs for:   store i32 0, i32* %j_instrumented, align 4
Target of   store i32 0, i32* %j_instrumented, align 4 is   %j_instrumented = alloca i32, align 4 with PAG id 2665
Checking PagEdge node associated to:   %j_instrumented = alloca i32, align 4
Visist starts at PAGNode 2666
[SelectDef] On node: FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2666 Instr:   %j_instrumented = alloca i32, align 4
Finding defs for:   store i32 %add14_instrumented, i32* %j_instrumented, align 4
Target of   store i32 %add14_instrumented, i32* %j_instrumented, align 4 is   %j_instrumented = alloca i32, align 4 with PAG id 2665
Checking PagEdge node associated to:   %j_instrumented = alloca i32, align 4
Visist starts at PAGNode 2666
[SelectDef] On node: FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2666 Instr:   %j_instrumented = alloca i32, align 4
Finding defs for:   store i32 %inc16_instrumented, i32* %j_instrumented, align 4
Target of   store i32 %inc16_instrumented, i32* %j_instrumented, align 4 is   %j_instrumented = alloca i32, align 4 with PAG id 2665
Checking PagEdge node associated to:   %j_instrumented = alloca i32, align 4
Visist starts at PAGNode 2666
[SelectDef] On node: FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2666 Instr:   %j_instrumented = alloca i32, align 4
Finding defs for:   store i32 %dec_instrumented, i32* %33, align 4
Target of   store i32 %dec_instrumented, i32* %33, align 4 is   %33 = load i32*, i32** %indentlevel.addr_instrumented, align 4 with PAG id 2749
Checking PagEdge node associated to:   %33 = load i32*, i32** %indentlevel.addr_instrumented, align 4
Visist starts at PAGNode 2659
[SelectDef] On node: ValVar ID: 2659
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2660-->2659
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2659
	-  %indentlevel.addr_instrumented = alloca i32*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2660 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2644-->2659
[SelectDef] On node: ValVar ID: 2644
 i32* %indentlevel { 3rd arg print_prettyxml_instrumented  }
On edge 332-->2644
On edge 332-->2644
Node 332 already visited
On edge 332-->2644
Node 332 already visited
[SelectDef] On node: ValVar ID: 332
   %indent = alloca i32, align 4 
On edge 333-->332
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 332
	-  %indent = alloca i32, align 4
[SelectDefs] Adding node: FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4 
On edge 228-->332
[SelectDef] On node: ValVar ID: 228
 i32 0 { constant data }
On edge 3-->228
Discarding edge
Found:
	- NodeId: 333 Instr:   %indent = alloca i32, align 4
	- NodeId: 2660 Instr:   %indentlevel.addr_instrumented = alloca i32*, align 4
Finding defs for:   store i32 %add23_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %add23_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2661
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2662
[SelectDef] On node: FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2662 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i32 %inc25_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %inc25_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2661
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2662
[SelectDef] On node: FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2662 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i16 %46, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %46, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function count_lines_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2791
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2792
[SelectDef] On node: FIObjVar ID: 2792 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2792 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2792 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Target of   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 is   %bufferlen.addr_instrumented = alloca i32, align 4 with PAG id 2793
Checking PagEdge node associated to:   %bufferlen.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2794
[SelectDef] On node: FIObjVar ID: 2794 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2794 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2794 Instr:   %bufferlen.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 2795
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2796
[SelectDef] On node: FIObjVar ID: 2796 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2796 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2796 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %6, i8** %it_instrumented, align 4
Target of   store i8* %6, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2797
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2798
[SelectDef] On node: FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2798 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i32 0, i32* %i_instrumented, align 4
Target of   store i32 0, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2799
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2800
[SelectDef] On node: FIObjVar ID: 2800 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2800 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2800 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2797
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2798
[SelectDef] On node: FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2798 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %15, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %15, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2797
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2798
[SelectDef] On node: FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2798 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %inc_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2799
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2800
[SelectDef] On node: FIObjVar ID: 2800 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2800 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2800 Instr:   %i_instrumented = alloca i32, align 4
Checking function print_tokenvalue_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2850
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2851
[SelectDef] On node: FIObjVar ID: 2851 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2851 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2851 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %token, %struct.sxmltok_t** %token.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %token, %struct.sxmltok_t** %token.addr_instrumented, align 4 is   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2852
Checking PagEdge node associated to:   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2853
[SelectDef] On node: FIObjVar ID: 2853 (base object)
   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2853 (base object)
   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2853 Instr:   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i16 %15, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %15, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function print_chartokens_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2894
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2895
[SelectDef] On node: FIObjVar ID: 2895 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2895 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2895 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4 is   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2896
Checking PagEdge node associated to:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2897
[SelectDef] On node: FIObjVar ID: 2897 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2897 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2897 Instr:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4
Target of   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4 is   %num_tokens.addr_instrumented = alloca i32, align 4 with PAG id 2898
Checking PagEdge node associated to:   %num_tokens.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2899
[SelectDef] On node: FIObjVar ID: 2899 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2899 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2899 Instr:   %num_tokens.addr_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %i_instrumented, align 4
Target of   store i32 0, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2900
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2901
[SelectDef] On node: FIObjVar ID: 2901 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2901 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2901 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2904
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2905
[SelectDef] On node: FIObjVar ID: 2905 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2905 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2905 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %10, i32* %retval_instrumented, align 4
Target of   store i32 %10, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2892
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2893
[SelectDef] On node: FIObjVar ID: 2893 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2893 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2893 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr3_instrumented, i8** %ampr_instrumented, align 4
Target of   store i8* %add.ptr3_instrumented, i8** %ampr_instrumented, align 4 is   %ampr_instrumented = alloca i8*, align 4 with PAG id 2902
Checking PagEdge node associated to:   %ampr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2903
[SelectDef] On node: FIObjVar ID: 2903 (base object)
   %ampr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2903 (base object)
   %ampr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2903 Instr:   %ampr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %inc_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2900
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2901
[SelectDef] On node: FIObjVar ID: 2901 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2901 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2901 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i32 %39, i32* %retval_instrumented, align 4
Target of   store i32 %39, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2892
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2893
[SelectDef] On node: FIObjVar ID: 2893 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2893 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2893 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %44, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %44, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
On input [0.IN] (PAGNode: 368) wrapper_scanf
--- Children ---
[1.ADEF] (PAGNode: 327) FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
[2.STOREUSE] (VFGNode: StoreVFGNode ID: 1755 StoreStmt: [Var2182 <-- Var2180]	
   store i16 %conv_instrumented, i16* %type2_instrumented, align 4 ) 
 storeParam:  %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0
Count target object: 0
--- Children ---
[3.ADEF - DOMINATOR ] (PAGNode: 1526) FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[5.ADEF - DOMINATOR ] (PAGNode: 1041) FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[6.ADEF - DOMINATOR ] (PAGNode: 1189) FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[7.ADEF - DOMINATOR ] (PAGNode: 1284) FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[8.ADEF - DOMINATOR ] (PAGNode: 1658) FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[9.ADEF - DOMINATOR ] (PAGNode: 1775) FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[10.ADEF - DOMINATOR ] (PAGNode: 1867) FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[11.ADEF - DOMINATOR ] (PAGNode: 2140) FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[12.ADEF - DOMINATOR ] (PAGNode: 2148) FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
[13.ADEF - DOMINATOR ] (PAGNode: 2320) FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[14.ADEF - DOMINATOR ] (PAGNode: 2598) FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
----------------
[15.STOREUSE] (VFGNode: StoreVFGNode ID: 1754 StoreStmt: [Var2147 <-- Var2177]	
   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 ) 
 storeParam:  %token_instrumented = alloca %struct.sxmltok_t*, align 4
Count target object: 0
--- Children ---
[12.ADEF - DOMINATOR ] (PAGNode: 2148) FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
----------------
[16.STOREUSE] (VFGNode: StoreVFGNode ID: 1570 StoreStmt: [Var681 <-- Var664]	
   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 ) 
 storeParam:  %bufferlen.addr_instrumented = alloca i32, align 4
Count target object: 0
--- Children ---
[17.ADEF - DOMINATOR ] (PAGNode: 682) FIObjVar ID: 682 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4 
----------------
[18.STOREUSE] (VFGNode: StoreVFGNode ID: 1799 StoreStmt: [Var2521 <-- Var2571]	
   store i8* %17, i8** %retval_instrumented, align 4 ) 
 storeParam:  %retval_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[19.ADEF - DOMINATOR ] (PAGNode: 2522) FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4 
----------------
[20.STOREUSE] (VFGNode: StoreVFGNode ID: 1796 StoreStmt: [Var2529 <-- Var2554]	
   store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4 ) 
 storeParam:  %prev_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[21.ADEF - DOMINATOR ] (PAGNode: 2530) FIObjVar ID: 2530 (base object)
   %prev_instrumented = alloca i8*, align 4 
----------------
[22.STOREUSE] (VFGNode: StoreVFGNode ID: 1793 StoreStmt: [Var2523 <-- Var2512]	
   store i8* %start, i8** %start.addr_instrumented, align 4 ) 
 storeParam:  %start.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[23.ADEF - DOMINATOR ] (PAGNode: 2524) FIObjVar ID: 2524 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
----------------
[24.STOREUSE] (VFGNode: StoreVFGNode ID: 1527 StoreStmt: [Var222 <-- Var216]	
   store i32 %c, i32* %c.addr, align 4 ) 
 storeParam:  %c.addr = alloca i32, align 4
Count target object: 0
--- Children ---
[25.ADEF - DOMINATOR ] (PAGNode: 223) FIObjVar ID: 223 (base object)
   %c.addr = alloca i32, align 4 
----------------
[26.STOREUSE] (VFGNode: StoreVFGNode ID: 1673 StoreStmt: [Var1449 <-- Var1437]	
   store i32 %c, i32* %c.addr_instrumented, align 4 ) 
 storeParam:  %c.addr_instrumented = alloca i32, align 4
Count target object: 0
--- Children ---
[27.ADEF - DOMINATOR ] (PAGNode: 1450) FIObjVar ID: 1450 (base object)
   %c.addr_instrumented = alloca i32, align 4 
----------------
[28.STOREUSE] (VFGNode: StoreVFGNode ID: 1798 StoreStmt: [Var2527 <-- Var2568]	
   store i8* %16, i8** %it_instrumented, align 4 ) 
 storeParam:  %it_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[29.ADEF - DOMINATOR ] (PAGNode: 2528) FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4 
----------------
[30.STOREUSE] (VFGNode: StoreVFGNode ID: 1524 StoreStmt: [Var160 <-- Var203]	
   store i32 %lor.ext, i32* %retval, align 4 ) 
 storeParam:  %retval = alloca i32, align 4
Count target object: 0
--- Children ---
[31.ADEF - DOMINATOR ] (PAGNode: 161) FIObjVar ID: 161 (base object)
   %retval = alloca i32, align 4 
----------------
[32.STOREUSE] (VFGNode: StoreVFGNode ID: 1636 StoreStmt: [Var1044 <-- Var1141]	
   store i8* %add.ptr18_instrumented, i8** %quest_instrumented, align 4 ) 
 storeParam:  %quest_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[33.ADEF - DOMINATOR ] (PAGNode: 1045) FIObjVar ID: 1045 (base object)
   %quest_instrumented = alloca i8*, align 4 
----------------
[34.STOREUSE] (VFGNode: StoreVFGNode ID: 1756 StoreStmt: [Var2192 <-- Var2190]	
   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4 ) 
 storeParam:  %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2
Count target object: 0
--- Children ---
[3.ADEF - DOMINATOR ] (PAGNode: 1526) FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[5.ADEF - DOMINATOR ] (PAGNode: 1041) FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[6.ADEF - DOMINATOR ] (PAGNode: 1189) FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[7.ADEF - DOMINATOR ] (PAGNode: 1284) FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[8.ADEF - DOMINATOR ] (PAGNode: 1658) FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[9.ADEF - DOMINATOR ] (PAGNode: 1775) FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[10.ADEF - DOMINATOR ] (PAGNode: 1867) FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[11.ADEF - DOMINATOR ] (PAGNode: 2140) FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[12.ADEF - DOMINATOR ] (PAGNode: 2148) FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
[13.ADEF - DOMINATOR ] (PAGNode: 2320) FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[14.ADEF - DOMINATOR ] (PAGNode: 2598) FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
----------------
[35.STOREUSE] (VFGNode: StoreVFGNode ID: 1679 StoreStmt: [Var1527 <-- Var1512]	
   store i8* %end, i8** %end.addr_instrumented, align 4 ) 
 storeParam:  %end.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[36.ADEF - DOMINATOR ] (PAGNode: 1528) FIObjVar ID: 1528 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
----------------
[37.STOREUSE] (VFGNode: StoreVFGNode ID: 1787 StoreStmt: [Var2325 <-- Var2479]	
   store i8* %call42_instrumented, i8** %name_instrumented, align 4 ) 
 storeParam:  %name_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[38.ADEF - DOMINATOR ] (PAGNode: 2326) FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
----------------
[39.STOREUSE] (VFGNode: StoreVFGNode ID: 1779 StoreStmt: [Var2333 <-- Var2419]	
   store i8* %call14_instrumented, i8** %quot_instrumented, align 4 ) 
 storeParam:  %quot_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[40.ADEF - DOMINATOR ] (PAGNode: 2334) FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
----------------
[41.STOREUSE] (VFGNode: StoreVFGNode ID: 1825 StoreStmt: [Var2791 <-- Var2783]	
   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 ) 
 storeParam:  %buffer.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[42.ADEF - DOMINATOR ] (PAGNode: 2792) FIObjVar ID: 2792 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
----------------
[43.STOREUSE] (VFGNode: StoreVFGNode ID: 1736 StoreStmt: [Var2025 <-- Var2011]	
   store i8* %end, i8** %end.addr_instrumented, align 4 ) 
 storeParam:  %end.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[44.ADEF - DOMINATOR ] (PAGNode: 2026) FIObjVar ID: 2026 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
----------------
[45.STOREUSE] (VFGNode: StoreVFGNode ID: 1530 StoreStmt: [Var289 <-- Var281]	
   store i32 %c, i32* %c.addr, align 4 ) 
 storeParam:  %c.addr = alloca i32, align 4
Count target object: 0
--- Children ---
[46.ADEF - DOMINATOR ] (PAGNode: 290) FIObjVar ID: 290 (base object)
   %c.addr = alloca i32, align 4 
----------------
[47.STOREUSE] (VFGNode: StoreVFGNode ID: 1656 StoreStmt: [Var1293 <-- Var1305]	
   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 ) 
 storeParam:  %start_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[48.ADEF - DOMINATOR ] (PAGNode: 1294) FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
----------------
[49.STOREUSE] (VFGNode: StoreVFGNode ID: 1773 StoreStmt: [Var2323 <-- Var2357]	
   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 ) 
 storeParam:  %end_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[50.ADEF - DOMINATOR ] (PAGNode: 2324) FIObjVar ID: 2324 (base object)
   %end_instrumented = alloca i8*, align 4 
----------------
[51.STOREUSE] (VFGNode: StoreVFGNode ID: 1718 StoreStmt: [Var1872 <-- Var1890]	
   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 ) 
 storeParam:  %end_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[52.ADEF - DOMINATOR ] (PAGNode: 1873) FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4 
----------------
[53.STOREUSE] (VFGNode: StoreVFGNode ID: 1783 StoreStmt: [Var2333 <-- Var2451]	
   store i8* %call30_instrumented, i8** %quot_instrumented, align 4 ) 
 storeParam:  %quot_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[40.ADEF - DOMINATOR ] (PAGNode: 2334) FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
----------------
[54.STOREUSE] (VFGNode: StoreVFGNode ID: 1671 StoreStmt: [Var1445 <-- Var1435]	
   store i8* %start, i8** %start.addr_instrumented, align 4 ) 
 storeParam:  %start.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[55.ADEF - DOMINATOR ] (PAGNode: 1446) FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
----------------
[56.STOREUSE] (VFGNode: StoreVFGNode ID: 1614 StoreStmt: [Var929 <-- Var920]	
   store i8* %start, i8** %start.addr_instrumented, align 4 ) 
 storeParam:  %start.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[57.ADEF - DOMINATOR ] (PAGNode: 930) FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
----------------
[58.STOREUSE] (VFGNode: StoreVFGNode ID: 1828 StoreStmt: [Var2797 <-- Var2807]	
   store i8* %6, i8** %it_instrumented, align 4 ) 
 storeParam:  %it_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[59.ADEF - DOMINATOR ] (PAGNode: 2798) FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4 
----------------
[60.STOREUSE] (VFGNode: StoreVFGNode ID: 1832 StoreStmt: [Var2797 <-- Var2832]	
   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 ) 
 storeParam:  %it_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[59.ADEF - DOMINATOR ] (PAGNode: 2798) FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4 
----------------
[61.STOREUSE] (VFGNode: StoreVFGNode ID: 1686 StoreStmt: [Var1529 <-- Var1623]	
   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4 ) 
 storeParam:  %start_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[62.ADEF - DOMINATOR ] (PAGNode: 1530) FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
----------------
[63.STOREUSE] (VFGNode: StoreVFGNode ID: 1742 StoreStmt: [Var2023 <-- Var2106]	
   store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4 ) 
 storeParam:  %start.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[64.ADEF - DOMINATOR ] (PAGNode: 2024) FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
----------------
[65.STOREUSE] (VFGNode: StoreVFGNode ID: 1706 StoreStmt: [Var1780 <-- Var1798]	
   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 ) 
 storeParam:  %end_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[66.ADEF - DOMINATOR ] (PAGNode: 1781) FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4 
----------------
[67.STOREUSE] (VFGNode: StoreVFGNode ID: 1645 StoreStmt: [Var1194 <-- Var1212]	
   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 ) 
 storeParam:  %end_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[68.ADEF - DOMINATOR ] (PAGNode: 1195) FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4 
----------------
[69.STOREUSE] (VFGNode: StoreVFGNode ID: 1693 StoreStmt: [Var1665 <-- Var1683]	
   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 ) 
 storeParam:  %end_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[70.ADEF - DOMINATOR ] (PAGNode: 1666) FIObjVar ID: 1666 (base object)
   %end_instrumented = alloca i8*, align 4 
----------------
[71.STOREUSE] (VFGNode: StoreVFGNode ID: 1692 StoreStmt: [Var1663 <-- Var1675]	
   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 ) 
 storeParam:  %start_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[72.ADEF - DOMINATOR ] (PAGNode: 1664) FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
----------------
[73.STOREUSE] (VFGNode: StoreVFGNode ID: 1827 StoreStmt: [Var2795 <-- Var2805]	
   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 ) 
 storeParam:  %end_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[74.ADEF - DOMINATOR ] (PAGNode: 2796) FIObjVar ID: 2796 (base object)
   %end_instrumented = alloca i8*, align 4 
----------------
[75.STOREUSE] (VFGNode: StoreVFGNode ID: 1795 StoreStmt: [Var2527 <-- Var2545]	
   store i8* %9, i8** %it_instrumented, align 4 ) 
 storeParam:  %it_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[29.ADEF - DOMINATOR ] (PAGNode: 2528) FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4 
----------------
[76.STOREUSE] (VFGNode: StoreVFGNode ID: 1776 StoreStmt: [Var2329 <-- Var2395]	
   store i8* %call6_instrumented, i8** %eq_instrumented, align 4 ) 
 storeParam:  %eq_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[77.ADEF - DOMINATOR ] (PAGNode: 2330) FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
----------------
[78.STOREUSE] (VFGNode: StoreVFGNode ID: 1696 StoreStmt: [Var1659 <-- Var1721]	
   store i8* %call8_instrumented, i8** %gt_instrumented, align 4 ) 
 storeParam:  %gt_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[79.ADEF - DOMINATOR ] (PAGNode: 1660) FIObjVar ID: 1660 (base object)
   %gt_instrumented = alloca i8*, align 4 
----------------
[80.STOREUSE] (VFGNode: StoreVFGNode ID: 1705 StoreStmt: [Var1778 <-- Var1790]	
   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 ) 
 storeParam:  %start_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[81.ADEF - DOMINATOR ] (PAGNode: 1779) FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
----------------
[82.STOREUSE] (VFGNode: StoreVFGNode ID: 1835 StoreStmt: [Var2850 <-- Var2841]	
   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 ) 
 storeParam:  %buffer.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[83.ADEF - DOMINATOR ] (PAGNode: 2851) FIObjVar ID: 2851 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
----------------
[84.STOREUSE] (VFGNode: StoreVFGNode ID: 1576 StoreStmt: [Var689 <-- Var719]	
   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 ) 
 storeParam:  %end_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[85.ADEF - DOMINATOR ] (PAGNode: 690) FIObjVar ID: 690 (base object)
   %end_instrumented = alloca i8*, align 4 
----------------
[86.STOREUSE] (VFGNode: StoreVFGNode ID: 1615 StoreStmt: [Var931 <-- Var921]	
   store i8* %end, i8** %end.addr_instrumented, align 4 ) 
 storeParam:  %end.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[87.ADEF - DOMINATOR ] (PAGNode: 932) FIObjVar ID: 932 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
----------------
[88.STOREUSE] (VFGNode: StoreVFGNode ID: 1695 StoreStmt: [Var1663 <-- Var1717]	
   store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4 ) 
 storeParam:  %start_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[72.ADEF - DOMINATOR ] (PAGNode: 1664) FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
----------------
[89.STOREUSE] (VFGNode: StoreVFGNode ID: 1616 StoreStmt: [Var933 <-- Var949]	
   store i8* %9, i8** %it_instrumented, align 4 ) 
 storeParam:  %it_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[90.ADEF - DOMINATOR ] (PAGNode: 934) FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
----------------
[91.STOREUSE] (VFGNode: StoreVFGNode ID: 1684 StoreStmt: [Var1533 <-- Var1608]	
   store i8* %call14_instrumented, i8** %colon_instrumented, align 4 ) 
 storeParam:  %colon_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[92.ADEF - DOMINATOR ] (PAGNode: 1534) FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
----------------
[93.STOREUSE] (VFGNode: StoreVFGNode ID: 1758 StoreStmt: [Var2205 <-- Var103]	
   store i16 0, i16* %size_instrumented, align 2 ) 
 storeParam:  %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1
Count target object: 0
--- Children ---
[3.ADEF - DOMINATOR ] (PAGNode: 1526) FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[5.ADEF - DOMINATOR ] (PAGNode: 1041) FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[6.ADEF - DOMINATOR ] (PAGNode: 1189) FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[7.ADEF - DOMINATOR ] (PAGNode: 1284) FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[8.ADEF - DOMINATOR ] (PAGNode: 1658) FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[9.ADEF - DOMINATOR ] (PAGNode: 1775) FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[10.ADEF - DOMINATOR ] (PAGNode: 1867) FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[11.ADEF - DOMINATOR ] (PAGNode: 2140) FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[12.ADEF - DOMINATOR ] (PAGNode: 2148) FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
[13.ADEF - DOMINATOR ] (PAGNode: 2320) FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[14.ADEF - DOMINATOR ] (PAGNode: 2598) FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
----------------
[94.STOREUSE] (VFGNode: StoreVFGNode ID: 1845 StoreStmt: [Var2902 <-- Var2934]	
   store i8* %add.ptr3_instrumented, i8** %ampr_instrumented, align 4 ) 
 storeParam:  %ampr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[95.ADEF - DOMINATOR ] (PAGNode: 2903) FIObjVar ID: 2903 (base object)
   %ampr_instrumented = alloca i8*, align 4 
----------------
[96.STOREUSE] (VFGNode: StoreVFGNode ID: 1595 StoreStmt: [Var701 <-- Var821]	
   store i8* %add.ptr32_instrumented, i8** %start29_instrumented, align 4 ) 
 storeParam:  %start29_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[97.ADEF - DOMINATOR ] (PAGNode: 702) FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
----------------
[98.STOREUSE] (VFGNode: StoreVFGNode ID: 1810 StoreStmt: [Var2653 <-- Var2641]	
   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 ) 
 storeParam:  %buffer.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[99.ADEF - DOMINATOR ] (PAGNode: 2654) FIObjVar ID: 2654 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
----------------
[100.STOREUSE] (VFGNode: StoreVFGNode ID: 1581 StoreStmt: [Var695 <-- Var744]	
   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4 ) 
 storeParam:  %start_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[101.ADEF - DOMINATOR ] (PAGNode: 696) FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
----------------
[102.STOREUSE] (VFGNode: StoreVFGNode ID: 1728 StoreStmt: [Var1959 <-- Var1945]	
   store i8* %end, i8** %end.addr_instrumented, align 4 ) 
 storeParam:  %end.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[103.ADEF - DOMINATOR ] (PAGNode: 1960) FIObjVar ID: 1960 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
----------------
[104.STOREUSE] (VFGNode: StoreVFGNode ID: 1797 StoreStmt: [Var2521 <-- Var2562]	
   store i8* %15, i8** %retval_instrumented, align 4 ) 
 storeParam:  %retval_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[19.ADEF - DOMINATOR ] (PAGNode: 2522) FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4 
----------------
[105.STOREUSE] (VFGNode: StoreVFGNode ID: 1644 StoreStmt: [Var1192 <-- Var1204]	
   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 ) 
 storeParam:  %start_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[106.ADEF - DOMINATOR ] (PAGNode: 1193) FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
----------------
[107.STOREUSE] (VFGNode: StoreVFGNode ID: 1665 StoreStmt: [Var1287 <-- Var1402]	
   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4 ) 
 storeParam:  %gt_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[108.ADEF - DOMINATOR ] (PAGNode: 1288) FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4 
----------------
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------
[110.STOREUSE] (VFGNode: StoreVFGNode ID: 1709 StoreStmt: [Var1778 <-- Var1819]	
   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 ) 
 storeParam:  %start_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[81.ADEF - DOMINATOR ] (PAGNode: 1779) FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
----------------
[111.STOREUSE] (VFGNode: StoreVFGNode ID: 1659 StoreStmt: [Var1289 <-- Var1347]	
   store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4 ) 
 storeParam:  %name_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[112.ADEF - DOMINATOR ] (PAGNode: 1290) FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
----------------
[113.STOREUSE] (VFGNode: StoreVFGNode ID: 1774 StoreStmt: [Var2325 <-- Var2361]	
   store i8* %call_instrumented, i8** %name_instrumented, align 4 ) 
 storeParam:  %name_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[38.ADEF - DOMINATOR ] (PAGNode: 2326) FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
----------------
[114.STOREUSE] (VFGNode: StoreVFGNode ID: 1743 StoreStmt: [Var2021 <-- Var2109]	
   store i8* %30, i8** %retval_instrumented, align 4 ) 
 storeParam:  %retval_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[115.ADEF - DOMINATOR ] (PAGNode: 2022) FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4 
----------------
[116.STOREUSE] (VFGNode: StoreVFGNode ID: 1631 StoreStmt: [Var1048 <-- Var1097]	
   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 ) 
 storeParam:  %start_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[117.ADEF - DOMINATOR ] (PAGNode: 1049) FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
----------------
[118.STOREUSE] (VFGNode: StoreVFGNode ID: 1657 StoreStmt: [Var1295 <-- Var1313]	
   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 ) 
 storeParam:  %end_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[119.ADEF - DOMINATOR ] (PAGNode: 1296) FIObjVar ID: 1296 (base object)
   %end_instrumented = alloca i8*, align 4 
----------------
[120.STOREUSE] (VFGNode: StoreVFGNode ID: 1569 StoreStmt: [Var679 <-- Var663]	
   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 ) 
 storeParam:  %buffer.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[121.ADEF - DOMINATOR ] (PAGNode: 680) FIObjVar ID: 680 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
----------------
[122.STOREUSE] (VFGNode: StoreVFGNode ID: 1672 StoreStmt: [Var1447 <-- Var1436]	
   store i8* %end, i8** %end.addr_instrumented, align 4 ) 
 storeParam:  %end.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[123.ADEF - DOMINATOR ] (PAGNode: 1448) FIObjVar ID: 1448 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
----------------
[124.STOREUSE] (VFGNode: StoreVFGNode ID: 1628 StoreStmt: [Var1048 <-- Var1060]	
   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 ) 
 storeParam:  %start_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[117.ADEF - DOMINATOR ] (PAGNode: 1049) FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
----------------
[125.STOREUSE] (VFGNode: StoreVFGNode ID: 1648 StoreStmt: [Var1192 <-- Var1234]	
   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 ) 
 storeParam:  %start_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[106.ADEF - DOMINATOR ] (PAGNode: 1193) FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
----------------
[126.STOREUSE] (VFGNode: StoreVFGNode ID: 1727 StoreStmt: [Var1957 <-- Var1944]	
   store i8* %start, i8** %start.addr_instrumented, align 4 ) 
 storeParam:  %start.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[127.ADEF - DOMINATOR ] (PAGNode: 1958) FIObjVar ID: 1958 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
----------------
[128.STOREUSE] (VFGNode: StoreVFGNode ID: 1765 StoreStmt: [Var2257 <-- Var2247]	
   store i8* %end, i8** %end.addr_instrumented, align 4 ) 
 storeParam:  %end.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[129.ADEF - DOMINATOR ] (PAGNode: 2258) FIObjVar ID: 2258 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
----------------
[130.STOREUSE] (VFGNode: StoreVFGNode ID: 1622 StoreStmt: [Var995 <-- Var982]	
   store i8* %ptr, i8** %ptr.addr_instrumented, align 4 ) 
 storeParam:  %ptr.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[131.ADEF - DOMINATOR ] (PAGNode: 996) FIObjVar ID: 996 (base object)
   %ptr.addr_instrumented = alloca i8*, align 4 
----------------
[132.STOREUSE] (VFGNode: StoreVFGNode ID: 1629 StoreStmt: [Var1050 <-- Var1068]	
   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 ) 
 storeParam:  %end_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[133.ADEF - DOMINATOR ] (PAGNode: 1051) FIObjVar ID: 1051 (base object)
   %end_instrumented = alloca i8*, align 4 
----------------
[134.STOREUSE] (VFGNode: StoreVFGNode ID: 1804 StoreStmt: [Var2599 <-- Var2584]	
   store i8* %end, i8** %end.addr_instrumented, align 4 ) 
 storeParam:  %end.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[135.ADEF - DOMINATOR ] (PAGNode: 2600) FIObjVar ID: 2600 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
----------------
[136.STOREUSE] (VFGNode: StoreVFGNode ID: 1749 StoreStmt: [Var2143 <-- Var2124]	
   store i8* %start, i8** %start.addr_instrumented, align 4 ) 
 storeParam:  %start.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[137.ADEF - DOMINATOR ] (PAGNode: 2144) FIObjVar ID: 2144 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
----------------
[138.STOREUSE] (VFGNode: StoreVFGNode ID: 1549 StoreStmt: [Var328 <-- Var470]	
   store i32 %add30, i32* %bufferlen, align 4 ) 
 storeParam:  %bufferlen = alloca i32, align 4
Count target object: 0
--- Children ---
[139.ADEF - DOMINATOR ] (PAGNode: 329) FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4 
----------------
[140.STOREUSE] (VFGNode: StoreVFGNode ID: 1674 StoreStmt: [Var1451 <-- Var1491]	
   store i8* %call_instrumented, i8** %it_instrumented, align 4 ) 
 storeParam:  %it_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[141.ADEF - DOMINATOR ] (PAGNode: 1452) FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
----------------
[142.STOREUSE] (VFGNode: StoreVFGNode ID: 1757 StoreStmt: [Var2202 <-- Var2200]	
   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4 ) 
 storeParam:  %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3
Count target object: 0
--- Children ---
[3.ADEF - DOMINATOR ] (PAGNode: 1526) FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[5.ADEF - DOMINATOR ] (PAGNode: 1041) FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[6.ADEF - DOMINATOR ] (PAGNode: 1189) FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[7.ADEF - DOMINATOR ] (PAGNode: 1284) FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[8.ADEF - DOMINATOR ] (PAGNode: 1658) FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[9.ADEF - DOMINATOR ] (PAGNode: 1775) FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[10.ADEF - DOMINATOR ] (PAGNode: 1867) FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[11.ADEF - DOMINATOR ] (PAGNode: 2140) FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[12.ADEF - DOMINATOR ] (PAGNode: 2148) FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
[13.ADEF - DOMINATOR ] (PAGNode: 2320) FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[14.ADEF - DOMINATOR ] (PAGNode: 2598) FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
----------------
[143.STOREUSE] (VFGNode: StoreVFGNode ID: 1764 StoreStmt: [Var2255 <-- Var2246]	
   store i8* %start, i8** %start.addr_instrumented, align 4 ) 
 storeParam:  %start.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[144.ADEF - DOMINATOR ] (PAGNode: 2256) FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
----------------
[145.STOREUSE] (VFGNode: StoreVFGNode ID: 1778 StoreStmt: [Var2331 <-- Var2407]	
   store i8* %call11_instrumented, i8** %space_instrumented, align 4 ) 
 storeParam:  %space_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[146.ADEF - DOMINATOR ] (PAGNode: 2332) FIObjVar ID: 2332 (base object)
   %space_instrumented = alloca i8*, align 4 
----------------
[147.STOREUSE] (VFGNode: StoreVFGNode ID: 1750 StoreStmt: [Var2145 <-- Var2125]	
   store i8* %end, i8** %end.addr_instrumented, align 4 ) 
 storeParam:  %end.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[148.ADEF - DOMINATOR ] (PAGNode: 2146) FIObjVar ID: 2146 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
----------------
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------
[151.STOREUSE] (VFGNode: StoreVFGNode ID: 1735 StoreStmt: [Var2023 <-- Var2010]	
   store i8* %start, i8** %start.addr_instrumented, align 4 ) 
 storeParam:  %start.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[64.ADEF - DOMINATOR ] (PAGNode: 2024) FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
----------------
[152.STOREUSE] (VFGNode: StoreVFGNode ID: 1717 StoreStmt: [Var1870 <-- Var1882]	
   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 ) 
 storeParam:  %start_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[153.ADEF - DOMINATOR ] (PAGNode: 1871) FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
----------------
[154.STOREUSE] (VFGNode: StoreVFGNode ID: 1596 StoreStmt: [Var703 <-- Var825]	
   store i8* %call34_instrumented, i8** %lt33_instrumented, align 4 ) 
 storeParam:  %lt33_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[155.ADEF - DOMINATOR ] (PAGNode: 704) FIObjVar ID: 704 (base object)
   %lt33_instrumented = alloca i8*, align 4 
----------------
[156.STOREUSE] (VFGNode: StoreVFGNode ID: 1681 StoreStmt: [Var1535 <-- Var1550]	
   store i8* %call_instrumented, i8** %ampr_instrumented, align 4 ) 
 storeParam:  %ampr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[157.ADEF - DOMINATOR ] (PAGNode: 1536) FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
----------------
[158.STOREUSE] (VFGNode: StoreVFGNode ID: 1617 StoreStmt: [Var933 <-- Var969]	
   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 ) 
 storeParam:  %it_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[90.ADEF - DOMINATOR ] (PAGNode: 934) FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
----------------
[159.STOREUSE] (VFGNode: StoreVFGNode ID: 1772 StoreStmt: [Var2321 <-- Var2349]	
   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 ) 
 storeParam:  %start_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[160.ADEF - DOMINATOR ] (PAGNode: 2322) FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
----------------
[161.STOREUSE] (VFGNode: StoreVFGNode ID: 1522 StoreStmt: [Var162 <-- Var154]	
   store i32 %c, i32* %c.addr, align 4 ) 
 storeParam:  %c.addr = alloca i32, align 4
Count target object: 0
--- Children ---
[162.ADEF - DOMINATOR ] (PAGNode: 163) FIObjVar ID: 163 (base object)
   %c.addr = alloca i32, align 4 
----------------
[163.STOREUSE] (VFGNode: StoreVFGNode ID: 1722 StoreStmt: [Var1868 <-- Var1916]	
   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 ) 
 storeParam:  %bracket_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[164.ADEF - DOMINATOR ] (PAGNode: 1869) FIObjVar ID: 1869 (base object)
   %bracket_instrumented = alloca i8*, align 4 
----------------
[165.STOREUSE] (VFGNode: StoreVFGNode ID: 1623 StoreStmt: [Var1008 <-- Var1006]	
   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4 ) 
 storeParam:  %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0
Count target object: 0
--- Children ---
[166.ADEF - DOMINATOR ] (PAGNode: 1524) FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[167.SDEF] (PAGNode: 688) FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[167.SDEF] (PAGNode: 688) FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[168.ADEF - DOMINATOR ] (PAGNode: 992) FIObjVar ID: 992 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[169.ADEF - DOMINATOR ] (PAGNode: 1039) FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[170.ADEF - DOMINATOR ] (PAGNode: 1187) FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[171.ADEF - DOMINATOR ] (PAGNode: 1282) FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[172.ADEF - DOMINATOR ] (PAGNode: 1656) FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[173.ADEF - DOMINATOR ] (PAGNode: 1773) FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[174.ADEF - DOMINATOR ] (PAGNode: 1865) FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[175.ADEF - DOMINATOR ] (PAGNode: 2318) FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[176.ADEF - DOMINATOR ] (PAGNode: 2596) FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
----------------
[177.STOREUSE] (VFGNode: StoreVFGNode ID: 1766 StoreStmt: [Var2259 <-- Var2275]	
   store i8* %9, i8** %it_instrumented, align 4 ) 
 storeParam:  %it_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[178.ADEF - DOMINATOR ] (PAGNode: 2260) FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
----------------
[179.STOREUSE] (VFGNode: StoreVFGNode ID: 1664 StoreStmt: [Var1287 <-- Var1384]	
   store i8* %add.ptr24_instrumented, i8** %gt_instrumented, align 4 ) 
 storeParam:  %gt_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[108.ADEF - DOMINATOR ] (PAGNode: 1288) FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4 
----------------
[180.STOREUSE] (VFGNode: StoreVFGNode ID: 1721 StoreStmt: [Var1870 <-- Var1911]	
   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 ) 
 storeParam:  %start_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[153.ADEF - DOMINATOR ] (PAGNode: 1871) FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
----------------
[181.STOREUSE] (VFGNode: StoreVFGNode ID: 1680 StoreStmt: [Var1529 <-- Var1546]	
   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 ) 
 storeParam:  %start_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[62.ADEF - DOMINATOR ] (PAGNode: 1530) FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
----------------
[182.STOREUSE] (VFGNode: StoreVFGNode ID: 1740 StoreStmt: [Var2033 <-- Var2088]	
   store i8* %call8_instrumented, i8** %it_instrumented, align 4 ) 
 storeParam:  %it_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[183.ADEF - DOMINATOR ] (PAGNode: 2034) FIObjVar ID: 2034 (base object)
   %it_instrumented = alloca i8*, align 4 
----------------
[184.STOREUSE] (VFGNode: StoreVFGNode ID: 1632 StoreStmt: [Var1046 <-- Var1101]	
   store i8* %call6_instrumented, i8** %space_instrumented, align 4 ) 
 storeParam:  %space_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[185.ADEF - DOMINATOR ] (PAGNode: 1047) FIObjVar ID: 1047 (base object)
   %space_instrumented = alloca i8*, align 4 
----------------
[186.STOREUSE] (VFGNode: StoreVFGNode ID: 1767 StoreStmt: [Var2259 <-- Var2295]	
   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 ) 
 storeParam:  %it_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[178.ADEF - DOMINATOR ] (PAGNode: 2260) FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
----------------
[187.STOREUSE] (VFGNode: StoreVFGNode ID: 1550 StoreStmt: [Var472 <-- Var228]	
   store i32 0, i32* %bufferpos31, align 4 ) 
 storeParam:  %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Count target object: 0
--- Children ---
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
----------------
[189.STOREUSE] (VFGNode: StoreVFGNode ID: 1683 StoreStmt: [Var1531 <-- Var1604]	
   store i8* %cond_instrumented, i8** %limit_instrumented, align 4 ) 
 storeParam:  %limit_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[190.ADEF - DOMINATOR ] (PAGNode: 1532) FIObjVar ID: 1532 (base object)
   %limit_instrumented = alloca i8*, align 4 
----------------
[191.STOREUSE] (VFGNode: StoreVFGNode ID: 1794 StoreStmt: [Var2525 <-- Var2513]	
   store i8* %end, i8** %end.addr_instrumented, align 4 ) 
 storeParam:  %end.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[192.ADEF - DOMINATOR ] (PAGNode: 2526) FIObjVar ID: 2526 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
----------------
[193.STOREUSE] (VFGNode: StoreVFGNode ID: 1660 StoreStmt: [Var1291 <-- Var1351]	
   store i8* %call10_instrumented, i8** %space_instrumented, align 4 ) 
 storeParam:  %space_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[194.ADEF - DOMINATOR ] (PAGNode: 1292) FIObjVar ID: 1292 (base object)
   %space_instrumented = alloca i8*, align 4 
----------------
[195.STOREUSE] (VFGNode: StoreVFGNode ID: 1582 StoreStmt: [Var697 <-- Var748]	
   store i8* %call_instrumented, i8** %lt_instrumented, align 4 ) 
 storeParam:  %lt_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[196.ADEF - DOMINATOR ] (PAGNode: 698) FIObjVar ID: 698 (base object)
   %lt_instrumented = alloca i8*, align 4 
----------------
[197.STOREUSE] (VFGNode: StoreVFGNode ID: 1826 StoreStmt: [Var2793 <-- Var2784]	
   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 ) 
 storeParam:  %bufferlen.addr_instrumented = alloca i32, align 4
Count target object: 0
--- Children ---
[198.ADEF - DOMINATOR ] (PAGNode: 2794) FIObjVar ID: 2794 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4 
----------------
[199.STOREUSE] (VFGNode: StoreVFGNode ID: 1782 StoreStmt: [Var2335 <-- Var2444]	
   store i8* %add.ptr28_instrumented, i8** %value_instrumented, align 4 ) 
 storeParam:  %value_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[200.ADEF - DOMINATOR ] (PAGNode: 2336) FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
----------------
[201.STOREUSE] (VFGNode: StoreVFGNode ID: 1741 StoreStmt: [Var2021 <-- Var2101]	
   store i8* %28, i8** %retval_instrumented, align 4 ) 
 storeParam:  %retval_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[115.ADEF - DOMINATOR ] (PAGNode: 2022) FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4 
----------------
[202.STOREUSE] (VFGNode: StoreVFGNode ID: 1546 StoreStmt: [Var328 <-- Var423]	
   store i32 %sub, i32* %bufferlen, align 4 ) 
 storeParam:  %bufferlen = alloca i32, align 4
Count target object: 0
--- Children ---
[139.ADEF - DOMINATOR ] (PAGNode: 329) FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4 
----------------
[203.STOREUSE] (VFGNode: StoreVFGNode ID: 1839 StoreStmt: [Var2894 <-- Var2882]	
   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 ) 
 storeParam:  %buffer.addr_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[204.ADEF - DOMINATOR ] (PAGNode: 2895) FIObjVar ID: 2895 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
----------------
[205.STOREUSE] (VFGNode: StoreVFGNode ID: 1649 StoreStmt: [Var1190 <-- Var1239]	
   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 ) 
 storeParam:  %bracket_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[206.ADEF - DOMINATOR ] (PAGNode: 1191) FIObjVar ID: 1191 (base object)
   %bracket_instrumented = alloca i8*, align 4 
----------------
[207.STOREUSE] (VFGNode: StoreVFGNode ID: 1830 StoreStmt: [Var2797 <-- Var2818]	
   store i8* %call_instrumented, i8** %it_instrumented, align 4 ) 
 storeParam:  %it_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[59.ADEF - DOMINATOR ] (PAGNode: 2798) FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4 
----------------
[208.STOREUSE] (VFGNode: StoreVFGNode ID: 1710 StoreStmt: [Var1776 <-- Var1824]	
   store i8* %call6_instrumented, i8** %dash_instrumented, align 4 ) 
 storeParam:  %dash_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[209.ADEF - DOMINATOR ] (PAGNode: 1777) FIObjVar ID: 1777 (base object)
   %dash_instrumented = alloca i8*, align 4 
----------------
[210.STOREUSE] (VFGNode: StoreVFGNode ID: 1698 StoreStmt: [Var1661 <-- Var1731]	
   store i8* %call13_instrumented, i8** %space_instrumented, align 4 ) 
 storeParam:  %space_instrumented = alloca i8*, align 4
Count target object: 0
--- Children ---
[211.ADEF - DOMINATOR ] (PAGNode: 1662) FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
----------------
----------------

Checking PagEdge node associated to:   %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0
Visist starts at PAGNode 2181
[DEBUG] findFirstDominator found 1 elements
Considering Def:
[12.ADEF - DOMINATOR ] (PAGNode: 2148) FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 

Of Use:
[2.STOREUSE] (VFGNode: StoreVFGNode ID: 1755 StoreStmt: [Var2182 <-- Var2180]	
   store i16 %conv_instrumented, i16* %type2_instrumented, align 4 ) 
 storeParam:  %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0
Count target object: 0
--- Children ---
[3.ADEF - DOMINATOR ] (PAGNode: 1526) FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[5.ADEF - DOMINATOR ] (PAGNode: 1041) FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[6.ADEF - DOMINATOR ] (PAGNode: 1189) FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[7.ADEF - DOMINATOR ] (PAGNode: 1284) FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[8.ADEF - DOMINATOR ] (PAGNode: 1658) FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[9.ADEF - DOMINATOR ] (PAGNode: 1775) FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[10.ADEF - DOMINATOR ] (PAGNode: 1867) FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[11.ADEF - DOMINATOR ] (PAGNode: 2140) FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[12.ADEF - DOMINATOR ] (PAGNode: 2148) FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
[13.ADEF - DOMINATOR ] (PAGNode: 2320) FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[14.ADEF - DOMINATOR ] (PAGNode: 2598) FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
----------------

Pag ID of source is 2147
Target: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
StoreStmt: [Var2147 <-- Var2177]	
   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 
  store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Checking aliasing of arrayidx_instrumented with argument state of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument args of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument type of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument start of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument end of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument state_id of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument args_id of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument start_id of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument end_id of state_pushtoken_instrumented
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2148
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %bufferlen.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 682
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2522
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %prev_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2530
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2524
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 223
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %c.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 1450
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2528
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 161
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %quest_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1045
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2
Visist starts at PAGNode 2191
[DEBUG] findFirstDominator found 1 elements
Considering Def:
[12.ADEF - DOMINATOR ] (PAGNode: 2148) FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 

Of Use:
[34.STOREUSE] (VFGNode: StoreVFGNode ID: 1756 StoreStmt: [Var2192 <-- Var2190]	
   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4 ) 
 storeParam:  %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2
Count target object: 0
--- Children ---
[3.ADEF - DOMINATOR ] (PAGNode: 1526) FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[5.ADEF - DOMINATOR ] (PAGNode: 1041) FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[6.ADEF - DOMINATOR ] (PAGNode: 1189) FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[7.ADEF - DOMINATOR ] (PAGNode: 1284) FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[8.ADEF - DOMINATOR ] (PAGNode: 1658) FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[9.ADEF - DOMINATOR ] (PAGNode: 1775) FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[10.ADEF - DOMINATOR ] (PAGNode: 1867) FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[11.ADEF - DOMINATOR ] (PAGNode: 2140) FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[12.ADEF - DOMINATOR ] (PAGNode: 2148) FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
[13.ADEF - DOMINATOR ] (PAGNode: 2320) FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[14.ADEF - DOMINATOR ] (PAGNode: 2598) FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
----------------

Pag ID of source is 2147
Target: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
StoreStmt: [Var2147 <-- Var2177]	
   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 
  store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Checking aliasing of arrayidx_instrumented with argument state of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument args of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument type of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument start of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument end of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument state_id of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument args_id of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument start_id of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument end_id of state_pushtoken_instrumented
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1528
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2326
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %quot_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2334
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2792
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2026
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 290
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1294
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2324
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1873
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %quot_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2334
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1446
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 930
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2798
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2798
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1530
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2024
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1781
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1195
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1666
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1664
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2796
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2528
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %eq_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2330
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1660
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1779
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2851
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 690
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 932
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1664
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 934
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %colon_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1534
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1
Visist starts at PAGNode 2204
[DEBUG] findFirstDominator found 1 elements
Considering Def:
[12.ADEF - DOMINATOR ] (PAGNode: 2148) FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 

Of Use:
[93.STOREUSE] (VFGNode: StoreVFGNode ID: 1758 StoreStmt: [Var2205 <-- Var103]	
   store i16 0, i16* %size_instrumented, align 2 ) 
 storeParam:  %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1
Count target object: 0
--- Children ---
[3.ADEF - DOMINATOR ] (PAGNode: 1526) FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[5.ADEF - DOMINATOR ] (PAGNode: 1041) FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[6.ADEF - DOMINATOR ] (PAGNode: 1189) FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[7.ADEF - DOMINATOR ] (PAGNode: 1284) FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[8.ADEF - DOMINATOR ] (PAGNode: 1658) FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[9.ADEF - DOMINATOR ] (PAGNode: 1775) FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[10.ADEF - DOMINATOR ] (PAGNode: 1867) FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[11.ADEF - DOMINATOR ] (PAGNode: 2140) FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[12.ADEF - DOMINATOR ] (PAGNode: 2148) FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
[13.ADEF - DOMINATOR ] (PAGNode: 2320) FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[14.ADEF - DOMINATOR ] (PAGNode: 2598) FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
----------------

Pag ID of source is 2147
Target: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
StoreStmt: [Var2147 <-- Var2177]	
   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 
  store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Checking aliasing of arrayidx_instrumented with argument state of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument args of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument type of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument start of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument end of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument state_id of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument args_id of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument start_id of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument end_id of state_pushtoken_instrumented
Checking PagEdge node associated to:   %ampr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2903
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start29_instrumented = alloca i8*, align 4
Visist starts at PAGNode 702
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2654
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 696
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1960
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2522
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1193
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1288
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Visist starts at PAGNode 691
[DEBUG] findFirstDominator found 1 elements
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Considering Def:
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[224.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[225.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[226.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[227.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[228.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[229.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[230.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[231.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[232.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[233.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[244.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[245.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[246.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[247.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[248.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[249.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[250.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[251.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[252.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[253.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[264.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[265.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[266.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[267.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[268.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[269.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[270.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[271.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[272.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[273.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[284.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[285.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[286.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[287.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[288.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[289.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[290.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[291.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[292.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[293.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[304.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[305.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[306.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[307.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[308.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[309.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[310.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[311.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[312.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[313.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[324.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[325.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[326.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[327.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[328.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[329.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[330.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[331.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[332.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[333.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[346.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[347.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[348.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[349.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[350.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[351.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[352.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[353.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[354.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[355.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[369.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[370.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[371.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[372.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[373.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[374.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[375.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[376.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[377.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[378.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[389.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[390.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[391.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[392.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[393.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[394.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[395.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[396.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[397.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[398.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[409.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[410.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[411.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[412.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[413.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[414.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[415.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[416.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[417.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[418.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[109.STOREUSE] (VFGNode: StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	
   store i8* %9, i8** %buffer1_instrumented, align 4 ) 
 storeParam:  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1779
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1290
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2326
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2022
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1049
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1296
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 680
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1448
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1049
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1193
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1958
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2258
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %ptr.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 996
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1051
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2600
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2144
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 329
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1452
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3
Visist starts at PAGNode 2201
[DEBUG] findFirstDominator found 1 elements
Considering Def:
[12.ADEF - DOMINATOR ] (PAGNode: 2148) FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 

Of Use:
[142.STOREUSE] (VFGNode: StoreVFGNode ID: 1757 StoreStmt: [Var2202 <-- Var2200]	
   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4 ) 
 storeParam:  %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3
Count target object: 0
--- Children ---
[3.ADEF - DOMINATOR ] (PAGNode: 1526) FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[5.ADEF - DOMINATOR ] (PAGNode: 1041) FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[6.ADEF - DOMINATOR ] (PAGNode: 1189) FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[7.ADEF - DOMINATOR ] (PAGNode: 1284) FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[8.ADEF - DOMINATOR ] (PAGNode: 1658) FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[9.ADEF - DOMINATOR ] (PAGNode: 1775) FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[10.ADEF - DOMINATOR ] (PAGNode: 1867) FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[11.ADEF - DOMINATOR ] (PAGNode: 2140) FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[12.ADEF - DOMINATOR ] (PAGNode: 2148) FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
[13.ADEF - DOMINATOR ] (PAGNode: 2320) FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
[14.ADEF - DOMINATOR ] (PAGNode: 2598) FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
----------------

Pag ID of source is 2147
Target: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
StoreStmt: [Var2147 <-- Var2177]	
   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 
  store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Checking aliasing of arrayidx_instrumented with argument state of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument args of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument type of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument start of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument end of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument state_id of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument args_id of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument start_id of state_pushtoken_instrumented
Checking aliasing of arrayidx_instrumented with argument end_id of state_pushtoken_instrumented
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2256
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2332
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2146
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Visist starts at PAGNode 691
[DEBUG] findFirstDominator found 1 elements
  %args_instrumented = alloca %struct.sxml_args_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Node:   store i8* %9, i8** %buffer1_instrumented, align 4
Node:   %14 = load i8*, i8** %buffer5_instrumented, align 4
Node:   %add.ptr6_instrumented = getelementptr inbounds i8, i8* %14, i32 %15
Node:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node:   %16 = load i8*, i8** %start_instrumented, align 4
Node: i8* %start
Node:   store i8* %start, i8** %start.addr_instrumented, align 4
Node:   %9 = load i8*, i8** %start.addr_instrumented, align 4
Node:   store i8* %9, i8** %it_instrumented, align 4
Node:   %16 = load i8*, i8** %it_instrumented, align 4
Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node: ; Function Attrs: noinline nounwind optnone
define internal i8* @str_ltrim_instrumented(i8* %start, i8* %end, i32 %start_id, i32 %end_id) #0 {
entry_instrumented:
  %0 = load i16, i16* @zbouncer_recursion_counter, align 2
  %1 = sext i16 %0 to i32
  %2 = add i32 %1, 1
  %3 = trunc i32 %2 to i16
  store i16 %3, i16* @zbouncer_recursion_counter, align 2
  %start.addr_instrumented = alloca i8*, align 4
  %end.addr_instrumented = alloca i8*, align 4
  %it_instrumented = alloca i8*, align 4
  store i8* %start, i8** %start.addr_instrumented, align 4
  store i8* %end, i8** %end.addr_instrumented, align 4
  %4 = load i8*, i8** %start.addr_instrumented, align 4
  %5 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp_instrumented = icmp ule i8* %4, %5
  br i1 %cmp_instrumented, label %if.then_instrumented, label %if.else_instrumented

if.then_instrumented:                             ; preds = %entry_instrumented
  br label %if.end_instrumented

if.else_instrumented:                             ; preds = %entry_instrumented
  %6 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.8, i32 0, i32 0
  %7 = getelementptr inbounds [13 x i8], [13 x i8]* @.str.2, i32 0, i32 0
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.str_ltrim, i32 0, i32 0
  call void @__assert_fail(i8* %6, i8* %7, i32 209, i8* %8) #6
  unreachable

if.end_instrumented:                              ; preds = %if.then_instrumented
  %9 = load i8*, i8** %start.addr_instrumented, align 4
  store i8* %9, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.cond_instrumented:                            ; preds = %for.inc_instrumented, %if.end_instrumented
  %10 = load i8*, i8** %it_instrumented, align 4
  %11 = load i8*, i8** %end.addr_instrumented, align 4
  %cmp1_instrumented = icmp ne i8* %10, %11
  br i1 %cmp1_instrumented, label %land.rhs_instrumented, label %land.end_instrumented

land.rhs_instrumented:                            ; preds = %for.cond_instrumented
  %12 = load i8*, i8** %it_instrumented, align 4
  %13 = load i8, i8* %12, align 1
  %conv_instrumented = zext i8 %13 to i32
  %call_instrumented = call i32 @WhiteSpace(i32 %conv_instrumented)
  %tobool_instrumented = icmp ne i32 %call_instrumented, 0
  br label %land.end_instrumented

land.end_instrumented:                            ; preds = %land.rhs_instrumented, %for.cond_instrumented
  %14 = phi i1 [ false, %for.cond_instrumented ], [ %tobool_instrumented, %land.rhs_instrumented ]
  br i1 %14, label %for.body_instrumented, label %for.end_instrumented

for.body_instrumented:                            ; preds = %land.end_instrumented
  br label %for.inc_instrumented

for.inc_instrumented:                             ; preds = %for.body_instrumented
  %15 = load i8*, i8** %it_instrumented, align 4
  %incdec.ptr_instrumented = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
  br label %for.cond_instrumented

for.end_instrumented:                             ; preds = %land.end_instrumented
  %16 = load i8*, i8** %it_instrumented, align 4
  %17 = load i16, i16* @zbouncer_recursion_counter, align 2
  %18 = sext i16 %17 to i32
  %19 = add i32 %18, -1
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* @zbouncer_recursion_counter, align 2
  ret i8* %16
}

Node:   %call_instrumented = call i8* @str_ltrim_instrumented(i8* %16, i8* %17, i32 0, i32 0), !zref_start_id !3, !zref_end_id !3
Node:   store i8* %call_instrumented, i8** %lt_instrumented, align 4
Node:   %18 = load i8*, i8** %lt_instrumented, align 4
Node:   %18 = load i8*, i8** %lt_instrumented, align 4
Node: i8* %ptr
Node:   store i8* %ptr, i8** %ptr.addr_instrumented, align 4
Node:   %4 = load i8*, i8** %ptr.addr_instrumented, align 4
Node:   %sub.ptr.lhs.cast_instrumented = ptrtoint i8* %4 to i32
Node:   %sub.ptr.sub_instrumented = sub i32 %sub.ptr.lhs.cast_instrumented, %sub.ptr.rhs.cast_instrumented
Node:   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %20, i8* align 4 %21, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %31, i8* align 4 %32, i32 12, i1 false)
Node:   %15 = load i32, i32* %bufferpos15, align 4
Node:   %sub = sub i32 %16, %15
Node:   store i32 %sub, i32* %bufferlen, align 4
Node:   %31 = load i32, i32* %bufferlen, align 4
Node:   %add30 = add i32 %31, %30
Node:   store i32 %add30, i32* %bufferlen, align 4
Node:   %8 = load i32, i32* %bufferlen, align 4
Node:   %8 = load i32, i32* %bufferlen, align 4
Node: i32 %bufferlen
Node:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Node:   %10 = load i32, i32* %bufferlen.addr_instrumented, align 4
Node:   store i32 %10, i32* %bufferlen2_instrumented, align 4
On Node:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Found GEP:
  %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i8*
Current offset from base: 0
Found path
Node:   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Node:   store i32 %10, i32* %bufferlen2_instrumented, align 4
On Node:   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Found GEP:
  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Considering operand 2
Accessing 1th operand of struct with type i32
Type i8* has size 4
Current offset from base: 4
Considering Def:
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[224.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[225.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[226.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[227.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[228.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[229.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[230.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[231.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[232.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[233.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[244.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[245.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[246.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[247.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[248.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[249.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[250.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[251.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[252.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[253.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[264.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[265.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[266.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[267.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[268.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[269.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[270.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[271.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[272.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[273.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[284.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[285.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[286.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[287.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[288.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[289.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[290.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[291.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[292.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[293.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[304.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[305.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[306.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[307.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[308.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[309.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[310.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[311.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[312.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[313.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[324.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[325.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[326.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[327.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[328.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[329.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[330.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[331.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[332.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[333.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[346.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[347.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[348.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[349.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[350.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[351.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[352.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[353.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[354.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[355.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[369.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[370.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[371.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[372.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[373.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[374.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[375.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[376.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[377.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[378.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[389.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[390.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[391.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[392.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[393.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[394.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[395.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[396.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[397.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[398.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[409.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[410.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[411.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[412.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[413.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[414.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[415.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[416.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[417.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[418.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Considering Def:
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 

Of Use:
[149.STOREUSE] (VFGNode: StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	
   store i32 %10, i32* %bufferlen2_instrumented, align 4 ) 
 storeParam:  %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Count target object: 0
--- Children ---
[4.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[150.SDEF] (PAGNode: 692) FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
----------------

Pag ID of source is 691
Target: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2024
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1871
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %lt33_instrumented = alloca i8*, align 4
Visist starts at PAGNode 704
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %ampr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1536
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 934
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2322
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 163
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %bracket_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1869
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0
Visist starts at PAGNode 1007
[DEBUG] findFirstDominator found 1 elements
Considering Def:
[168.ADEF - DOMINATOR ] (PAGNode: 992) FIObjVar ID: 992 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 

Of Use:
[165.STOREUSE] (VFGNode: StoreVFGNode ID: 1623 StoreStmt: [Var1008 <-- Var1006]	
   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4 ) 
 storeParam:  %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0
Count target object: 0
--- Children ---
[166.ADEF - DOMINATOR ] (PAGNode: 1524) FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[167.SDEF] (PAGNode: 688) FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[167.SDEF] (PAGNode: 688) FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[168.ADEF - DOMINATOR ] (PAGNode: 992) FIObjVar ID: 992 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[169.ADEF - DOMINATOR ] (PAGNode: 1039) FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[170.ADEF - DOMINATOR ] (PAGNode: 1187) FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[171.ADEF - DOMINATOR ] (PAGNode: 1282) FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[172.ADEF - DOMINATOR ] (PAGNode: 1656) FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[173.ADEF - DOMINATOR ] (PAGNode: 1773) FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[174.ADEF - DOMINATOR ] (PAGNode: 1865) FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[175.ADEF - DOMINATOR ] (PAGNode: 2318) FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
[176.ADEF - DOMINATOR ] (PAGNode: 2596) FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
----------------

Pag ID of source is 991
Target: ValVar ID: 991
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
StoreStmt: [Var991 <-- Var980]	
   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 
  store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Checking aliasing of state with argument state of state_setpos_instrumented
Aliased with state
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2260
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1288
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1871
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1530
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2034
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1047
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2260
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Visist starts at PAGNode 340
[DEBUG] findFirstDominator found 1 elements
  %parser = alloca %struct.sxml_t, align 4 is a struct type, gep analysis needed
Found path
Node:   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Node:   store i32 0, i32* %bufferpos31, align 4
On Node:   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Found GEP:
  %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i32
Current offset from base: 0
Found path
Node:   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Node:   store i32 0, i32* %bufferpos31, align 4
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %5, i8* align 4 %6, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %45, i8* align 4 %46, i32 12, i1 false)
Node:   call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 12, i1 false)
Node:   store i32 0, i32* %bufferpos31, align 4
On Node:   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Found GEP:
  %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Considering operand 2
Accessing 0th operand of struct with type i32
Current offset from base: 0
Considering Def:
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 

Of Use:
[187.STOREUSE] (VFGNode: StoreVFGNode ID: 1550 StoreStmt: [Var472 <-- Var228]	
   store i32 0, i32* %bufferpos31, align 4 ) 
 storeParam:  %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Count target object: 0
--- Children ---
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
----------------

Pag ID of source is 340
Target: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
Considering Def:
[334.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 

Of Use:
[187.STOREUSE] (VFGNode: StoreVFGNode ID: 1550 StoreStmt: [Var472 <-- Var228]	
   store i32 0, i32* %bufferpos31, align 4 ) 
 storeParam:  %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Count target object: 0
--- Children ---
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
----------------

Pag ID of source is 340
Target: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
Considering Def:
[335.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 

Of Use:
[187.STOREUSE] (VFGNode: StoreVFGNode ID: 1550 StoreStmt: [Var472 <-- Var228]	
   store i32 0, i32* %bufferpos31, align 4 ) 
 storeParam:  %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Count target object: 0
--- Children ---
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
----------------

Pag ID of source is 340
Target: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
Considering Def:
[357.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 

Of Use:
[187.STOREUSE] (VFGNode: StoreVFGNode ID: 1550 StoreStmt: [Var472 <-- Var228]	
   store i32 0, i32* %bufferpos31, align 4 ) 
 storeParam:  %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Count target object: 0
--- Children ---
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
----------------

Pag ID of source is 340
Target: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
Considering Def:
[358.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 

Of Use:
[187.STOREUSE] (VFGNode: StoreVFGNode ID: 1550 StoreStmt: [Var472 <-- Var228]	
   store i32 0, i32* %bufferpos31, align 4 ) 
 storeParam:  %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Count target object: 0
--- Children ---
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
----------------

Pag ID of source is 340
Target: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
Considering Def:
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 

Of Use:
[187.STOREUSE] (VFGNode: StoreVFGNode ID: 1550 StoreStmt: [Var472 <-- Var228]	
   store i32 0, i32* %bufferpos31, align 4 ) 
 storeParam:  %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Count target object: 0
--- Children ---
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
----------------

Pag ID of source is 340
Target: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
Considering Def:
[334.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 

Of Use:
[187.STOREUSE] (VFGNode: StoreVFGNode ID: 1550 StoreStmt: [Var472 <-- Var228]	
   store i32 0, i32* %bufferpos31, align 4 ) 
 storeParam:  %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Count target object: 0
--- Children ---
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
----------------

Pag ID of source is 340
Target: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
Considering Def:
[335.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 

Of Use:
[187.STOREUSE] (VFGNode: StoreVFGNode ID: 1550 StoreStmt: [Var472 <-- Var228]	
   store i32 0, i32* %bufferpos31, align 4 ) 
 storeParam:  %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Count target object: 0
--- Children ---
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
----------------

Pag ID of source is 340
Target: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
Considering Def:
[357.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 

Of Use:
[187.STOREUSE] (VFGNode: StoreVFGNode ID: 1550 StoreStmt: [Var472 <-- Var228]	
   store i32 0, i32* %bufferpos31, align 4 ) 
 storeParam:  %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Count target object: 0
--- Children ---
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
----------------

Pag ID of source is 340
Target: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
Considering Def:
[358.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 

Of Use:
[187.STOREUSE] (VFGNode: StoreVFGNode ID: 1550 StoreStmt: [Var472 <-- Var228]	
   store i32 0, i32* %bufferpos31, align 4 ) 
 storeParam:  %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Count target object: 0
--- Children ---
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
[188.SDEF] (PAGNode: 341) FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
----------------

Pag ID of source is 340
Target: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
Checking PagEdge node associated to:   %limit_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1532
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2526
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1292
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %lt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 698
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %bufferlen.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2794
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %value_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2336
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2022
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 329
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2895
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %bracket_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1191
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2798
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %dash_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1777
[DEBUG] findFirstDominator found 0 elements
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1662
[DEBUG] findFirstDominator found 0 elements
Checking function hook_exit
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i16 %7, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %7, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function llvm.memcpy.p0i8.p0i8.i32
Checking function __assert_fail
Checking function strlen
Checking function memchr
Checking function memcmp
Checking function NameStartChar
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %c, i32* %c.addr, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 162
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 163
[SelectDef] On node: FIObjVar ID: 163 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 163 (base object)
   %c.addr = alloca i32, align 4  to result
Found:
	- NodeId: 163 Instr:   %c.addr = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval, align 4
Target of   store i32 1, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 160
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 161
[SelectDef] On node: FIObjVar ID: 161 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 161 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 161 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 %lor.ext, i32* %retval, align 4
Target of   store i32 %lor.ext, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 160
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 161
[SelectDef] On node: FIObjVar ID: 161 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 161 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 161 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i16 %17, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %17, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function NameChar
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %c, i32* %c.addr, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 222
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 223
[SelectDef] On node: FIObjVar ID: 223 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 223 (base object)
   %c.addr = alloca i32, align 4  to result
Found:
	- NodeId: 223 Instr:   %c.addr = alloca i32, align 4
Finding defs for:   store i16 %19, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %19, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function WhiteSpace
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %c, i32* %c.addr, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 289
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 290
[SelectDef] On node: FIObjVar ID: 290 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 290 (base object)
   %c.addr = alloca i32, align 4  to result
Found:
	- NodeId: 290 Instr:   %c.addr = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval, align 4
Target of   store i32 1, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 287
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 288
[SelectDef] On node: FIObjVar ID: 288 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 288 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 288 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval, align 4
Target of   store i32 0, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 287
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 288
[SelectDef] On node: FIObjVar ID: 288 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 288 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 288 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i16 %9, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %9, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function main
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 0, i32* %retval, align 4
Target of   store i32 0, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 316
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 317
[SelectDef] On node: FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 317 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 %argc, i32* %argc.addr, align 4
Target of   store i32 %argc, i32* %argc.addr, align 4 is   %argc.addr = alloca i32, align 4 with PAG id 318
Checking PagEdge node associated to:   %argc.addr = alloca i32, align 4
Visist starts at PAGNode 319
[SelectDef] On node: FIObjVar ID: 319 (base object)
   %argc.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 319 (base object)
   %argc.addr = alloca i32, align 4  to result
Found:
	- NodeId: 319 Instr:   %argc.addr = alloca i32, align 4
Finding defs for:   store i8** %argv, i8*** %argv.addr, align 4
Target of   store i8** %argv, i8*** %argv.addr, align 4 is   %argv.addr = alloca i8**, align 4 with PAG id 320
Checking PagEdge node associated to:   %argv.addr = alloca i8**, align 4
Visist starts at PAGNode 321
[SelectDef] On node: FIObjVar ID: 321 (base object)
   %argv.addr = alloca i8**, align 4 
Start node is a Def already, adding FIObjVar ID: 321 (base object)
   %argv.addr = alloca i8**, align 4  to result
Found:
	- NodeId: 321 Instr:   %argv.addr = alloca i8**, align 4
Finding defs for:   store i32 0, i32* %bufferlen, align 4
Target of   store i32 0, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 328
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 329
[SelectDef] On node: FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4  to result
Found:
	- NodeId: 329 Instr:   %bufferlen = alloca i32, align 4
Finding defs for:   store i32 0, i32* %indent, align 4
Target of   store i32 0, i32* %indent, align 4 is   %indent = alloca i32, align 4 with PAG id 332
Checking PagEdge node associated to:   %indent = alloca i32, align 4
Visist starts at PAGNode 333
[SelectDef] On node: FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4  to result
Found:
	- NodeId: 333 Instr:   %indent = alloca i32, align 4
Finding defs for:   store i32 1, i32* %lineno, align 4
Target of   store i32 1, i32* %lineno, align 4 is   %lineno = alloca i32, align 4 with PAG id 334
Checking PagEdge node associated to:   %lineno = alloca i32, align 4
Visist starts at PAGNode 335
[SelectDef] On node: FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4  to result
Found:
	- NodeId: 335 Instr:   %lineno = alloca i32, align 4
Finding defs for:   store %struct._IO_FILE* %4, %struct._IO_FILE** %file, align 4
Target of   store %struct._IO_FILE* %4, %struct._IO_FILE** %file, align 4 is   %file = alloca %struct._IO_FILE*, align 4 with PAG id 338
Checking PagEdge node associated to:   %file = alloca %struct._IO_FILE*, align 4
Visist starts at PAGNode 339
[SelectDef] On node: FIObjVar ID: 339 (base object)
   %file = alloca %struct._IO_FILE*, align 4 
Start node is a Def already, adding FIObjVar ID: 339 (base object)
   %file = alloca %struct._IO_FILE*, align 4  to result
Found:
	- NodeId: 339 Instr:   %file = alloca %struct._IO_FILE*, align 4
Finding defs for:   store i32 %call4, i32* %err, align 4
Target of   store i32 %call4, i32* %err, align 4 is   %err = alloca i32, align 4 with PAG id 342
Checking PagEdge node associated to:   %err = alloca i32, align 4
Visist starts at PAGNode 343
[SelectDef] On node: FIObjVar ID: 343 (base object)
   %err = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 343 (base object)
   %err = alloca i32, align 4  to result
Found:
	- NodeId: 343 Instr:   %err = alloca i32, align 4
Finding defs for:   store i32 0, i32* %ntokens7, align 4
Target of   store i32 0, i32* %ntokens7, align 4 is   %ntokens7 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1 with PAG id 400
Checking PagEdge node associated to:   %ntokens7 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1
Visist starts at PAGNode 340
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
Finding defs for:   store i32 0, i32* %ntokens12, align 4
Target of   store i32 0, i32* %ntokens12, align 4 is   %ntokens12 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1 with PAG id 409
Checking PagEdge node associated to:   %ntokens12 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1
Visist starts at PAGNode 340
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
Finding defs for:   store i32 %add, i32* %lineno, align 4
Target of   store i32 %add, i32* %lineno, align 4 is   %lineno = alloca i32, align 4 with PAG id 334
Checking PagEdge node associated to:   %lineno = alloca i32, align 4
Visist starts at PAGNode 335
[SelectDef] On node: FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4  to result
Found:
	- NodeId: 335 Instr:   %lineno = alloca i32, align 4
Finding defs for:   store i32 %sub, i32* %bufferlen, align 4
Target of   store i32 %sub, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 328
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 329
[SelectDef] On node: FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4  to result
Found:
	- NodeId: 329 Instr:   %bufferlen = alloca i32, align 4
Finding defs for:   store i32 %call25, i32* %len, align 4
Target of   store i32 %call25, i32* %len, align 4 is   %len = alloca i32, align 4 with PAG id 344
Checking PagEdge node associated to:   %len = alloca i32, align 4
Visist starts at PAGNode 345
[SelectDef] On node: FIObjVar ID: 345 (base object)
   %len = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 345 (base object)
   %len = alloca i32, align 4  to result
Found:
	- NodeId: 345 Instr:   %len = alloca i32, align 4
Finding defs for:   store i32 %add30, i32* %bufferlen, align 4
Target of   store i32 %add30, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 328
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 329
[SelectDef] On node: FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4  to result
Found:
	- NodeId: 329 Instr:   %bufferlen = alloca i32, align 4
Finding defs for:   store i32 0, i32* %bufferpos31, align 4
Target of   store i32 0, i32* %bufferpos31, align 4 is   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0 with PAG id 472
Checking PagEdge node associated to:   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Visist starts at PAGNode 340
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
Finding defs for:   store i32 %add36, i32* %lineno, align 4
Target of   store i32 %add36, i32* %lineno, align 4 is   %lineno = alloca i32, align 4 with PAG id 334
Checking PagEdge node associated to:   %lineno = alloca i32, align 4
Visist starts at PAGNode 335
[SelectDef] On node: FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4  to result
Found:
	- NodeId: 335 Instr:   %lineno = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval, align 4
Target of   store i32 1, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 316
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 317
[SelectDef] On node: FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 317 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 %sub55, i32* %seconds, align 4
Target of   store i32 %sub55, i32* %seconds, align 4 is   %seconds = alloca i32, align 4 with PAG id 348
Checking PagEdge node associated to:   %seconds = alloca i32, align 4
Visist starts at PAGNode 349
[SelectDef] On node: FIObjVar ID: 349 (base object)
   %seconds = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 349 (base object)
   %seconds = alloca i32, align 4  to result
Found:
	- NodeId: 349 Instr:   %seconds = alloca i32, align 4
Finding defs for:   store i32 %sub57, i32* %microseconds, align 4
Target of   store i32 %sub57, i32* %microseconds, align 4 is   %microseconds = alloca i32, align 4 with PAG id 350
Checking PagEdge node associated to:   %microseconds = alloca i32, align 4
Visist starts at PAGNode 351
[SelectDef] On node: FIObjVar ID: 351 (base object)
   %microseconds = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 351 (base object)
   %microseconds = alloca i32, align 4  to result
Found:
	- NodeId: 351 Instr:   %microseconds = alloca i32, align 4
Finding defs for:   store double %add59, double* %elapsed, align 8
Target of   store double %add59, double* %elapsed, align 8 is   %elapsed = alloca double, align 8 with PAG id 352
Checking PagEdge node associated to:   %elapsed = alloca double, align 8
Visist starts at PAGNode 353
[SelectDef] On node: FIObjVar ID: 353 (base object)
   %elapsed = alloca double, align 8 
Start node is a Def already, adding FIObjVar ID: 353 (base object)
   %elapsed = alloca double, align 8  to result
Found:
	- NodeId: 353 Instr:   %elapsed = alloca double, align 8
Finding defs for:   store i32 0, i32* %retval, align 4
Target of   store i32 0, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 316
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 317
[SelectDef] On node: FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 317 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i16 %60, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %60, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function gettimeofday
Checking function __isoc99_scanf
Checking function llvm.memmove.p0i8.p0i8.i32
Checking function fread
Checking function fprintf
Checking function sprintf
Checking function printf
Checking function print_indent
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %indentlevel, i32* %indentlevel.addr, align 4
Target of   store i32 %indentlevel, i32* %indentlevel.addr, align 4 is   %indentlevel.addr = alloca i32, align 4 with PAG id 603
Checking PagEdge node associated to:   %indentlevel.addr = alloca i32, align 4
Visist starts at PAGNode 604
[SelectDef] On node: FIObjVar ID: 604 (base object)
   %indentlevel.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 604 (base object)
   %indentlevel.addr = alloca i32, align 4  to result
Found:
	- NodeId: 604 Instr:   %indentlevel.addr = alloca i32, align 4
Finding defs for:   store i16 %11, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %11, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function puts
Checking function wrapper_scanf
Checking function sxml_init_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 643
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 644
[SelectDef] On node: FIObjVar ID: 644 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 644 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 644 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 0, i32* %bufferpos_instrumented, align 4
Target of   store i32 0, i32* %bufferpos_instrumented, align 4 is   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 0 with PAG id 647
Checking PagEdge node associated to:   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 0
Visist starts at PAGNode 646
[SelectDef] On node: ValVar ID: 646
   %4 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 643-->646
[SelectDef] On node: ValVar ID: 643
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 644-->643
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 643
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 644 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 636-->643
[SelectDef] On node: ValVar ID: 636
 %struct.sxml_t* %state { 0th arg sxml_init_instrumented  }
On edge 340-->636
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
	- NodeId: 644 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 0, i32* %ntokens_instrumented, align 4
Target of   store i32 0, i32* %ntokens_instrumented, align 4 is   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %5, i32 0, i32 1 with PAG id 650
Checking PagEdge node associated to:   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %5, i32 0, i32 1
Visist starts at PAGNode 649
[SelectDef] On node: ValVar ID: 649
   %5 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 643-->649
[SelectDef] On node: ValVar ID: 643
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 644-->643
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 643
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 644 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 636-->643
[SelectDef] On node: ValVar ID: 636
 %struct.sxml_t* %state { 0th arg sxml_init_instrumented  }
On edge 340-->636
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
	- NodeId: 644 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 0, i32* %taglevel_instrumented, align 4
Target of   store i32 0, i32* %taglevel_instrumented, align 4 is   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %6, i32 0, i32 2 with PAG id 653
Checking PagEdge node associated to:   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %6, i32 0, i32 2
Visist starts at PAGNode 652
[SelectDef] On node: ValVar ID: 652
   %6 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 643-->652
[SelectDef] On node: ValVar ID: 643
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 644-->643
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 643
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 644 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 636-->643
[SelectDef] On node: ValVar ID: 636
 %struct.sxml_t* %state { 0th arg sxml_init_instrumented  }
On edge 340-->636
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
	- NodeId: 644 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i16 %10, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %10, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function sxml_parse_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 677
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 678
[SelectDef] On node: FIObjVar ID: 678 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 678 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 678 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 679
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 680
[SelectDef] On node: FIObjVar ID: 680 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 680 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 680 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Target of   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 is   %bufferlen.addr_instrumented = alloca i32, align 4 with PAG id 681
Checking PagEdge node associated to:   %bufferlen.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 682
[SelectDef] On node: FIObjVar ID: 682 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 682 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 682 Instr:   %bufferlen.addr_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4 is   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 683
Checking PagEdge node associated to:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 684
[SelectDef] On node: FIObjVar ID: 684 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 684 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 684 Instr:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4
Target of   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4 is   %num_tokens.addr_instrumented = alloca i32, align 4 with PAG id 685
Checking PagEdge node associated to:   %num_tokens.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 686
[SelectDef] On node: FIObjVar ID: 686 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 686 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 686 Instr:   %num_tokens.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 689
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 690
[SelectDef] On node: FIObjVar ID: 690 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 690 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 690 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %buffer1_instrumented, align 4
Target of   store i8* %9, i8** %buffer1_instrumented, align 4 is   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 with PAG id 722
Checking PagEdge node associated to:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Visist starts at PAGNode 691
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store i32 %10, i32* %bufferlen2_instrumented, align 4
Target of   store i32 %10, i32* %bufferlen2_instrumented, align 4 is   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1 with PAG id 725
Checking PagEdge node associated to:   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Visist starts at PAGNode 691
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store %struct.sxmltok_t* %11, %struct.sxmltok_t** %tokens3_instrumented, align 4
Target of   store %struct.sxmltok_t* %11, %struct.sxmltok_t** %tokens3_instrumented, align 4 is   %tokens3_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 2 with PAG id 728
Checking PagEdge node associated to:   %tokens3_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 2
Visist starts at PAGNode 691
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store i32 %12, i32* %num_tokens4_instrumented, align 4
Target of   store i32 %12, i32* %num_tokens4_instrumented, align 4 is   %num_tokens4_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 3 with PAG id 731
Checking PagEdge node associated to:   %num_tokens4_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 3
Visist starts at PAGNode 691
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 695
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 696
[SelectDef] On node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 696 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call_instrumented, i8** %lt_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %lt_instrumented, align 4 is   %lt_instrumented = alloca i8*, align 4 with PAG id 697
Checking PagEdge node associated to:   %lt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 698
[SelectDef] On node: FIObjVar ID: 698 (base object)
   %lt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 698 (base object)
   %lt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 698 Instr:   %lt_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call14_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call14_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 693
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 694
[SelectDef] On node: FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 694 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call16_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call16_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 693
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 694
[SelectDef] On node: FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 694 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call17_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call17_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 693
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 694
[SelectDef] On node: FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 694 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %29, i32* %retval_instrumented, align 4
Target of   store i32 %29, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr32_instrumented, i8** %start29_instrumented, align 4
Target of   store i8* %add.ptr32_instrumented, i8** %start29_instrumented, align 4 is   %start29_instrumented = alloca i8*, align 4 with PAG id 701
Checking PagEdge node associated to:   %start29_instrumented = alloca i8*, align 4
Visist starts at PAGNode 702
[SelectDef] On node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 702 Instr:   %start29_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call34_instrumented, i8** %lt33_instrumented, align 4
Target of   store i8* %call34_instrumented, i8** %lt33_instrumented, align 4 is   %lt33_instrumented = alloca i8*, align 4 with PAG id 703
Checking PagEdge node associated to:   %lt33_instrumented = alloca i8*, align 4
Visist starts at PAGNode 704
[SelectDef] On node: FIObjVar ID: 704 (base object)
   %lt33_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 704 (base object)
   %lt33_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 704 Instr:   %lt33_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call43_instrumented, i32* %err42_instrumented, align 4
Target of   store i32 %call43_instrumented, i32* %err42_instrumented, align 4 is   %err42_instrumented = alloca i32, align 4 with PAG id 705
Checking PagEdge node associated to:   %err42_instrumented = alloca i32, align 4
Visist starts at PAGNode 706
[SelectDef] On node: FIObjVar ID: 706 (base object)
   %err42_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 706 (base object)
   %err42_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 706 Instr:   %err42_instrumented = alloca i32, align 4
Finding defs for:   store i32 %43, i32* %retval_instrumented, align 4
Target of   store i32 %43, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call59_instrumented, i32* %err28_instrumented, align 4
Target of   store i32 %call59_instrumented, i32* %err28_instrumented, align 4 is   %err28_instrumented = alloca i32, align 4 with PAG id 699
Checking PagEdge node associated to:   %err28_instrumented = alloca i32, align 4
Visist starts at PAGNode 700
[SelectDef] On node: FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 700 Instr:   %err28_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call61_instrumented, i32* %err28_instrumented, align 4
Target of   store i32 %call61_instrumented, i32* %err28_instrumented, align 4 is   %err28_instrumented = alloca i32, align 4 with PAG id 699
Checking PagEdge node associated to:   %err28_instrumented = alloca i32, align 4
Visist starts at PAGNode 700
[SelectDef] On node: FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 700 Instr:   %err28_instrumented = alloca i32, align 4
Finding defs for:   store i32 %cond_instrumented, i32* %err28_instrumented, align 4
Target of   store i32 %cond_instrumented, i32* %err28_instrumented, align 4 is   %err28_instrumented = alloca i32, align 4 with PAG id 699
Checking PagEdge node associated to:   %err28_instrumented = alloca i32, align 4
Visist starts at PAGNode 700
[SelectDef] On node: FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 700 Instr:   %err28_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call70_instrumented, i32* %err28_instrumented, align 4
Target of   store i32 %call70_instrumented, i32* %err28_instrumented, align 4 is   %err28_instrumented = alloca i32, align 4 with PAG id 699
Checking PagEdge node associated to:   %err28_instrumented = alloca i32, align 4
Visist starts at PAGNode 700
[SelectDef] On node: FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 700 Instr:   %err28_instrumented = alloca i32, align 4
Finding defs for:   store i32 %54, i32* %retval_instrumented, align 4
Target of   store i32 %54, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %62, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %62, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_ltrim_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 929
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 930
[SelectDef] On node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 930 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 931
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 932
[SelectDef] On node: FIObjVar ID: 932 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 932 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 932 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %it_instrumented, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 933
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 934
[SelectDef] On node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 934 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 933
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 934
[SelectDef] On node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 934 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %20, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %20, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function state_setpos_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 991
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 992
[SelectDef] On node: FIObjVar ID: 992 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 992 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 992 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 993
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 994
[SelectDef] On node: FIObjVar ID: 994 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 994 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 994 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %ptr, i8** %ptr.addr_instrumented, align 4
Target of   store i8* %ptr, i8** %ptr.addr_instrumented, align 4 is   %ptr.addr_instrumented = alloca i8*, align 4 with PAG id 995
Checking PagEdge node associated to:   %ptr.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 996
[SelectDef] On node: FIObjVar ID: 996 (base object)
   %ptr.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 996 (base object)
   %ptr.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 996 Instr:   %ptr.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4, !ziuse !3
Target of   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4, !ziuse !3 is   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0 with PAG id 1008
Checking PagEdge node associated to:   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0
Visist starts at PAGNode 1007
[SelectDef] On node: ValVar ID: 1007
   %7 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 991-->1007
[SelectDef] On node: ValVar ID: 991
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 992-->991
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 991
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 992 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 980-->991
[SelectDef] On node: ValVar ID: 980
 %struct.sxml_t* %state { 0th arg state_setpos_instrumented  }
On edge 687-->980
On edge 1119-->980
On edge 1160-->980
On edge 1255-->980
On edge 1364-->980
On edge 1420-->980
On edge 1586-->980
On edge 1630-->980
On edge 1746-->980
On edge 1838-->980
On edge 1929-->980
On edge 2459-->980
On edge 2498-->980
[SelectDef] On node: ValVar ID: 2498
   %67 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2498
[SelectDef] On node: ValVar ID: 2317
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2318-->2317
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2317
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2306-->2317
[SelectDef] On node: ValVar ID: 2306
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1123-->2306
On edge 1368-->2306
[SelectDef] On node: ValVar ID: 1368
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1368
[SelectDef] On node: ValVar ID: 1281
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1282-->1281
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1281
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1270-->1281
[SelectDef] On node: ValVar ID: 1270
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 687-->1270
Node 687 already visited
On edge 687-->1270
Node 687 already visited
[SelectDef] On node: ValVar ID: 1123
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1123
[SelectDef] On node: ValVar ID: 1038
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1039-->1038
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1038
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1027-->1038
[SelectDef] On node: ValVar ID: 1027
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 687-->1027
Node 687 already visited
On edge 687-->1027
Node 687 already visited
[SelectDef] On node: ValVar ID: 2459
   %50 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2459
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1929
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1864-->1929
[SelectDef] On node: ValVar ID: 1864
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1865-->1864
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1864
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1853-->1864
[SelectDef] On node: ValVar ID: 1853
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 687-->1853
Node 687 already visited
[SelectDef] On node: ValVar ID: 1838
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1772-->1838
[SelectDef] On node: ValVar ID: 1772
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1773-->1772
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1772
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1761-->1772
[SelectDef] On node: ValVar ID: 1761
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 687-->1761
Node 687 already visited
[SelectDef] On node: ValVar ID: 1746
   %36 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1655-->1746
[SelectDef] On node: ValVar ID: 1655
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1656-->1655
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1655
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1644-->1655
[SelectDef] On node: ValVar ID: 1644
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 687-->1644
Node 687 already visited
[SelectDef] On node: ValVar ID: 1630
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1630
[SelectDef] On node: ValVar ID: 1523
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1524-->1523
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1523
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1510-->1523
[SelectDef] On node: ValVar ID: 1510
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 687-->1510
Node 687 already visited
On edge 2618-->1510
[SelectDef] On node: ValVar ID: 2618
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2595-->2618
[SelectDef] On node: ValVar ID: 2595
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2596-->2595
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2595
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2582-->2595
[SelectDef] On node: ValVar ID: 2582
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2463-->2582
[SelectDef] On node: ValVar ID: 2463
   %53 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2463
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1586
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1586
Node 1523 already visited
[SelectDef] On node: ValVar ID: 1420
   %54 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1420
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1364
   %30 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1364
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1255
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1186-->1255
[SelectDef] On node: ValVar ID: 1186
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1187-->1186
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1186
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1175-->1186
[SelectDef] On node: ValVar ID: 1175
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 687-->1175
Node 687 already visited
[SelectDef] On node: ValVar ID: 1160
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1160
Node 1038 already visited
[SelectDef] On node: ValVar ID: 1119
   %29 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1119
Node 1038 already visited
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 1524 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 688 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 992 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1039 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1187 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1282 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1656 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1773 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1865 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2318 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2596 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i16 %16, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %16, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_instruction_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1038
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1039
[SelectDef] On node: FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1039 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1040
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1041
[SelectDef] On node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1048
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1049
[SelectDef] On node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1049 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1050
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1051
[SelectDef] On node: FIObjVar ID: 1051 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1051 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1051 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1048
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1049
[SelectDef] On node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1049 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1046
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1047
[SelectDef] On node: FIObjVar ID: 1047 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1047 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1047 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call12_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call12_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 1042
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 1043
[SelectDef] On node: FIObjVar ID: 1043 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1043 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1043 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %35, i32* %retval_instrumented, align 4
Target of   store i32 %35, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr18_instrumented, i8** %quest_instrumented, align 4
Target of   store i8* %add.ptr18_instrumented, i8** %quest_instrumented, align 4 is   %quest_instrumented = alloca i8*, align 4 with PAG id 1044
Checking PagEdge node associated to:   %quest_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1045
[SelectDef] On node: FIObjVar ID: 1045 (base object)
   %quest_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1045 (base object)
   %quest_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1045 Instr:   %quest_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call30_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call30_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %52, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %52, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_doctype_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1186
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1187
[SelectDef] On node: FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1187 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1188
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1189
[SelectDef] On node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1189 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1192
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1193
[SelectDef] On node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1193 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1194
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1195
[SelectDef] On node: FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1195 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1184
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1185
[SelectDef] On node: FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1185 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1184
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1185
[SelectDef] On node: FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1185 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1192
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1193
[SelectDef] On node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1193 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 is   %bracket_instrumented = alloca i8*, align 4 with PAG id 1190
Checking PagEdge node associated to:   %bracket_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1191
[SelectDef] On node: FIObjVar ID: 1191 (base object)
   %bracket_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1191 (base object)
   %bracket_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1191 Instr:   %bracket_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1184
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1185
[SelectDef] On node: FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1185 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call12_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call12_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1184
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1185
[SelectDef] On node: FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1185 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %34, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %34, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_start_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1281
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1282
[SelectDef] On node: FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1282 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1283
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1284
[SelectDef] On node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1293
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1294
[SelectDef] On node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1294 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1295
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1296
[SelectDef] On node: FIObjVar ID: 1296 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1296 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1296 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4
Target of   store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 1289
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1290
[SelectDef] On node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1290 Instr:   %name_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call10_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call10_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1291
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1292
[SelectDef] On node: FIObjVar ID: 1292 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1292 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1292 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call17_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call17_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 1285
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 1286
[SelectDef] On node: FIObjVar ID: 1286 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1286 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1286 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %36, i32* %retval_instrumented, align 4
Target of   store i32 %36, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr24_instrumented, i8** %gt_instrumented, align 4
Target of   store i8* %add.ptr24_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1287
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1288
[SelectDef] On node: FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1288 Instr:   %gt_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1287
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1288
[SelectDef] On node: FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1288 Instr:   %gt_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call44_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call44_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %61, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %61, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_findchr_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 1445
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1446
[SelectDef] On node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1446 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 1447
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1448
[SelectDef] On node: FIObjVar ID: 1448 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1448 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1448 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %c, i32* %c.addr_instrumented, align 4
Target of   store i32 %c, i32* %c.addr_instrumented, align 4 is   %c.addr_instrumented = alloca i32, align 4 with PAG id 1449
Checking PagEdge node associated to:   %c.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 1450
[SelectDef] On node: FIObjVar ID: 1450 (base object)
   %c.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1450 (base object)
   %c.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1450 Instr:   %c.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 1451
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1452
[SelectDef] On node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1452 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %24, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %24, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_characters_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1523
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1524
[SelectDef] On node: FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1524 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1525
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1526
[SelectDef] On node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1526 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 1527
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1528
[SelectDef] On node: FIObjVar ID: 1528 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1528 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1528 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1529
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1530
[SelectDef] On node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1530 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %ampr_instrumented, align 4 is   %ampr_instrumented = alloca i8*, align 4 with PAG id 1535
Checking PagEdge node associated to:   %ampr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1536
[SelectDef] On node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1536 Instr:   %ampr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call9_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call9_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1521
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1522
[SelectDef] On node: FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1522 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %cond_instrumented, i8** %limit_instrumented, align 4
Target of   store i8* %cond_instrumented, i8** %limit_instrumented, align 4 is   %limit_instrumented = alloca i8*, align 4 with PAG id 1531
Checking PagEdge node associated to:   %limit_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1532
[SelectDef] On node: FIObjVar ID: 1532 (base object)
   %limit_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1532 (base object)
   %limit_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1532 Instr:   %limit_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call14_instrumented, i8** %colon_instrumented, align 4
Target of   store i8* %call14_instrumented, i8** %colon_instrumented, align 4 is   %colon_instrumented = alloca i8*, align 4 with PAG id 1533
Checking PagEdge node associated to:   %colon_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1534
[SelectDef] On node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1534 Instr:   %colon_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %cond18_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %cond18_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1521
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1522
[SelectDef] On node: FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1522 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1529
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1530
[SelectDef] On node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1530 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call22_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call22_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1521
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1522
[SelectDef] On node: FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1522 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %52, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %52, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_end_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1655
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1656
[SelectDef] On node: FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1656 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1657
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1658
[SelectDef] On node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1658 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1663
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1664
[SelectDef] On node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1664 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1665
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1666
[SelectDef] On node: FIObjVar ID: 1666 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1666 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1666 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1653
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1654
[SelectDef] On node: FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1654 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1663
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1664
[SelectDef] On node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1664 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call8_instrumented, i8** %gt_instrumented, align 4
Target of   store i8* %call8_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1659
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1660
[SelectDef] On node: FIObjVar ID: 1660 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1660 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1660 Instr:   %gt_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1653
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1654
[SelectDef] On node: FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1654 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call13_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call13_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1661
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1662
[SelectDef] On node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1662 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1653
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1654
[SelectDef] On node: FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1654 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call21_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call21_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1653
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1654
[SelectDef] On node: FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1654 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %43, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %43, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_comment_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1772
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1773
[SelectDef] On node: FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1773 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1774
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1775
[SelectDef] On node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1775 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1778
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1779
[SelectDef] On node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1779 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1780
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1781
[SelectDef] On node: FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1781 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1770
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1771
[SelectDef] On node: FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1771 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1770
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1771
[SelectDef] On node: FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1771 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1778
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1779
[SelectDef] On node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1779 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %dash_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %dash_instrumented, align 4 is   %dash_instrumented = alloca i8*, align 4 with PAG id 1776
Checking PagEdge node associated to:   %dash_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1777
[SelectDef] On node: FIObjVar ID: 1777 (base object)
   %dash_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1777 (base object)
   %dash_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1777 Instr:   %dash_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1770
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1771
[SelectDef] On node: FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1771 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call12_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call12_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1770
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1771
[SelectDef] On node: FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1771 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %34, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %34, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_cdata_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1864
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1865
[SelectDef] On node: FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1865 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1866
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1867
[SelectDef] On node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1867 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1870
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1871
[SelectDef] On node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1871 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1872
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1873
[SelectDef] On node: FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1873 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1862
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1863
[SelectDef] On node: FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1863 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1862
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1863
[SelectDef] On node: FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1863 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1870
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1871
[SelectDef] On node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1871 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 is   %bracket_instrumented = alloca i8*, align 4 with PAG id 1868
Checking PagEdge node associated to:   %bracket_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1869
[SelectDef] On node: FIObjVar ID: 1869 (base object)
   %bracket_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1869 (base object)
   %bracket_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1869 Instr:   %bracket_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1862
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1863
[SelectDef] On node: FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1863 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call12_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call12_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1862
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1863
[SelectDef] On node: FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1863 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %34, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %34, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_startswith_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 1957
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1958
[SelectDef] On node: FIObjVar ID: 1958 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1958 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1958 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 1959
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1960
[SelectDef] On node: FIObjVar ID: 1960 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1960 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1960 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %prefix, i8** %prefix.addr_instrumented, align 4
Target of   store i8* %prefix, i8** %prefix.addr_instrumented, align 4 is   %prefix.addr_instrumented = alloca i8*, align 4 with PAG id 1961
Checking PagEdge node associated to:   %prefix.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1962
[SelectDef] On node: FIObjVar ID: 1962 (base object)
   %prefix.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1962 (base object)
   %prefix.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1962 Instr:   %prefix.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call_instrumented, i32* %nbytes_instrumented, align 4
Target of   store i32 %call_instrumented, i32* %nbytes_instrumented, align 4 is   %nbytes_instrumented = alloca i32, align 4 with PAG id 1963
Checking PagEdge node associated to:   %nbytes_instrumented = alloca i32, align 4
Visist starts at PAGNode 1964
[SelectDef] On node: FIObjVar ID: 1964 (base object)
   %nbytes_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1964 (base object)
   %nbytes_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1964 Instr:   %nbytes_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1955
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1956
[SelectDef] On node: FIObjVar ID: 1956 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1956 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1956 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %conv_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %conv_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1955
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1956
[SelectDef] On node: FIObjVar ID: 1956 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1956 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1956 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %20, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %20, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_findstr_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2023
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2024
[SelectDef] On node: FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2024 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2025
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2026
[SelectDef] On node: FIObjVar ID: 2026 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2026 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2026 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %needle, i8** %needle.addr_instrumented, align 4
Target of   store i8* %needle, i8** %needle.addr_instrumented, align 4 is   %needle.addr_instrumented = alloca i8*, align 4 with PAG id 2027
Checking PagEdge node associated to:   %needle.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2028
[SelectDef] On node: FIObjVar ID: 2028 (base object)
   %needle.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2028 (base object)
   %needle.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2028 Instr:   %needle.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
Target of   store i32 %call_instrumented, i32* %needlelen_instrumented, align 4 is   %needlelen_instrumented = alloca i32, align 4 with PAG id 2029
Checking PagEdge node associated to:   %needlelen_instrumented = alloca i32, align 4
Visist starts at PAGNode 2030
[SelectDef] On node: FIObjVar ID: 2030 (base object)
   %needlelen_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2030 (base object)
   %needlelen_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2030 Instr:   %needlelen_instrumented = alloca i32, align 4
Finding defs for:   store i32 %conv_instrumented, i32* %first_instrumented, align 4
Target of   store i32 %conv_instrumented, i32* %first_instrumented, align 4 is   %first_instrumented = alloca i32, align 4 with PAG id 2031
Checking PagEdge node associated to:   %first_instrumented = alloca i32, align 4
Visist starts at PAGNode 2032
[SelectDef] On node: FIObjVar ID: 2032 (base object)
   %first_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2032 (base object)
   %first_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2032 Instr:   %first_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %call8_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2033
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2034
[SelectDef] On node: FIObjVar ID: 2034 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2034 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2034 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %28, i8** %retval_instrumented, align 4
Target of   store i8* %28, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2021
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2022
[SelectDef] On node: FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2022 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
Target of   store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2023
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2024
[SelectDef] On node: FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2024 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %30, i8** %retval_instrumented, align 4
Target of   store i8* %30, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2021
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2022
[SelectDef] On node: FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2022 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %35, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %35, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function state_pushtoken_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 2137
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 2138
[SelectDef] On node: FIObjVar ID: 2138 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2138 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 2138 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 2139
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 2140
[SelectDef] On node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 2140 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %type, i32* %type.addr_instrumented, align 4
Target of   store i32 %type, i32* %type.addr_instrumented, align 4 is   %type.addr_instrumented = alloca i32, align 4 with PAG id 2141
Checking PagEdge node associated to:   %type.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2142
[SelectDef] On node: FIObjVar ID: 2142 (base object)
   %type.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2142 (base object)
   %type.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2142 Instr:   %type.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2143
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2144
[SelectDef] On node: FIObjVar ID: 2144 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2144 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2144 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2145
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2146
[SelectDef] On node: FIObjVar ID: 2146 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2146 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2146 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %ntokens_instrumented, align 4
Target of   store i32 %inc_instrumented, i32* %ntokens_instrumented, align 4 is   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 1 with PAG id 2157
Checking PagEdge node associated to:   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 1
Visist starts at PAGNode 2156
[SelectDef] On node: ValVar ID: 2156
   %4 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2137-->2156
[SelectDef] On node: ValVar ID: 2137
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2138-->2137
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2137
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2138 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2121-->2137
[SelectDef] On node: ValVar ID: 2121
 %struct.sxml_t* %state { 0th arg state_pushtoken_instrumented  }
On edge 1111-->2121
On edge 1249-->2121
On edge 1359-->2121
On edge 1396-->2121
On edge 1575-->2121
On edge 1625-->2121
On edge 1741-->2121
On edge 1832-->2121
On edge 1924-->2121
On edge 2411-->2121
[SelectDef] On node: ValVar ID: 2411
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2411
[SelectDef] On node: ValVar ID: 2317
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2318-->2317
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2317
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2306-->2317
[SelectDef] On node: ValVar ID: 2306
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1123-->2306
On edge 1368-->2306
[SelectDef] On node: ValVar ID: 1368
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1368
[SelectDef] On node: ValVar ID: 1281
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1282-->1281
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1281
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1270-->1281
[SelectDef] On node: ValVar ID: 1270
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 687-->1270
On edge 687-->1270
Node 687 already visited
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 1123
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1123
[SelectDef] On node: ValVar ID: 1038
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1039-->1038
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1038
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1027-->1038
[SelectDef] On node: ValVar ID: 1027
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 687-->1027
Node 687 already visited
On edge 687-->1027
Node 687 already visited
[SelectDef] On node: ValVar ID: 1924
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1864-->1924
[SelectDef] On node: ValVar ID: 1864
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1865-->1864
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1864
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1853-->1864
[SelectDef] On node: ValVar ID: 1853
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 687-->1853
Node 687 already visited
[SelectDef] On node: ValVar ID: 1832
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1772-->1832
[SelectDef] On node: ValVar ID: 1772
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1773-->1772
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1772
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1761-->1772
[SelectDef] On node: ValVar ID: 1761
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 687-->1761
Node 687 already visited
[SelectDef] On node: ValVar ID: 1741
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1655-->1741
[SelectDef] On node: ValVar ID: 1655
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1656-->1655
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1655
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1644-->1655
[SelectDef] On node: ValVar ID: 1644
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 687-->1644
Node 687 already visited
[SelectDef] On node: ValVar ID: 1625
   %41 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1625
[SelectDef] On node: ValVar ID: 1523
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1524-->1523
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1523
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1510-->1523
[SelectDef] On node: ValVar ID: 1510
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 687-->1510
Node 687 already visited
On edge 2618-->1510
[SelectDef] On node: ValVar ID: 2618
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2595-->2618
[SelectDef] On node: ValVar ID: 2595
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2596-->2595
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2595
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2582-->2595
[SelectDef] On node: ValVar ID: 2582
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2463-->2582
[SelectDef] On node: ValVar ID: 2463
   %53 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2463
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1575
   %20 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1575
Node 1523 already visited
[SelectDef] On node: ValVar ID: 1396
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1396
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1359
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1359
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1249
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1186-->1249
[SelectDef] On node: ValVar ID: 1186
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1187-->1186
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1186
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1175-->1186
[SelectDef] On node: ValVar ID: 1175
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 687-->1175
Node 687 already visited
[SelectDef] On node: ValVar ID: 1111
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1111
Node 1038 already visited
Found:
	- NodeId: 1524 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 688 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1039 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1187 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1282 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1656 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1773 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1865 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2138 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2318 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2596 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 %5, i32* %i_instrumented, align 4
Target of   store i32 %5, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2149
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2150
[SelectDef] On node: FIObjVar ID: 2150 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2150 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2150 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2135
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2136
[SelectDef] On node: FIObjVar ID: 2136 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2136 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2136 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2147
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2148
[SelectDef] On node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2148 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i16 %conv_instrumented, i16* %type2_instrumented, align 4
Target of   store i16 %conv_instrumented, i16* %type2_instrumented, align 4 is   %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0 with PAG id 2182
Checking PagEdge node associated to:   %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0
Visist starts at PAGNode 2181
[SelectDef] On node: ValVar ID: 2181
   %14 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2147-->2181
[SelectDef] On node: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2148-->2147
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2147
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2177-->2147
[SelectDef] On node: ValVar ID: 2177
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2175-->2177
[SelectDef] On node: ValVar ID: 2175
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2174-->2175
[SelectDef] On node: ValVar ID: 2174
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2173-->2174
[SelectDef] On node: ValVar ID: 2173
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2139-->2173
[SelectDef] On node: ValVar ID: 2139
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2140-->2139
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2139
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2122-->2139
[SelectDef] On node: ValVar ID: 2122
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1112-->2122
On edge 1250-->2122
On edge 1360-->2122
On edge 1397-->2122
On edge 1576-->2122
On edge 1626-->2122
On edge 1742-->2122
On edge 1833-->2122
On edge 1925-->2122
On edge 2412-->2122
[SelectDef] On node: ValVar ID: 2412
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2412
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1925
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1925
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
Node 691 already visited
[SelectDef] On node: ValVar ID: 1833
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1833
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1742
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1742
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1626
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1626
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1576
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1576
Node 1525 already visited
[SelectDef] On node: ValVar ID: 1397
   %46 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1397
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1360
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1360
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1250
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1250
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 1112
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1112
Node 1040 already visited
Found:
	- NodeId: 1526 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1189 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1658 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1775 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1867 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2140 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2148 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2598 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4
Target of   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4 is   %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2 with PAG id 2192
Checking PagEdge node associated to:   %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2
Visist starts at PAGNode 2191
[SelectDef] On node: ValVar ID: 2191
   %18 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2147-->2191
[SelectDef] On node: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2148-->2147
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2147
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2177-->2147
[SelectDef] On node: ValVar ID: 2177
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2175-->2177
[SelectDef] On node: ValVar ID: 2175
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2174-->2175
[SelectDef] On node: ValVar ID: 2174
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2173-->2174
[SelectDef] On node: ValVar ID: 2173
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2139-->2173
[SelectDef] On node: ValVar ID: 2139
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2140-->2139
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2139
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2122-->2139
[SelectDef] On node: ValVar ID: 2122
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1112-->2122
On edge 1250-->2122
On edge 1360-->2122
On edge 1397-->2122
On edge 1576-->2122
On edge 1626-->2122
On edge 1742-->2122
On edge 1833-->2122
On edge 1925-->2122
On edge 2412-->2122
[SelectDef] On node: ValVar ID: 2412
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2412
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1925
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1925
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
Node 691 already visited
[SelectDef] On node: ValVar ID: 1833
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1833
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1742
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1742
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1626
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1626
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1576
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1576
Node 1525 already visited
[SelectDef] On node: ValVar ID: 1397
   %46 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1397
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1360
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1360
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1250
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1250
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 1112
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1112
Node 1040 already visited
Found:
	- NodeId: 1526 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1189 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1658 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1775 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1867 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2140 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2148 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2598 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4
Target of   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4 is   %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3 with PAG id 2202
Checking PagEdge node associated to:   %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3
Visist starts at PAGNode 2201
[SelectDef] On node: ValVar ID: 2201
   %22 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2147-->2201
[SelectDef] On node: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2148-->2147
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2147
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2177-->2147
[SelectDef] On node: ValVar ID: 2177
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2175-->2177
[SelectDef] On node: ValVar ID: 2175
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2174-->2175
[SelectDef] On node: ValVar ID: 2174
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2173-->2174
[SelectDef] On node: ValVar ID: 2173
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2139-->2173
[SelectDef] On node: ValVar ID: 2139
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2140-->2139
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2139
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2122-->2139
[SelectDef] On node: ValVar ID: 2122
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1112-->2122
On edge 1250-->2122
On edge 1360-->2122
On edge 1397-->2122
On edge 1576-->2122
On edge 1626-->2122
On edge 1742-->2122
On edge 1833-->2122
On edge 1925-->2122
On edge 2412-->2122
[SelectDef] On node: ValVar ID: 2412
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2412
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1925
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1925
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
Node 691 already visited
[SelectDef] On node: ValVar ID: 1833
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1833
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1742
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1742
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1626
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1626
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1576
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1576
Node 1525 already visited
[SelectDef] On node: ValVar ID: 1397
   %46 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1397
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1360
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1360
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1250
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1250
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 1112
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1112
Node 1040 already visited
Found:
	- NodeId: 1526 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1189 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1658 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1775 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1867 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2140 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2148 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2598 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i16 0, i16* %size_instrumented, align 2
Target of   store i16 0, i16* %size_instrumented, align 2 is   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1 with PAG id 2205
Checking PagEdge node associated to:   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1
Visist starts at PAGNode 2204
[SelectDef] On node: ValVar ID: 2204
   %23 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2147-->2204
[SelectDef] On node: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2148-->2147
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2147
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2177-->2147
[SelectDef] On node: ValVar ID: 2177
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2175-->2177
[SelectDef] On node: ValVar ID: 2175
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2174-->2175
[SelectDef] On node: ValVar ID: 2174
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2173-->2174
[SelectDef] On node: ValVar ID: 2173
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2139-->2173
[SelectDef] On node: ValVar ID: 2139
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2140-->2139
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2139
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2122-->2139
[SelectDef] On node: ValVar ID: 2122
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1112-->2122
On edge 1250-->2122
On edge 1360-->2122
On edge 1397-->2122
On edge 1576-->2122
On edge 1626-->2122
On edge 1742-->2122
On edge 1833-->2122
On edge 1925-->2122
On edge 2412-->2122
[SelectDef] On node: ValVar ID: 2412
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2412
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1925
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1925
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
Node 691 already visited
[SelectDef] On node: ValVar ID: 1833
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1833
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1742
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1742
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1626
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1626
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1576
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1576
Node 1525 already visited
[SelectDef] On node: ValVar ID: 1397
   %46 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1397
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1360
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1360
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1250
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1250
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 1112
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1112
Node 1040 already visited
Found:
	- NodeId: 1526 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1189 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1658 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1775 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1867 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2140 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2148 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2598 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %inc7_instrumented, i32* %taglevel_instrumented, align 4
Target of   store i32 %inc7_instrumented, i32* %taglevel_instrumented, align 4 is   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %25, i32 0, i32 2 with PAG id 2210
Checking PagEdge node associated to:   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %25, i32 0, i32 2
Visist starts at PAGNode 2209
[SelectDef] On node: ValVar ID: 2209
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2137-->2209
[SelectDef] On node: ValVar ID: 2137
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2138-->2137
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2137
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2138 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2121-->2137
[SelectDef] On node: ValVar ID: 2121
 %struct.sxml_t* %state { 0th arg state_pushtoken_instrumented  }
On edge 1111-->2121
On edge 1249-->2121
On edge 1359-->2121
On edge 1396-->2121
On edge 1575-->2121
On edge 1625-->2121
On edge 1741-->2121
On edge 1832-->2121
On edge 1924-->2121
On edge 2411-->2121
[SelectDef] On node: ValVar ID: 2411
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2411
[SelectDef] On node: ValVar ID: 2317
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2318-->2317
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2317
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2306-->2317
[SelectDef] On node: ValVar ID: 2306
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1123-->2306
On edge 1368-->2306
[SelectDef] On node: ValVar ID: 1368
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1368
[SelectDef] On node: ValVar ID: 1281
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1282-->1281
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1281
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1270-->1281
[SelectDef] On node: ValVar ID: 1270
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 687-->1270
On edge 687-->1270
Node 687 already visited
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 1123
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1123
[SelectDef] On node: ValVar ID: 1038
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1039-->1038
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1038
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1027-->1038
[SelectDef] On node: ValVar ID: 1027
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 687-->1027
Node 687 already visited
On edge 687-->1027
Node 687 already visited
[SelectDef] On node: ValVar ID: 1924
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1864-->1924
[SelectDef] On node: ValVar ID: 1864
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1865-->1864
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1864
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1853-->1864
[SelectDef] On node: ValVar ID: 1853
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 687-->1853
Node 687 already visited
[SelectDef] On node: ValVar ID: 1832
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1772-->1832
[SelectDef] On node: ValVar ID: 1772
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1773-->1772
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1772
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1761-->1772
[SelectDef] On node: ValVar ID: 1761
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 687-->1761
Node 687 already visited
[SelectDef] On node: ValVar ID: 1741
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1655-->1741
[SelectDef] On node: ValVar ID: 1655
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1656-->1655
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1655
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1644-->1655
[SelectDef] On node: ValVar ID: 1644
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 687-->1644
Node 687 already visited
[SelectDef] On node: ValVar ID: 1625
   %41 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1625
[SelectDef] On node: ValVar ID: 1523
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1524-->1523
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1523
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1510-->1523
[SelectDef] On node: ValVar ID: 1510
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 687-->1510
Node 687 already visited
On edge 2618-->1510
[SelectDef] On node: ValVar ID: 2618
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2595-->2618
[SelectDef] On node: ValVar ID: 2595
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2596-->2595
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2595
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2582-->2595
[SelectDef] On node: ValVar ID: 2582
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2463-->2582
[SelectDef] On node: ValVar ID: 2463
   %53 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2463
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1575
   %20 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1575
Node 1523 already visited
[SelectDef] On node: ValVar ID: 1396
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1396
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1359
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1359
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1249
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1186-->1249
[SelectDef] On node: ValVar ID: 1186
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1187-->1186
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1186
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1175-->1186
[SelectDef] On node: ValVar ID: 1175
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 687-->1175
Node 687 already visited
[SelectDef] On node: ValVar ID: 1111
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1111
Node 1038 already visited
Found:
	- NodeId: 1524 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 688 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1039 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1187 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1282 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1656 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1773 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1865 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2138 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2318 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2596 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 %dec_instrumented, i32* %taglevel14_instrumented, align 4
Target of   store i32 %dec_instrumented, i32* %taglevel14_instrumented, align 4 is   %taglevel14_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %32, i32 0, i32 2 with PAG id 2230
Checking PagEdge node associated to:   %taglevel14_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %32, i32 0, i32 2
Visist starts at PAGNode 2229
[SelectDef] On node: ValVar ID: 2229
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2137-->2229
[SelectDef] On node: ValVar ID: 2137
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2138-->2137
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2137
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2138 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2121-->2137
[SelectDef] On node: ValVar ID: 2121
 %struct.sxml_t* %state { 0th arg state_pushtoken_instrumented  }
On edge 1111-->2121
On edge 1249-->2121
On edge 1359-->2121
On edge 1396-->2121
On edge 1575-->2121
On edge 1625-->2121
On edge 1741-->2121
On edge 1832-->2121
On edge 1924-->2121
On edge 2411-->2121
[SelectDef] On node: ValVar ID: 2411
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2411
[SelectDef] On node: ValVar ID: 2317
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2318-->2317
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2317
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2306-->2317
[SelectDef] On node: ValVar ID: 2306
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1123-->2306
On edge 1368-->2306
[SelectDef] On node: ValVar ID: 1368
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1368
[SelectDef] On node: ValVar ID: 1281
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1282-->1281
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1281
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1270-->1281
[SelectDef] On node: ValVar ID: 1270
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 687-->1270
On edge 687-->1270
Node 687 already visited
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 1123
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1123
[SelectDef] On node: ValVar ID: 1038
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1039-->1038
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1038
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1027-->1038
[SelectDef] On node: ValVar ID: 1027
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 687-->1027
Node 687 already visited
On edge 687-->1027
Node 687 already visited
[SelectDef] On node: ValVar ID: 1924
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1864-->1924
[SelectDef] On node: ValVar ID: 1864
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1865-->1864
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1864
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1853-->1864
[SelectDef] On node: ValVar ID: 1853
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 687-->1853
Node 687 already visited
[SelectDef] On node: ValVar ID: 1832
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1772-->1832
[SelectDef] On node: ValVar ID: 1772
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1773-->1772
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1772
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1761-->1772
[SelectDef] On node: ValVar ID: 1761
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 687-->1761
Node 687 already visited
[SelectDef] On node: ValVar ID: 1741
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1655-->1741
[SelectDef] On node: ValVar ID: 1655
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1656-->1655
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1655
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1644-->1655
[SelectDef] On node: ValVar ID: 1644
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 687-->1644
Node 687 already visited
[SelectDef] On node: ValVar ID: 1625
   %41 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1625
[SelectDef] On node: ValVar ID: 1523
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1524-->1523
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1523
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1510-->1523
[SelectDef] On node: ValVar ID: 1510
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 687-->1510
Node 687 already visited
On edge 2618-->1510
[SelectDef] On node: ValVar ID: 2618
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2595-->2618
[SelectDef] On node: ValVar ID: 2595
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2596-->2595
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2595
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2582-->2595
[SelectDef] On node: ValVar ID: 2582
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2463-->2582
[SelectDef] On node: ValVar ID: 2463
   %53 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2463
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1575
   %20 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1575
Node 1523 already visited
[SelectDef] On node: ValVar ID: 1396
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1396
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1359
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1359
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1249
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1186-->1249
[SelectDef] On node: ValVar ID: 1186
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1187-->1186
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1186
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1175-->1186
[SelectDef] On node: ValVar ID: 1175
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 687-->1175
Node 687 already visited
[SelectDef] On node: ValVar ID: 1111
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1111
Node 1038 already visited
Found:
	- NodeId: 1524 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 688 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1039 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1187 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1282 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1656 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1773 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1865 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2138 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2318 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2596 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2135
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2136
[SelectDef] On node: FIObjVar ID: 2136 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2136 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2136 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %38, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %38, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_find_notalnum_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2255
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2256
[SelectDef] On node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2256 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2257
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2258
[SelectDef] On node: FIObjVar ID: 2258 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2258 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2258 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %it_instrumented, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2259
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2260
[SelectDef] On node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2260 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2259
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2260
[SelectDef] On node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2260 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %20, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %20, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_attributes_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 2317
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 2318
[SelectDef] On node: FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 2318 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 2319
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 2320
[SelectDef] On node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 2321
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2322
[SelectDef] On node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2322 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 2323
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2324
[SelectDef] On node: FIObjVar ID: 2324 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2324 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2324 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 2325
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2326
[SelectDef] On node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2326 Instr:   %name_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %15, i32* %ntokens_instrumented, align 4
Target of   store i32 %15, i32* %ntokens_instrumented, align 4 is   %ntokens_instrumented = alloca i32, align 4 with PAG id 2327
Checking PagEdge node associated to:   %ntokens_instrumented = alloca i32, align 4
Visist starts at PAGNode 2328
[SelectDef] On node: FIObjVar ID: 2328 (base object)
   %ntokens_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2328 (base object)
   %ntokens_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2328 Instr:   %ntokens_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %eq_instrumented, align 4 is   %eq_instrumented = alloca i8*, align 4 with PAG id 2329
Checking PagEdge node associated to:   %eq_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2330
[SelectDef] On node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2330 Instr:   %eq_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call11_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 2331
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2332
[SelectDef] On node: FIObjVar ID: 2332 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2332 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2332 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call14_instrumented, i8** %quot_instrumented, align 4
Target of   store i8* %call14_instrumented, i8** %quot_instrumented, align 4 is   %quot_instrumented = alloca i8*, align 4 with PAG id 2333
Checking PagEdge node associated to:   %quot_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2334
[SelectDef] On node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2334 Instr:   %quot_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr28_instrumented, i8** %value_instrumented, align 4
Target of   store i8* %add.ptr28_instrumented, i8** %value_instrumented, align 4 is   %value_instrumented = alloca i8*, align 4 with PAG id 2335
Checking PagEdge node associated to:   %value_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2336
[SelectDef] On node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2336 Instr:   %value_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call30_instrumented, i8** %quot_instrumented, align 4
Target of   store i8* %call30_instrumented, i8** %quot_instrumented, align 4 is   %quot_instrumented = alloca i8*, align 4 with PAG id 2333
Checking PagEdge node associated to:   %quot_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2334
[SelectDef] On node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2334 Instr:   %quot_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call36_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call36_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 2337
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 2338
[SelectDef] On node: FIObjVar ID: 2338 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2338 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2338 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %57, i32* %retval_instrumented, align 4
Target of   store i32 %57, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call42_instrumented, i8** %name_instrumented, align 4
Target of   store i8* %call42_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 2325
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2326
[SelectDef] On node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2326 Instr:   %name_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %add.ptr43_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %add.ptr43_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2339
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2340
[SelectDef] On node: FIObjVar ID: 2340 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2340 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2340 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i16 %conv46_instrumented, i16* %size_instrumented, align 2
Target of   store i16 %conv46_instrumented, i16* %size_instrumented, align 2 is   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %66, i32 0, i32 1 with PAG id 2496
Checking PagEdge node associated to:   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %66, i32 0, i32 1
Visist starts at PAGNode 2495
[SelectDef] On node: ValVar ID: 2495
   %66 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2339-->2495
[SelectDef] On node: ValVar ID: 2339
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2340-->2339
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2339
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2340 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2487-->2339
[SelectDef] On node: ValVar ID: 2487
   %add.ptr43_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %61, i32 %sub_instrumented 
On edge 2484-->2487
[SelectDef] On node: ValVar ID: 2484
   %61 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2483-->2484
[SelectDef] On node: ValVar ID: 2483
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %60, i32 0, i32 2 
On edge 2482-->2483
[SelectDef] On node: ValVar ID: 2482
   %60 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2482
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
Found:
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2340 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %call47_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call47_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %74, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %74, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_rtrim_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2523
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2524
[SelectDef] On node: FIObjVar ID: 2524 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2524 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2524 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2525
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2526
[SelectDef] On node: FIObjVar ID: 2526 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2526 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2526 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %it_instrumented, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2527
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2528
[SelectDef] On node: FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2528 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4 is   %prev_instrumented = alloca i8*, align 4 with PAG id 2529
Checking PagEdge node associated to:   %prev_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2530
[SelectDef] On node: FIObjVar ID: 2530 (base object)
   %prev_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2530 (base object)
   %prev_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2530 Instr:   %prev_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %15, i8** %retval_instrumented, align 4
Target of   store i8* %15, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2521
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2522
[SelectDef] On node: FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2522 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %16, i8** %it_instrumented, align 4
Target of   store i8* %16, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2527
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2528
[SelectDef] On node: FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2528 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %17, i8** %retval_instrumented, align 4
Target of   store i8* %17, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2521
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2522
[SelectDef] On node: FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2522 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %22, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %22, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_attrvalue_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 2595
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 2596
[SelectDef] On node: FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 2596 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 2597
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 2598
[SelectDef] On node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 2598 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2599
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2600
[SelectDef] On node: FIObjVar ID: 2600 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2600 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2600 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 2601
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 2602
[SelectDef] On node: FIObjVar ID: 2602 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2602 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2602 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %13, i32* %retval_instrumented, align 4
Target of   store i32 %13, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2593
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2594
[SelectDef] On node: FIObjVar ID: 2594 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2594 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2594 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2593
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2594
[SelectDef] On node: FIObjVar ID: 2594 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2594 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2594 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %18, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %18, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function print_prettyxml_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2653
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2654
[SelectDef] On node: FIObjVar ID: 2654 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2654 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2654 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4 is   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2655
Checking PagEdge node associated to:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2656
[SelectDef] On node: FIObjVar ID: 2656 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2656 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2656 Instr:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4
Target of   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4 is   %num_tokens.addr_instrumented = alloca i32, align 4 with PAG id 2657
Checking PagEdge node associated to:   %num_tokens.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2658
[SelectDef] On node: FIObjVar ID: 2658 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2658 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2658 Instr:   %num_tokens.addr_instrumented = alloca i32, align 4
Finding defs for:   store i32* %indentlevel, i32** %indentlevel.addr_instrumented, align 4
Target of   store i32* %indentlevel, i32** %indentlevel.addr_instrumented, align 4 is   %indentlevel.addr_instrumented = alloca i32*, align 4 with PAG id 2659
Checking PagEdge node associated to:   %indentlevel.addr_instrumented = alloca i32*, align 4
Visist starts at PAGNode 2660
[SelectDef] On node: FIObjVar ID: 2660 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4 
Start node is a Def already, adding FIObjVar ID: 2660 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4  to result
Found:
	- NodeId: 2660 Instr:   %indentlevel.addr_instrumented = alloca i32*, align 4
Finding defs for:   store i32 0, i32* %i_instrumented, align 4
Target of   store i32 0, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2661
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2662
[SelectDef] On node: FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2662 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2663
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2664
[SelectDef] On node: FIObjVar ID: 2664 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2664 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2664 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %10, align 4
Target of   store i32 %inc_instrumented, i32* %10, align 4 is   %10 = load i32*, i32** %indentlevel.addr_instrumented, align 4 with PAG id 2687
Checking PagEdge node associated to:   %10 = load i32*, i32** %indentlevel.addr_instrumented, align 4
Visist starts at PAGNode 2659
[SelectDef] On node: ValVar ID: 2659
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2660-->2659
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2659
	-  %indentlevel.addr_instrumented = alloca i32*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2660 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2644-->2659
[SelectDef] On node: ValVar ID: 2644
 i32* %indentlevel { 3rd arg print_prettyxml_instrumented  }
On edge 332-->2644
On edge 332-->2644
Node 332 already visited
On edge 332-->2644
Node 332 already visited
[SelectDef] On node: ValVar ID: 332
   %indent = alloca i32, align 4 
On edge 333-->332
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 332
	-  %indent = alloca i32, align 4
[SelectDefs] Adding node: FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4 
On edge 228-->332
[SelectDef] On node: ValVar ID: 228
 i32 0 { constant data }
On edge 3-->228
Discarding edge
Found:
	- NodeId: 333 Instr:   %indent = alloca i32, align 4
	- NodeId: 2660 Instr:   %indentlevel.addr_instrumented = alloca i32*, align 4
Finding defs for:   store i32 0, i32* %j_instrumented, align 4
Target of   store i32 0, i32* %j_instrumented, align 4 is   %j_instrumented = alloca i32, align 4 with PAG id 2665
Checking PagEdge node associated to:   %j_instrumented = alloca i32, align 4
Visist starts at PAGNode 2666
[SelectDef] On node: FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2666 Instr:   %j_instrumented = alloca i32, align 4
Finding defs for:   store i32 %add14_instrumented, i32* %j_instrumented, align 4
Target of   store i32 %add14_instrumented, i32* %j_instrumented, align 4 is   %j_instrumented = alloca i32, align 4 with PAG id 2665
Checking PagEdge node associated to:   %j_instrumented = alloca i32, align 4
Visist starts at PAGNode 2666
[SelectDef] On node: FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2666 Instr:   %j_instrumented = alloca i32, align 4
Finding defs for:   store i32 %inc16_instrumented, i32* %j_instrumented, align 4
Target of   store i32 %inc16_instrumented, i32* %j_instrumented, align 4 is   %j_instrumented = alloca i32, align 4 with PAG id 2665
Checking PagEdge node associated to:   %j_instrumented = alloca i32, align 4
Visist starts at PAGNode 2666
[SelectDef] On node: FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2666 Instr:   %j_instrumented = alloca i32, align 4
Finding defs for:   store i32 %dec_instrumented, i32* %33, align 4
Target of   store i32 %dec_instrumented, i32* %33, align 4 is   %33 = load i32*, i32** %indentlevel.addr_instrumented, align 4 with PAG id 2749
Checking PagEdge node associated to:   %33 = load i32*, i32** %indentlevel.addr_instrumented, align 4
Visist starts at PAGNode 2659
[SelectDef] On node: ValVar ID: 2659
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2660-->2659
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2659
	-  %indentlevel.addr_instrumented = alloca i32*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2660 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2644-->2659
[SelectDef] On node: ValVar ID: 2644
 i32* %indentlevel { 3rd arg print_prettyxml_instrumented  }
On edge 332-->2644
On edge 332-->2644
Node 332 already visited
On edge 332-->2644
Node 332 already visited
[SelectDef] On node: ValVar ID: 332
   %indent = alloca i32, align 4 
On edge 333-->332
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 332
	-  %indent = alloca i32, align 4
[SelectDefs] Adding node: FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4 
On edge 228-->332
[SelectDef] On node: ValVar ID: 228
 i32 0 { constant data }
On edge 3-->228
Discarding edge
Found:
	- NodeId: 333 Instr:   %indent = alloca i32, align 4
	- NodeId: 2660 Instr:   %indentlevel.addr_instrumented = alloca i32*, align 4
Finding defs for:   store i32 %add23_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %add23_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2661
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2662
[SelectDef] On node: FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2662 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i32 %inc25_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %inc25_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2661
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2662
[SelectDef] On node: FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2662 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i16 %46, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %46, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function count_lines_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2791
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2792
[SelectDef] On node: FIObjVar ID: 2792 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2792 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2792 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Target of   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 is   %bufferlen.addr_instrumented = alloca i32, align 4 with PAG id 2793
Checking PagEdge node associated to:   %bufferlen.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2794
[SelectDef] On node: FIObjVar ID: 2794 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2794 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2794 Instr:   %bufferlen.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 2795
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2796
[SelectDef] On node: FIObjVar ID: 2796 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2796 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2796 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %6, i8** %it_instrumented, align 4
Target of   store i8* %6, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2797
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2798
[SelectDef] On node: FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2798 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i32 0, i32* %i_instrumented, align 4
Target of   store i32 0, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2799
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2800
[SelectDef] On node: FIObjVar ID: 2800 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2800 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2800 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2797
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2798
[SelectDef] On node: FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2798 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %15, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %15, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2797
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2798
[SelectDef] On node: FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2798 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %inc_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2799
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2800
[SelectDef] On node: FIObjVar ID: 2800 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2800 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2800 Instr:   %i_instrumented = alloca i32, align 4
Checking function print_tokenvalue_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2850
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2851
[SelectDef] On node: FIObjVar ID: 2851 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2851 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2851 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %token, %struct.sxmltok_t** %token.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %token, %struct.sxmltok_t** %token.addr_instrumented, align 4 is   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2852
Checking PagEdge node associated to:   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2853
[SelectDef] On node: FIObjVar ID: 2853 (base object)
   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2853 (base object)
   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2853 Instr:   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i16 %15, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %15, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function print_chartokens_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2894
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2895
[SelectDef] On node: FIObjVar ID: 2895 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2895 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2895 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4 is   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2896
Checking PagEdge node associated to:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2897
[SelectDef] On node: FIObjVar ID: 2897 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2897 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2897 Instr:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4
Target of   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4 is   %num_tokens.addr_instrumented = alloca i32, align 4 with PAG id 2898
Checking PagEdge node associated to:   %num_tokens.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2899
[SelectDef] On node: FIObjVar ID: 2899 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2899 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2899 Instr:   %num_tokens.addr_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %i_instrumented, align 4
Target of   store i32 0, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2900
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2901
[SelectDef] On node: FIObjVar ID: 2901 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2901 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2901 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2904
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2905
[SelectDef] On node: FIObjVar ID: 2905 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2905 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2905 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %10, i32* %retval_instrumented, align 4
Target of   store i32 %10, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2892
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2893
[SelectDef] On node: FIObjVar ID: 2893 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2893 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2893 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr3_instrumented, i8** %ampr_instrumented, align 4
Target of   store i8* %add.ptr3_instrumented, i8** %ampr_instrumented, align 4 is   %ampr_instrumented = alloca i8*, align 4 with PAG id 2902
Checking PagEdge node associated to:   %ampr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2903
[SelectDef] On node: FIObjVar ID: 2903 (base object)
   %ampr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2903 (base object)
   %ampr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2903 Instr:   %ampr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %inc_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2900
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2901
[SelectDef] On node: FIObjVar ID: 2901 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2901 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2901 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i32 %39, i32* %retval_instrumented, align 4
Target of   store i32 %39, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2892
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2893
[SelectDef] On node: FIObjVar ID: 2893 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2893 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2893 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %44, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %44, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
On input [212.IN] (PAGNode: 368) __isoc99_scanf
--- Children ---
[213.LIBUSE]  Call:  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* %7, i8* %arraydecay)
--- Children ---
[1.ADEF] (PAGNode: 327) FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
----------------
----------------

Checking PagEdge node associated to:   %arraydecay = getelementptr inbounds [8128 x i8], [8128 x i8]* %buffer, i32 0, i32 0
Visist starts at PAGNode 326
[DEBUG] findFirstDominator found 1 elements
Considering Def:
[1.ADEF] (PAGNode: 327) FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 

Of Use:
[213.LIBUSE]  Call:  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* %7, i8* %arraydecay)
--- Children ---
[1.ADEF] (PAGNode: 327) FIObjVar ID: 327 (base object)
   %buffer = alloca [8128 x i8], align 1 
----------------

Avoiding pre-calculated indirect link
Checking function hook_exit
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i16 %7, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %7, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function llvm.memcpy.p0i8.p0i8.i32
Checking function __assert_fail
Checking function strlen
Checking function memchr
Checking function memcmp
Checking function NameStartChar
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %c, i32* %c.addr, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 162
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 163
[SelectDef] On node: FIObjVar ID: 163 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 163 (base object)
   %c.addr = alloca i32, align 4  to result
Found:
	- NodeId: 163 Instr:   %c.addr = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval, align 4
Target of   store i32 1, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 160
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 161
[SelectDef] On node: FIObjVar ID: 161 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 161 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 161 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 %lor.ext, i32* %retval, align 4
Target of   store i32 %lor.ext, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 160
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 161
[SelectDef] On node: FIObjVar ID: 161 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 161 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 161 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i16 %17, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %17, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function NameChar
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %c, i32* %c.addr, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 222
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 223
[SelectDef] On node: FIObjVar ID: 223 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 223 (base object)
   %c.addr = alloca i32, align 4  to result
Found:
	- NodeId: 223 Instr:   %c.addr = alloca i32, align 4
Finding defs for:   store i16 %19, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %19, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function WhiteSpace
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %c, i32* %c.addr, align 4
Target of   store i32 %c, i32* %c.addr, align 4 is   %c.addr = alloca i32, align 4 with PAG id 289
Checking PagEdge node associated to:   %c.addr = alloca i32, align 4
Visist starts at PAGNode 290
[SelectDef] On node: FIObjVar ID: 290 (base object)
   %c.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 290 (base object)
   %c.addr = alloca i32, align 4  to result
Found:
	- NodeId: 290 Instr:   %c.addr = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval, align 4
Target of   store i32 1, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 287
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 288
[SelectDef] On node: FIObjVar ID: 288 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 288 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 288 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval, align 4
Target of   store i32 0, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 287
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 288
[SelectDef] On node: FIObjVar ID: 288 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 288 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 288 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i16 %9, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %9, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function main
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 0, i32* %retval, align 4
Target of   store i32 0, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 316
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 317
[SelectDef] On node: FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 317 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 %argc, i32* %argc.addr, align 4
Target of   store i32 %argc, i32* %argc.addr, align 4 is   %argc.addr = alloca i32, align 4 with PAG id 318
Checking PagEdge node associated to:   %argc.addr = alloca i32, align 4
Visist starts at PAGNode 319
[SelectDef] On node: FIObjVar ID: 319 (base object)
   %argc.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 319 (base object)
   %argc.addr = alloca i32, align 4  to result
Found:
	- NodeId: 319 Instr:   %argc.addr = alloca i32, align 4
Finding defs for:   store i8** %argv, i8*** %argv.addr, align 4
Target of   store i8** %argv, i8*** %argv.addr, align 4 is   %argv.addr = alloca i8**, align 4 with PAG id 320
Checking PagEdge node associated to:   %argv.addr = alloca i8**, align 4
Visist starts at PAGNode 321
[SelectDef] On node: FIObjVar ID: 321 (base object)
   %argv.addr = alloca i8**, align 4 
Start node is a Def already, adding FIObjVar ID: 321 (base object)
   %argv.addr = alloca i8**, align 4  to result
Found:
	- NodeId: 321 Instr:   %argv.addr = alloca i8**, align 4
Finding defs for:   store i32 0, i32* %bufferlen, align 4
Target of   store i32 0, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 328
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 329
[SelectDef] On node: FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4  to result
Found:
	- NodeId: 329 Instr:   %bufferlen = alloca i32, align 4
Finding defs for:   store i32 0, i32* %indent, align 4
Target of   store i32 0, i32* %indent, align 4 is   %indent = alloca i32, align 4 with PAG id 332
Checking PagEdge node associated to:   %indent = alloca i32, align 4
Visist starts at PAGNode 333
[SelectDef] On node: FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4  to result
Found:
	- NodeId: 333 Instr:   %indent = alloca i32, align 4
Finding defs for:   store i32 1, i32* %lineno, align 4
Target of   store i32 1, i32* %lineno, align 4 is   %lineno = alloca i32, align 4 with PAG id 334
Checking PagEdge node associated to:   %lineno = alloca i32, align 4
Visist starts at PAGNode 335
[SelectDef] On node: FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4  to result
Found:
	- NodeId: 335 Instr:   %lineno = alloca i32, align 4
Finding defs for:   store %struct._IO_FILE* %4, %struct._IO_FILE** %file, align 4
Target of   store %struct._IO_FILE* %4, %struct._IO_FILE** %file, align 4 is   %file = alloca %struct._IO_FILE*, align 4 with PAG id 338
Checking PagEdge node associated to:   %file = alloca %struct._IO_FILE*, align 4
Visist starts at PAGNode 339
[SelectDef] On node: FIObjVar ID: 339 (base object)
   %file = alloca %struct._IO_FILE*, align 4 
Start node is a Def already, adding FIObjVar ID: 339 (base object)
   %file = alloca %struct._IO_FILE*, align 4  to result
Found:
	- NodeId: 339 Instr:   %file = alloca %struct._IO_FILE*, align 4
Finding defs for:   store i32 %call4, i32* %err, align 4
Target of   store i32 %call4, i32* %err, align 4 is   %err = alloca i32, align 4 with PAG id 342
Checking PagEdge node associated to:   %err = alloca i32, align 4
Visist starts at PAGNode 343
[SelectDef] On node: FIObjVar ID: 343 (base object)
   %err = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 343 (base object)
   %err = alloca i32, align 4  to result
Found:
	- NodeId: 343 Instr:   %err = alloca i32, align 4
Finding defs for:   store i32 0, i32* %ntokens7, align 4
Target of   store i32 0, i32* %ntokens7, align 4 is   %ntokens7 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1 with PAG id 400
Checking PagEdge node associated to:   %ntokens7 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1
Visist starts at PAGNode 340
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
Finding defs for:   store i32 0, i32* %ntokens12, align 4
Target of   store i32 0, i32* %ntokens12, align 4 is   %ntokens12 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1 with PAG id 409
Checking PagEdge node associated to:   %ntokens12 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 1
Visist starts at PAGNode 340
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
Finding defs for:   store i32 %add, i32* %lineno, align 4
Target of   store i32 %add, i32* %lineno, align 4 is   %lineno = alloca i32, align 4 with PAG id 334
Checking PagEdge node associated to:   %lineno = alloca i32, align 4
Visist starts at PAGNode 335
[SelectDef] On node: FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4  to result
Found:
	- NodeId: 335 Instr:   %lineno = alloca i32, align 4
Finding defs for:   store i32 %sub, i32* %bufferlen, align 4
Target of   store i32 %sub, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 328
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 329
[SelectDef] On node: FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4  to result
Found:
	- NodeId: 329 Instr:   %bufferlen = alloca i32, align 4
Finding defs for:   store i32 %call25, i32* %len, align 4
Target of   store i32 %call25, i32* %len, align 4 is   %len = alloca i32, align 4 with PAG id 344
Checking PagEdge node associated to:   %len = alloca i32, align 4
Visist starts at PAGNode 345
[SelectDef] On node: FIObjVar ID: 345 (base object)
   %len = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 345 (base object)
   %len = alloca i32, align 4  to result
Found:
	- NodeId: 345 Instr:   %len = alloca i32, align 4
Finding defs for:   store i32 %add30, i32* %bufferlen, align 4
Target of   store i32 %add30, i32* %bufferlen, align 4 is   %bufferlen = alloca i32, align 4 with PAG id 328
Checking PagEdge node associated to:   %bufferlen = alloca i32, align 4
Visist starts at PAGNode 329
[SelectDef] On node: FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 329 (base object)
   %bufferlen = alloca i32, align 4  to result
Found:
	- NodeId: 329 Instr:   %bufferlen = alloca i32, align 4
Finding defs for:   store i32 0, i32* %bufferpos31, align 4
Target of   store i32 0, i32* %bufferpos31, align 4 is   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0 with PAG id 472
Checking PagEdge node associated to:   %bufferpos31 = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %parser, i32 0, i32 0
Visist starts at PAGNode 340
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
Finding defs for:   store i32 %add36, i32* %lineno, align 4
Target of   store i32 %add36, i32* %lineno, align 4 is   %lineno = alloca i32, align 4 with PAG id 334
Checking PagEdge node associated to:   %lineno = alloca i32, align 4
Visist starts at PAGNode 335
[SelectDef] On node: FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 335 (base object)
   %lineno = alloca i32, align 4  to result
Found:
	- NodeId: 335 Instr:   %lineno = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval, align 4
Target of   store i32 1, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 316
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 317
[SelectDef] On node: FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 317 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i32 %sub55, i32* %seconds, align 4
Target of   store i32 %sub55, i32* %seconds, align 4 is   %seconds = alloca i32, align 4 with PAG id 348
Checking PagEdge node associated to:   %seconds = alloca i32, align 4
Visist starts at PAGNode 349
[SelectDef] On node: FIObjVar ID: 349 (base object)
   %seconds = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 349 (base object)
   %seconds = alloca i32, align 4  to result
Found:
	- NodeId: 349 Instr:   %seconds = alloca i32, align 4
Finding defs for:   store i32 %sub57, i32* %microseconds, align 4
Target of   store i32 %sub57, i32* %microseconds, align 4 is   %microseconds = alloca i32, align 4 with PAG id 350
Checking PagEdge node associated to:   %microseconds = alloca i32, align 4
Visist starts at PAGNode 351
[SelectDef] On node: FIObjVar ID: 351 (base object)
   %microseconds = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 351 (base object)
   %microseconds = alloca i32, align 4  to result
Found:
	- NodeId: 351 Instr:   %microseconds = alloca i32, align 4
Finding defs for:   store double %add59, double* %elapsed, align 8
Target of   store double %add59, double* %elapsed, align 8 is   %elapsed = alloca double, align 8 with PAG id 352
Checking PagEdge node associated to:   %elapsed = alloca double, align 8
Visist starts at PAGNode 353
[SelectDef] On node: FIObjVar ID: 353 (base object)
   %elapsed = alloca double, align 8 
Start node is a Def already, adding FIObjVar ID: 353 (base object)
   %elapsed = alloca double, align 8  to result
Found:
	- NodeId: 353 Instr:   %elapsed = alloca double, align 8
Finding defs for:   store i32 0, i32* %retval, align 4
Target of   store i32 0, i32* %retval, align 4 is   %retval = alloca i32, align 4 with PAG id 316
Checking PagEdge node associated to:   %retval = alloca i32, align 4
Visist starts at PAGNode 317
[SelectDef] On node: FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 317 (base object)
   %retval = alloca i32, align 4  to result
Found:
	- NodeId: 317 Instr:   %retval = alloca i32, align 4
Finding defs for:   store i16 %60, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %60, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function gettimeofday
Checking function __isoc99_scanf
Checking function llvm.memmove.p0i8.p0i8.i32
Checking function fread
Checking function fprintf
Checking function sprintf
Checking function printf
Checking function print_indent
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i32 %indentlevel, i32* %indentlevel.addr, align 4
Target of   store i32 %indentlevel, i32* %indentlevel.addr, align 4 is   %indentlevel.addr = alloca i32, align 4 with PAG id 603
Checking PagEdge node associated to:   %indentlevel.addr = alloca i32, align 4
Visist starts at PAGNode 604
[SelectDef] On node: FIObjVar ID: 604 (base object)
   %indentlevel.addr = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 604 (base object)
   %indentlevel.addr = alloca i32, align 4  to result
Found:
	- NodeId: 604 Instr:   %indentlevel.addr = alloca i32, align 4
Finding defs for:   store i16 %11, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %11, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function puts
Checking function wrapper_scanf
Checking function sxml_init_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 643
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 644
[SelectDef] On node: FIObjVar ID: 644 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 644 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 644 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 0, i32* %bufferpos_instrumented, align 4
Target of   store i32 0, i32* %bufferpos_instrumented, align 4 is   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 0 with PAG id 647
Checking PagEdge node associated to:   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 0
Visist starts at PAGNode 646
[SelectDef] On node: ValVar ID: 646
   %4 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 643-->646
[SelectDef] On node: ValVar ID: 643
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 644-->643
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 643
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 644 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 636-->643
[SelectDef] On node: ValVar ID: 636
 %struct.sxml_t* %state { 0th arg sxml_init_instrumented  }
On edge 340-->636
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
	- NodeId: 644 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 0, i32* %ntokens_instrumented, align 4
Target of   store i32 0, i32* %ntokens_instrumented, align 4 is   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %5, i32 0, i32 1 with PAG id 650
Checking PagEdge node associated to:   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %5, i32 0, i32 1
Visist starts at PAGNode 649
[SelectDef] On node: ValVar ID: 649
   %5 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 643-->649
[SelectDef] On node: ValVar ID: 643
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 644-->643
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 643
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 644 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 636-->643
[SelectDef] On node: ValVar ID: 636
 %struct.sxml_t* %state { 0th arg sxml_init_instrumented  }
On edge 340-->636
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
	- NodeId: 644 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 0, i32* %taglevel_instrumented, align 4
Target of   store i32 0, i32* %taglevel_instrumented, align 4 is   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %6, i32 0, i32 2 with PAG id 653
Checking PagEdge node associated to:   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %6, i32 0, i32 2
Visist starts at PAGNode 652
[SelectDef] On node: ValVar ID: 652
   %6 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 643-->652
[SelectDef] On node: ValVar ID: 643
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 644-->643
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 643
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 644 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 636-->643
[SelectDef] On node: ValVar ID: 636
 %struct.sxml_t* %state { 0th arg sxml_init_instrumented  }
On edge 340-->636
[SelectDef] On node: ValVar ID: 340
   %parser = alloca %struct.sxml_t, align 4 
On edge 341-->340
[SelectDefs] Adding node: FIObjVar ID: 341 (base object)
   %parser = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 341 Instr:   %parser = alloca %struct.sxml_t, align 4
	- NodeId: 644 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i16 %10, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %10, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function sxml_parse_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 677
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 678
[SelectDef] On node: FIObjVar ID: 678 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 678 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 678 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 679
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 680
[SelectDef] On node: FIObjVar ID: 680 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 680 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 680 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Target of   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 is   %bufferlen.addr_instrumented = alloca i32, align 4 with PAG id 681
Checking PagEdge node associated to:   %bufferlen.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 682
[SelectDef] On node: FIObjVar ID: 682 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 682 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 682 Instr:   %bufferlen.addr_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4 is   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 683
Checking PagEdge node associated to:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 684
[SelectDef] On node: FIObjVar ID: 684 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 684 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 684 Instr:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4
Target of   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4 is   %num_tokens.addr_instrumented = alloca i32, align 4 with PAG id 685
Checking PagEdge node associated to:   %num_tokens.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 686
[SelectDef] On node: FIObjVar ID: 686 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 686 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 686 Instr:   %num_tokens.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 689
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 690
[SelectDef] On node: FIObjVar ID: 690 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 690 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 690 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %buffer1_instrumented, align 4
Target of   store i8* %9, i8** %buffer1_instrumented, align 4 is   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0 with PAG id 722
Checking PagEdge node associated to:   %buffer1_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 0
Visist starts at PAGNode 691
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store i32 %10, i32* %bufferlen2_instrumented, align 4
Target of   store i32 %10, i32* %bufferlen2_instrumented, align 4 is   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1 with PAG id 725
Checking PagEdge node associated to:   %bufferlen2_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 1
Visist starts at PAGNode 691
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store %struct.sxmltok_t* %11, %struct.sxmltok_t** %tokens3_instrumented, align 4
Target of   store %struct.sxmltok_t* %11, %struct.sxmltok_t** %tokens3_instrumented, align 4 is   %tokens3_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 2 with PAG id 728
Checking PagEdge node associated to:   %tokens3_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 2
Visist starts at PAGNode 691
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store i32 %12, i32* %num_tokens4_instrumented, align 4
Target of   store i32 %12, i32* %num_tokens4_instrumented, align 4 is   %num_tokens4_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 3 with PAG id 731
Checking PagEdge node associated to:   %num_tokens4_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %args_instrumented, i32 0, i32 3
Visist starts at PAGNode 691
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
Found:
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
Finding defs for:   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 695
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 696
[SelectDef] On node: FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 696 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 696 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call_instrumented, i8** %lt_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %lt_instrumented, align 4 is   %lt_instrumented = alloca i8*, align 4 with PAG id 697
Checking PagEdge node associated to:   %lt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 698
[SelectDef] On node: FIObjVar ID: 698 (base object)
   %lt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 698 (base object)
   %lt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 698 Instr:   %lt_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call14_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call14_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 693
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 694
[SelectDef] On node: FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 694 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call16_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call16_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 693
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 694
[SelectDef] On node: FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 694 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call17_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call17_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 693
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 694
[SelectDef] On node: FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 694 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 694 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %29, i32* %retval_instrumented, align 4
Target of   store i32 %29, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr32_instrumented, i8** %start29_instrumented, align 4
Target of   store i8* %add.ptr32_instrumented, i8** %start29_instrumented, align 4 is   %start29_instrumented = alloca i8*, align 4 with PAG id 701
Checking PagEdge node associated to:   %start29_instrumented = alloca i8*, align 4
Visist starts at PAGNode 702
[SelectDef] On node: FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 702 (base object)
   %start29_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 702 Instr:   %start29_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call34_instrumented, i8** %lt33_instrumented, align 4
Target of   store i8* %call34_instrumented, i8** %lt33_instrumented, align 4 is   %lt33_instrumented = alloca i8*, align 4 with PAG id 703
Checking PagEdge node associated to:   %lt33_instrumented = alloca i8*, align 4
Visist starts at PAGNode 704
[SelectDef] On node: FIObjVar ID: 704 (base object)
   %lt33_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 704 (base object)
   %lt33_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 704 Instr:   %lt33_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call43_instrumented, i32* %err42_instrumented, align 4
Target of   store i32 %call43_instrumented, i32* %err42_instrumented, align 4 is   %err42_instrumented = alloca i32, align 4 with PAG id 705
Checking PagEdge node associated to:   %err42_instrumented = alloca i32, align 4
Visist starts at PAGNode 706
[SelectDef] On node: FIObjVar ID: 706 (base object)
   %err42_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 706 (base object)
   %err42_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 706 Instr:   %err42_instrumented = alloca i32, align 4
Finding defs for:   store i32 %43, i32* %retval_instrumented, align 4
Target of   store i32 %43, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call59_instrumented, i32* %err28_instrumented, align 4
Target of   store i32 %call59_instrumented, i32* %err28_instrumented, align 4 is   %err28_instrumented = alloca i32, align 4 with PAG id 699
Checking PagEdge node associated to:   %err28_instrumented = alloca i32, align 4
Visist starts at PAGNode 700
[SelectDef] On node: FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 700 Instr:   %err28_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call61_instrumented, i32* %err28_instrumented, align 4
Target of   store i32 %call61_instrumented, i32* %err28_instrumented, align 4 is   %err28_instrumented = alloca i32, align 4 with PAG id 699
Checking PagEdge node associated to:   %err28_instrumented = alloca i32, align 4
Visist starts at PAGNode 700
[SelectDef] On node: FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 700 Instr:   %err28_instrumented = alloca i32, align 4
Finding defs for:   store i32 %cond_instrumented, i32* %err28_instrumented, align 4
Target of   store i32 %cond_instrumented, i32* %err28_instrumented, align 4 is   %err28_instrumented = alloca i32, align 4 with PAG id 699
Checking PagEdge node associated to:   %err28_instrumented = alloca i32, align 4
Visist starts at PAGNode 700
[SelectDef] On node: FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 700 Instr:   %err28_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call70_instrumented, i32* %err28_instrumented, align 4
Target of   store i32 %call70_instrumented, i32* %err28_instrumented, align 4 is   %err28_instrumented = alloca i32, align 4 with PAG id 699
Checking PagEdge node associated to:   %err28_instrumented = alloca i32, align 4
Visist starts at PAGNode 700
[SelectDef] On node: FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 700 (base object)
   %err28_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 700 Instr:   %err28_instrumented = alloca i32, align 4
Finding defs for:   store i32 %54, i32* %retval_instrumented, align 4
Target of   store i32 %54, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 675
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 676
[SelectDef] On node: FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 676 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 676 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %62, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %62, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_ltrim_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 929
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 930
[SelectDef] On node: FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 930 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 930 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 931
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 932
[SelectDef] On node: FIObjVar ID: 932 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 932 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 932 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %it_instrumented, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 933
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 934
[SelectDef] On node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 934 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 933
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 934
[SelectDef] On node: FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 934 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 934 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %20, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %20, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function state_setpos_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 991
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 992
[SelectDef] On node: FIObjVar ID: 992 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 992 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 992 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 993
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 994
[SelectDef] On node: FIObjVar ID: 994 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 994 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 994 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %ptr, i8** %ptr.addr_instrumented, align 4
Target of   store i8* %ptr, i8** %ptr.addr_instrumented, align 4 is   %ptr.addr_instrumented = alloca i8*, align 4 with PAG id 995
Checking PagEdge node associated to:   %ptr.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 996
[SelectDef] On node: FIObjVar ID: 996 (base object)
   %ptr.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 996 (base object)
   %ptr.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 996 Instr:   %ptr.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4, !ziuse !3
Target of   store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4, !ziuse !3 is   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0 with PAG id 1008
Checking PagEdge node associated to:   %bufferpos_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %7, i32 0, i32 0
Visist starts at PAGNode 1007
[SelectDef] On node: ValVar ID: 1007
   %7 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 991-->1007
[SelectDef] On node: ValVar ID: 991
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 992-->991
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 991
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 992 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 980-->991
[SelectDef] On node: ValVar ID: 980
 %struct.sxml_t* %state { 0th arg state_setpos_instrumented  }
On edge 687-->980
On edge 1119-->980
On edge 1160-->980
On edge 1255-->980
On edge 1364-->980
On edge 1420-->980
On edge 1586-->980
On edge 1630-->980
On edge 1746-->980
On edge 1838-->980
On edge 1929-->980
On edge 2459-->980
On edge 2498-->980
[SelectDef] On node: ValVar ID: 2498
   %67 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2498
[SelectDef] On node: ValVar ID: 2317
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2318-->2317
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2317
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2306-->2317
[SelectDef] On node: ValVar ID: 2306
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1123-->2306
On edge 1368-->2306
[SelectDef] On node: ValVar ID: 1368
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1368
[SelectDef] On node: ValVar ID: 1281
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1282-->1281
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1281
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1270-->1281
[SelectDef] On node: ValVar ID: 1270
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 687-->1270
Node 687 already visited
On edge 687-->1270
Node 687 already visited
[SelectDef] On node: ValVar ID: 1123
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1123
[SelectDef] On node: ValVar ID: 1038
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1039-->1038
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1038
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1027-->1038
[SelectDef] On node: ValVar ID: 1027
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 687-->1027
Node 687 already visited
On edge 687-->1027
Node 687 already visited
[SelectDef] On node: ValVar ID: 2459
   %50 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2459
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1929
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1864-->1929
[SelectDef] On node: ValVar ID: 1864
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1865-->1864
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1864
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1853-->1864
[SelectDef] On node: ValVar ID: 1853
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 687-->1853
Node 687 already visited
[SelectDef] On node: ValVar ID: 1838
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1772-->1838
[SelectDef] On node: ValVar ID: 1772
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1773-->1772
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1772
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1761-->1772
[SelectDef] On node: ValVar ID: 1761
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 687-->1761
Node 687 already visited
[SelectDef] On node: ValVar ID: 1746
   %36 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1655-->1746
[SelectDef] On node: ValVar ID: 1655
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1656-->1655
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1655
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1644-->1655
[SelectDef] On node: ValVar ID: 1644
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 687-->1644
Node 687 already visited
[SelectDef] On node: ValVar ID: 1630
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1630
[SelectDef] On node: ValVar ID: 1523
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1524-->1523
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1523
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1510-->1523
[SelectDef] On node: ValVar ID: 1510
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 687-->1510
Node 687 already visited
On edge 2618-->1510
[SelectDef] On node: ValVar ID: 2618
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2595-->2618
[SelectDef] On node: ValVar ID: 2595
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2596-->2595
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2595
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2582-->2595
[SelectDef] On node: ValVar ID: 2582
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2463-->2582
[SelectDef] On node: ValVar ID: 2463
   %53 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2463
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1586
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1586
Node 1523 already visited
[SelectDef] On node: ValVar ID: 1420
   %54 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1420
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1364
   %30 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1364
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1255
   %27 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1186-->1255
[SelectDef] On node: ValVar ID: 1186
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1187-->1186
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1186
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1175-->1186
[SelectDef] On node: ValVar ID: 1175
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 687-->1175
Node 687 already visited
[SelectDef] On node: ValVar ID: 1160
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1160
Node 1038 already visited
[SelectDef] On node: ValVar ID: 1119
   %29 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1119
Node 1038 already visited
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
Found:
	- NodeId: 1524 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 688 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 992 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1039 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1187 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1282 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1656 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1773 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1865 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2318 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2596 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i16 %16, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %16, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_instruction_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1038
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1039
[SelectDef] On node: FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1039 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1040
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1041
[SelectDef] On node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1048
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1049
[SelectDef] On node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1049 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1050
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1051
[SelectDef] On node: FIObjVar ID: 1051 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1051 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1051 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1048
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1049
[SelectDef] On node: FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1049 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1049 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1046
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1047
[SelectDef] On node: FIObjVar ID: 1047 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1047 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1047 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call12_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call12_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 1042
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 1043
[SelectDef] On node: FIObjVar ID: 1043 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1043 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1043 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %35, i32* %retval_instrumented, align 4
Target of   store i32 %35, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr18_instrumented, i8** %quest_instrumented, align 4
Target of   store i8* %add.ptr18_instrumented, i8** %quest_instrumented, align 4 is   %quest_instrumented = alloca i8*, align 4 with PAG id 1044
Checking PagEdge node associated to:   %quest_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1045
[SelectDef] On node: FIObjVar ID: 1045 (base object)
   %quest_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1045 (base object)
   %quest_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1045 Instr:   %quest_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call30_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call30_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1036
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1037
[SelectDef] On node: FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1037 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1037 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %52, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %52, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_doctype_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1186
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1187
[SelectDef] On node: FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1187 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1188
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1189
[SelectDef] On node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1189 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1192
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1193
[SelectDef] On node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1193 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1194
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1195
[SelectDef] On node: FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1195 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1195 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1184
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1185
[SelectDef] On node: FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1185 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1184
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1185
[SelectDef] On node: FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1185 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1192
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1193
[SelectDef] On node: FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1193 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1193 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 is   %bracket_instrumented = alloca i8*, align 4 with PAG id 1190
Checking PagEdge node associated to:   %bracket_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1191
[SelectDef] On node: FIObjVar ID: 1191 (base object)
   %bracket_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1191 (base object)
   %bracket_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1191 Instr:   %bracket_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1184
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1185
[SelectDef] On node: FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1185 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call12_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call12_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1184
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1185
[SelectDef] On node: FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1185 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1185 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %34, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %34, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_start_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1281
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1282
[SelectDef] On node: FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1282 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1283
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1284
[SelectDef] On node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1293
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1294
[SelectDef] On node: FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1294 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1294 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1295
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1296
[SelectDef] On node: FIObjVar ID: 1296 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1296 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1296 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4
Target of   store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 1289
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1290
[SelectDef] On node: FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1290 (base object)
   %name_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1290 Instr:   %name_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call10_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call10_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1291
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1292
[SelectDef] On node: FIObjVar ID: 1292 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1292 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1292 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call17_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call17_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 1285
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 1286
[SelectDef] On node: FIObjVar ID: 1286 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1286 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1286 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %36, i32* %retval_instrumented, align 4
Target of   store i32 %36, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr24_instrumented, i8** %gt_instrumented, align 4
Target of   store i8* %add.ptr24_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1287
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1288
[SelectDef] On node: FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1288 Instr:   %gt_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1287
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1288
[SelectDef] On node: FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1288 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1288 Instr:   %gt_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call44_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call44_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1279
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1280
[SelectDef] On node: FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1280 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1280 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %61, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %61, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_findchr_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 1445
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1446
[SelectDef] On node: FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1446 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1446 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 1447
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1448
[SelectDef] On node: FIObjVar ID: 1448 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1448 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1448 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %c, i32* %c.addr_instrumented, align 4
Target of   store i32 %c, i32* %c.addr_instrumented, align 4 is   %c.addr_instrumented = alloca i32, align 4 with PAG id 1449
Checking PagEdge node associated to:   %c.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 1450
[SelectDef] On node: FIObjVar ID: 1450 (base object)
   %c.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1450 (base object)
   %c.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1450 Instr:   %c.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 1451
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1452
[SelectDef] On node: FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1452 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1452 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %24, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %24, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_characters_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1523
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1524
[SelectDef] On node: FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1524 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1525
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1526
[SelectDef] On node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1526 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 1527
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1528
[SelectDef] On node: FIObjVar ID: 1528 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1528 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1528 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1529
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1530
[SelectDef] On node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1530 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call_instrumented, i8** %ampr_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %ampr_instrumented, align 4 is   %ampr_instrumented = alloca i8*, align 4 with PAG id 1535
Checking PagEdge node associated to:   %ampr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1536
[SelectDef] On node: FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1536 (base object)
   %ampr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1536 Instr:   %ampr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call9_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call9_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1521
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1522
[SelectDef] On node: FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1522 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %cond_instrumented, i8** %limit_instrumented, align 4
Target of   store i8* %cond_instrumented, i8** %limit_instrumented, align 4 is   %limit_instrumented = alloca i8*, align 4 with PAG id 1531
Checking PagEdge node associated to:   %limit_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1532
[SelectDef] On node: FIObjVar ID: 1532 (base object)
   %limit_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1532 (base object)
   %limit_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1532 Instr:   %limit_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call14_instrumented, i8** %colon_instrumented, align 4
Target of   store i8* %call14_instrumented, i8** %colon_instrumented, align 4 is   %colon_instrumented = alloca i8*, align 4 with PAG id 1533
Checking PagEdge node associated to:   %colon_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1534
[SelectDef] On node: FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1534 (base object)
   %colon_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1534 Instr:   %colon_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %cond18_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %cond18_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1521
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1522
[SelectDef] On node: FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1522 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1529
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1530
[SelectDef] On node: FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1530 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1530 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call22_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call22_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1521
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1522
[SelectDef] On node: FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1522 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1522 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %52, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %52, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_end_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1655
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1656
[SelectDef] On node: FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1656 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1657
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1658
[SelectDef] On node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1658 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1663
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1664
[SelectDef] On node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1664 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1665
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1666
[SelectDef] On node: FIObjVar ID: 1666 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1666 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1666 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1653
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1654
[SelectDef] On node: FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1654 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1663
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1664
[SelectDef] On node: FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1664 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1664 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call8_instrumented, i8** %gt_instrumented, align 4
Target of   store i8* %call8_instrumented, i8** %gt_instrumented, align 4 is   %gt_instrumented = alloca i8*, align 4 with PAG id 1659
Checking PagEdge node associated to:   %gt_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1660
[SelectDef] On node: FIObjVar ID: 1660 (base object)
   %gt_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1660 (base object)
   %gt_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1660 Instr:   %gt_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1653
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1654
[SelectDef] On node: FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1654 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call13_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call13_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 1661
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1662
[SelectDef] On node: FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1662 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1662 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1653
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1654
[SelectDef] On node: FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1654 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call21_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call21_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1653
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1654
[SelectDef] On node: FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1654 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1654 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %43, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %43, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_comment_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1772
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1773
[SelectDef] On node: FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1773 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1774
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1775
[SelectDef] On node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1775 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1778
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1779
[SelectDef] On node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1779 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1780
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1781
[SelectDef] On node: FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1781 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1781 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1770
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1771
[SelectDef] On node: FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1771 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1770
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1771
[SelectDef] On node: FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1771 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1778
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1779
[SelectDef] On node: FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1779 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1779 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %dash_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %dash_instrumented, align 4 is   %dash_instrumented = alloca i8*, align 4 with PAG id 1776
Checking PagEdge node associated to:   %dash_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1777
[SelectDef] On node: FIObjVar ID: 1777 (base object)
   %dash_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1777 (base object)
   %dash_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1777 Instr:   %dash_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1770
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1771
[SelectDef] On node: FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1771 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call12_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call12_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1770
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1771
[SelectDef] On node: FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1771 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1771 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %34, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %34, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_cdata_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 1864
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 1865
[SelectDef] On node: FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 1865 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 1866
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 1867
[SelectDef] On node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 1867 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1870
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1871
[SelectDef] On node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1871 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 1872
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1873
[SelectDef] On node: FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1873 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1873 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1862
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1863
[SelectDef] On node: FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1863 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1862
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1863
[SelectDef] On node: FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1863 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 1870
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1871
[SelectDef] On node: FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1871 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1871 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 is   %bracket_instrumented = alloca i8*, align 4 with PAG id 1868
Checking PagEdge node associated to:   %bracket_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1869
[SelectDef] On node: FIObjVar ID: 1869 (base object)
   %bracket_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1869 (base object)
   %bracket_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1869 Instr:   %bracket_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1862
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1863
[SelectDef] On node: FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1863 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call12_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call12_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1862
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1863
[SelectDef] On node: FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1863 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1863 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %34, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %34, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_startswith_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 1957
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1958
[SelectDef] On node: FIObjVar ID: 1958 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1958 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1958 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 1959
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1960
[SelectDef] On node: FIObjVar ID: 1960 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1960 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1960 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %prefix, i8** %prefix.addr_instrumented, align 4
Target of   store i8* %prefix, i8** %prefix.addr_instrumented, align 4 is   %prefix.addr_instrumented = alloca i8*, align 4 with PAG id 1961
Checking PagEdge node associated to:   %prefix.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 1962
[SelectDef] On node: FIObjVar ID: 1962 (base object)
   %prefix.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 1962 (base object)
   %prefix.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 1962 Instr:   %prefix.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call_instrumented, i32* %nbytes_instrumented, align 4
Target of   store i32 %call_instrumented, i32* %nbytes_instrumented, align 4 is   %nbytes_instrumented = alloca i32, align 4 with PAG id 1963
Checking PagEdge node associated to:   %nbytes_instrumented = alloca i32, align 4
Visist starts at PAGNode 1964
[SelectDef] On node: FIObjVar ID: 1964 (base object)
   %nbytes_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1964 (base object)
   %nbytes_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1964 Instr:   %nbytes_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1955
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1956
[SelectDef] On node: FIObjVar ID: 1956 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1956 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1956 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %conv_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %conv_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 1955
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 1956
[SelectDef] On node: FIObjVar ID: 1956 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 1956 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 1956 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %20, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %20, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_findstr_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2023
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2024
[SelectDef] On node: FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2024 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2025
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2026
[SelectDef] On node: FIObjVar ID: 2026 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2026 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2026 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %needle, i8** %needle.addr_instrumented, align 4
Target of   store i8* %needle, i8** %needle.addr_instrumented, align 4 is   %needle.addr_instrumented = alloca i8*, align 4 with PAG id 2027
Checking PagEdge node associated to:   %needle.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2028
[SelectDef] On node: FIObjVar ID: 2028 (base object)
   %needle.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2028 (base object)
   %needle.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2028 Instr:   %needle.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call_instrumented, i32* %needlelen_instrumented, align 4
Target of   store i32 %call_instrumented, i32* %needlelen_instrumented, align 4 is   %needlelen_instrumented = alloca i32, align 4 with PAG id 2029
Checking PagEdge node associated to:   %needlelen_instrumented = alloca i32, align 4
Visist starts at PAGNode 2030
[SelectDef] On node: FIObjVar ID: 2030 (base object)
   %needlelen_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2030 (base object)
   %needlelen_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2030 Instr:   %needlelen_instrumented = alloca i32, align 4
Finding defs for:   store i32 %conv_instrumented, i32* %first_instrumented, align 4
Target of   store i32 %conv_instrumented, i32* %first_instrumented, align 4 is   %first_instrumented = alloca i32, align 4 with PAG id 2031
Checking PagEdge node associated to:   %first_instrumented = alloca i32, align 4
Visist starts at PAGNode 2032
[SelectDef] On node: FIObjVar ID: 2032 (base object)
   %first_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2032 (base object)
   %first_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2032 Instr:   %first_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call8_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %call8_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2033
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2034
[SelectDef] On node: FIObjVar ID: 2034 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2034 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2034 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %28, i8** %retval_instrumented, align 4
Target of   store i8* %28, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2021
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2022
[SelectDef] On node: FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2022 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4
Target of   store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2023
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2024
[SelectDef] On node: FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2024 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2024 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %30, i8** %retval_instrumented, align 4
Target of   store i8* %30, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2021
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2022
[SelectDef] On node: FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2022 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2022 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %35, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %35, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function state_pushtoken_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 2137
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 2138
[SelectDef] On node: FIObjVar ID: 2138 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2138 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 2138 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 2139
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 2140
[SelectDef] On node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 2140 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %type, i32* %type.addr_instrumented, align 4
Target of   store i32 %type, i32* %type.addr_instrumented, align 4 is   %type.addr_instrumented = alloca i32, align 4 with PAG id 2141
Checking PagEdge node associated to:   %type.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2142
[SelectDef] On node: FIObjVar ID: 2142 (base object)
   %type.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2142 (base object)
   %type.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2142 Instr:   %type.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2143
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2144
[SelectDef] On node: FIObjVar ID: 2144 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2144 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2144 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2145
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2146
[SelectDef] On node: FIObjVar ID: 2146 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2146 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2146 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %ntokens_instrumented, align 4
Target of   store i32 %inc_instrumented, i32* %ntokens_instrumented, align 4 is   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 1 with PAG id 2157
Checking PagEdge node associated to:   %ntokens_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %4, i32 0, i32 1
Visist starts at PAGNode 2156
[SelectDef] On node: ValVar ID: 2156
   %4 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2137-->2156
[SelectDef] On node: ValVar ID: 2137
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2138-->2137
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2137
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2138 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2121-->2137
[SelectDef] On node: ValVar ID: 2121
 %struct.sxml_t* %state { 0th arg state_pushtoken_instrumented  }
On edge 1111-->2121
On edge 1249-->2121
On edge 1359-->2121
On edge 1396-->2121
On edge 1575-->2121
On edge 1625-->2121
On edge 1741-->2121
On edge 1832-->2121
On edge 1924-->2121
On edge 2411-->2121
[SelectDef] On node: ValVar ID: 2411
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2411
[SelectDef] On node: ValVar ID: 2317
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2318-->2317
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2317
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2306-->2317
[SelectDef] On node: ValVar ID: 2306
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1123-->2306
On edge 1368-->2306
[SelectDef] On node: ValVar ID: 1368
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1368
[SelectDef] On node: ValVar ID: 1281
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1282-->1281
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1281
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1270-->1281
[SelectDef] On node: ValVar ID: 1270
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 687-->1270
On edge 687-->1270
Node 687 already visited
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 1123
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1123
[SelectDef] On node: ValVar ID: 1038
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1039-->1038
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1038
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1027-->1038
[SelectDef] On node: ValVar ID: 1027
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 687-->1027
Node 687 already visited
On edge 687-->1027
Node 687 already visited
[SelectDef] On node: ValVar ID: 1924
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1864-->1924
[SelectDef] On node: ValVar ID: 1864
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1865-->1864
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1864
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1853-->1864
[SelectDef] On node: ValVar ID: 1853
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 687-->1853
Node 687 already visited
[SelectDef] On node: ValVar ID: 1832
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1772-->1832
[SelectDef] On node: ValVar ID: 1772
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1773-->1772
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1772
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1761-->1772
[SelectDef] On node: ValVar ID: 1761
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 687-->1761
Node 687 already visited
[SelectDef] On node: ValVar ID: 1741
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1655-->1741
[SelectDef] On node: ValVar ID: 1655
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1656-->1655
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1655
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1644-->1655
[SelectDef] On node: ValVar ID: 1644
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 687-->1644
Node 687 already visited
[SelectDef] On node: ValVar ID: 1625
   %41 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1625
[SelectDef] On node: ValVar ID: 1523
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1524-->1523
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1523
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1510-->1523
[SelectDef] On node: ValVar ID: 1510
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 687-->1510
Node 687 already visited
On edge 2618-->1510
[SelectDef] On node: ValVar ID: 2618
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2595-->2618
[SelectDef] On node: ValVar ID: 2595
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2596-->2595
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2595
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2582-->2595
[SelectDef] On node: ValVar ID: 2582
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2463-->2582
[SelectDef] On node: ValVar ID: 2463
   %53 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2463
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1575
   %20 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1575
Node 1523 already visited
[SelectDef] On node: ValVar ID: 1396
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1396
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1359
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1359
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1249
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1186-->1249
[SelectDef] On node: ValVar ID: 1186
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1187-->1186
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1186
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1175-->1186
[SelectDef] On node: ValVar ID: 1175
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 687-->1175
Node 687 already visited
[SelectDef] On node: ValVar ID: 1111
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1111
Node 1038 already visited
Found:
	- NodeId: 1524 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 688 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1039 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1187 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1282 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1656 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1773 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1865 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2138 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2318 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2596 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 %5, i32* %i_instrumented, align 4
Target of   store i32 %5, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2149
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2150
[SelectDef] On node: FIObjVar ID: 2150 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2150 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2150 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2135
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2136
[SelectDef] On node: FIObjVar ID: 2136 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2136 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2136 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2147
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2148
[SelectDef] On node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2148 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i16 %conv_instrumented, i16* %type2_instrumented, align 4
Target of   store i16 %conv_instrumented, i16* %type2_instrumented, align 4 is   %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0 with PAG id 2182
Checking PagEdge node associated to:   %type2_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %14, i32 0, i32 0
Visist starts at PAGNode 2181
[SelectDef] On node: ValVar ID: 2181
   %14 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2147-->2181
[SelectDef] On node: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2148-->2147
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2147
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2177-->2147
[SelectDef] On node: ValVar ID: 2177
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2175-->2177
[SelectDef] On node: ValVar ID: 2175
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2174-->2175
[SelectDef] On node: ValVar ID: 2174
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2173-->2174
[SelectDef] On node: ValVar ID: 2173
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2139-->2173
[SelectDef] On node: ValVar ID: 2139
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2140-->2139
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2139
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2122-->2139
[SelectDef] On node: ValVar ID: 2122
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1112-->2122
On edge 1250-->2122
On edge 1360-->2122
On edge 1397-->2122
On edge 1576-->2122
On edge 1626-->2122
On edge 1742-->2122
On edge 1833-->2122
On edge 1925-->2122
On edge 2412-->2122
[SelectDef] On node: ValVar ID: 2412
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2412
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1925
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1925
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
Node 691 already visited
[SelectDef] On node: ValVar ID: 1833
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1833
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1742
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1742
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1626
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1626
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1576
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1576
Node 1525 already visited
[SelectDef] On node: ValVar ID: 1397
   %46 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1397
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1360
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1360
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1250
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1250
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 1112
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1112
Node 1040 already visited
Found:
	- NodeId: 1526 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1189 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1658 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1775 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1867 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2140 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2148 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2598 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4
Target of   store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4 is   %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2 with PAG id 2192
Checking PagEdge node associated to:   %startpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %18, i32 0, i32 2
Visist starts at PAGNode 2191
[SelectDef] On node: ValVar ID: 2191
   %18 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2147-->2191
[SelectDef] On node: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2148-->2147
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2147
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2177-->2147
[SelectDef] On node: ValVar ID: 2177
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2175-->2177
[SelectDef] On node: ValVar ID: 2175
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2174-->2175
[SelectDef] On node: ValVar ID: 2174
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2173-->2174
[SelectDef] On node: ValVar ID: 2173
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2139-->2173
[SelectDef] On node: ValVar ID: 2139
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2140-->2139
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2139
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2122-->2139
[SelectDef] On node: ValVar ID: 2122
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1112-->2122
On edge 1250-->2122
On edge 1360-->2122
On edge 1397-->2122
On edge 1576-->2122
On edge 1626-->2122
On edge 1742-->2122
On edge 1833-->2122
On edge 1925-->2122
On edge 2412-->2122
[SelectDef] On node: ValVar ID: 2412
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2412
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1925
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1925
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
Node 691 already visited
[SelectDef] On node: ValVar ID: 1833
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1833
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1742
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1742
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1626
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1626
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1576
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1576
Node 1525 already visited
[SelectDef] On node: ValVar ID: 1397
   %46 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1397
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1360
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1360
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1250
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1250
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 1112
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1112
Node 1040 already visited
Found:
	- NodeId: 1526 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1189 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1658 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1775 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1867 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2140 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2148 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2598 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4
Target of   store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4 is   %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3 with PAG id 2202
Checking PagEdge node associated to:   %endpos_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %22, i32 0, i32 3
Visist starts at PAGNode 2201
[SelectDef] On node: ValVar ID: 2201
   %22 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2147-->2201
[SelectDef] On node: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2148-->2147
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2147
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2177-->2147
[SelectDef] On node: ValVar ID: 2177
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2175-->2177
[SelectDef] On node: ValVar ID: 2175
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2174-->2175
[SelectDef] On node: ValVar ID: 2174
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2173-->2174
[SelectDef] On node: ValVar ID: 2173
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2139-->2173
[SelectDef] On node: ValVar ID: 2139
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2140-->2139
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2139
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2122-->2139
[SelectDef] On node: ValVar ID: 2122
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1112-->2122
On edge 1250-->2122
On edge 1360-->2122
On edge 1397-->2122
On edge 1576-->2122
On edge 1626-->2122
On edge 1742-->2122
On edge 1833-->2122
On edge 1925-->2122
On edge 2412-->2122
[SelectDef] On node: ValVar ID: 2412
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2412
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1925
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1925
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
Node 691 already visited
[SelectDef] On node: ValVar ID: 1833
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1833
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1742
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1742
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1626
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1626
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1576
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1576
Node 1525 already visited
[SelectDef] On node: ValVar ID: 1397
   %46 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1397
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1360
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1360
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1250
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1250
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 1112
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1112
Node 1040 already visited
Found:
	- NodeId: 1526 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1189 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1658 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1775 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1867 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2140 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2148 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2598 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i16 0, i16* %size_instrumented, align 2
Target of   store i16 0, i16* %size_instrumented, align 2 is   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1 with PAG id 2205
Checking PagEdge node associated to:   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %23, i32 0, i32 1
Visist starts at PAGNode 2204
[SelectDef] On node: ValVar ID: 2204
   %23 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2147-->2204
[SelectDef] On node: ValVar ID: 2147
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2148-->2147
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2147
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2148 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2177-->2147
[SelectDef] On node: ValVar ID: 2177
   %arrayidx_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %11, i32 %12 
On edge 2175-->2177
[SelectDef] On node: ValVar ID: 2175
   %11 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2174-->2175
[SelectDef] On node: ValVar ID: 2174
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %10, i32 0, i32 2 
On edge 2173-->2174
[SelectDef] On node: ValVar ID: 2173
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2139-->2173
[SelectDef] On node: ValVar ID: 2139
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2140-->2139
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2139
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2140 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2122-->2139
[SelectDef] On node: ValVar ID: 2122
 %struct.sxml_args_t* %args { 1st arg state_pushtoken_instrumented  }
On edge 1112-->2122
On edge 1250-->2122
On edge 1360-->2122
On edge 1397-->2122
On edge 1576-->2122
On edge 1626-->2122
On edge 1742-->2122
On edge 1833-->2122
On edge 1925-->2122
On edge 2412-->2122
[SelectDef] On node: ValVar ID: 2412
   %32 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2412
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
[SelectDef] On node: ValVar ID: 1925
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1866-->1925
[SelectDef] On node: ValVar ID: 1866
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1867-->1866
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1866
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1867 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1854-->1866
[SelectDef] On node: ValVar ID: 1854
 %struct.sxml_args_t* %args { 1st arg parse_cdata_instrumented  }
On edge 691-->1854
Node 691 already visited
[SelectDef] On node: ValVar ID: 1833
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1774-->1833
[SelectDef] On node: ValVar ID: 1774
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1775-->1774
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1774
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1775 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1762-->1774
[SelectDef] On node: ValVar ID: 1762
 %struct.sxml_args_t* %args { 1st arg parse_comment_instrumented  }
On edge 691-->1762
Node 691 already visited
[SelectDef] On node: ValVar ID: 1742
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1657-->1742
[SelectDef] On node: ValVar ID: 1657
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1658-->1657
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1657
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1658 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1645-->1657
[SelectDef] On node: ValVar ID: 1645
 %struct.sxml_args_t* %args { 1st arg parse_end_instrumented  }
On edge 691-->1645
Node 691 already visited
[SelectDef] On node: ValVar ID: 1626
   %42 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1626
[SelectDef] On node: ValVar ID: 1525
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1526-->1525
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1525
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1526 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1511-->1525
[SelectDef] On node: ValVar ID: 1511
 %struct.sxml_args_t* %args { 1st arg parse_characters_instrumented  }
On edge 691-->1511
Node 691 already visited
On edge 2619-->1511
[SelectDef] On node: ValVar ID: 2619
   %10 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2597-->2619
[SelectDef] On node: ValVar ID: 2597
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2598-->2597
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2597
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2583-->2597
[SelectDef] On node: ValVar ID: 2583
 %struct.sxml_args_t* %args { 1st arg parse_attrvalue_instrumented  }
On edge 2464-->2583
[SelectDef] On node: ValVar ID: 2464
   %54 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2464
Node 2319 already visited
[SelectDef] On node: ValVar ID: 1576
   %21 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1525-->1576
Node 1525 already visited
[SelectDef] On node: ValVar ID: 1397
   %46 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1397
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1360
   %27 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1360
Node 1283 already visited
[SelectDef] On node: ValVar ID: 1250
   %24 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1188-->1250
[SelectDef] On node: ValVar ID: 1188
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1189-->1188
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1188
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1189 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1176-->1188
[SelectDef] On node: ValVar ID: 1176
 %struct.sxml_args_t* %args { 1st arg parse_doctype_instrumented  }
On edge 691-->1176
Node 691 already visited
[SelectDef] On node: ValVar ID: 1112
   %26 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1112
Node 1040 already visited
Found:
	- NodeId: 1526 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1189 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1658 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1775 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1867 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2140 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2148 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2598 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i32 %inc7_instrumented, i32* %taglevel_instrumented, align 4
Target of   store i32 %inc7_instrumented, i32* %taglevel_instrumented, align 4 is   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %25, i32 0, i32 2 with PAG id 2210
Checking PagEdge node associated to:   %taglevel_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %25, i32 0, i32 2
Visist starts at PAGNode 2209
[SelectDef] On node: ValVar ID: 2209
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2137-->2209
[SelectDef] On node: ValVar ID: 2137
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2138-->2137
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2137
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2138 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2121-->2137
[SelectDef] On node: ValVar ID: 2121
 %struct.sxml_t* %state { 0th arg state_pushtoken_instrumented  }
On edge 1111-->2121
On edge 1249-->2121
On edge 1359-->2121
On edge 1396-->2121
On edge 1575-->2121
On edge 1625-->2121
On edge 1741-->2121
On edge 1832-->2121
On edge 1924-->2121
On edge 2411-->2121
[SelectDef] On node: ValVar ID: 2411
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2411
[SelectDef] On node: ValVar ID: 2317
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2318-->2317
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2317
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2306-->2317
[SelectDef] On node: ValVar ID: 2306
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1123-->2306
On edge 1368-->2306
[SelectDef] On node: ValVar ID: 1368
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1368
[SelectDef] On node: ValVar ID: 1281
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1282-->1281
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1281
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1270-->1281
[SelectDef] On node: ValVar ID: 1270
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 687-->1270
On edge 687-->1270
Node 687 already visited
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 1123
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1123
[SelectDef] On node: ValVar ID: 1038
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1039-->1038
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1038
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1027-->1038
[SelectDef] On node: ValVar ID: 1027
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 687-->1027
Node 687 already visited
On edge 687-->1027
Node 687 already visited
[SelectDef] On node: ValVar ID: 1924
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1864-->1924
[SelectDef] On node: ValVar ID: 1864
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1865-->1864
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1864
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1853-->1864
[SelectDef] On node: ValVar ID: 1853
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 687-->1853
Node 687 already visited
[SelectDef] On node: ValVar ID: 1832
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1772-->1832
[SelectDef] On node: ValVar ID: 1772
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1773-->1772
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1772
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1761-->1772
[SelectDef] On node: ValVar ID: 1761
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 687-->1761
Node 687 already visited
[SelectDef] On node: ValVar ID: 1741
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1655-->1741
[SelectDef] On node: ValVar ID: 1655
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1656-->1655
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1655
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1644-->1655
[SelectDef] On node: ValVar ID: 1644
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 687-->1644
Node 687 already visited
[SelectDef] On node: ValVar ID: 1625
   %41 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1625
[SelectDef] On node: ValVar ID: 1523
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1524-->1523
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1523
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1510-->1523
[SelectDef] On node: ValVar ID: 1510
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 687-->1510
Node 687 already visited
On edge 2618-->1510
[SelectDef] On node: ValVar ID: 2618
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2595-->2618
[SelectDef] On node: ValVar ID: 2595
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2596-->2595
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2595
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2582-->2595
[SelectDef] On node: ValVar ID: 2582
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2463-->2582
[SelectDef] On node: ValVar ID: 2463
   %53 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2463
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1575
   %20 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1575
Node 1523 already visited
[SelectDef] On node: ValVar ID: 1396
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1396
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1359
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1359
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1249
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1186-->1249
[SelectDef] On node: ValVar ID: 1186
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1187-->1186
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1186
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1175-->1186
[SelectDef] On node: ValVar ID: 1175
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 687-->1175
Node 687 already visited
[SelectDef] On node: ValVar ID: 1111
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1111
Node 1038 already visited
Found:
	- NodeId: 1524 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 688 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1039 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1187 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1282 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1656 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1773 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1865 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2138 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2318 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2596 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 %dec_instrumented, i32* %taglevel14_instrumented, align 4
Target of   store i32 %dec_instrumented, i32* %taglevel14_instrumented, align 4 is   %taglevel14_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %32, i32 0, i32 2 with PAG id 2230
Checking PagEdge node associated to:   %taglevel14_instrumented = getelementptr inbounds %struct.sxml_t, %struct.sxml_t* %32, i32 0, i32 2
Visist starts at PAGNode 2229
[SelectDef] On node: ValVar ID: 2229
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2137-->2229
[SelectDef] On node: ValVar ID: 2137
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2138-->2137
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2137
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2138 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2121-->2137
[SelectDef] On node: ValVar ID: 2121
 %struct.sxml_t* %state { 0th arg state_pushtoken_instrumented  }
On edge 1111-->2121
On edge 1249-->2121
On edge 1359-->2121
On edge 1396-->2121
On edge 1575-->2121
On edge 1625-->2121
On edge 1741-->2121
On edge 1832-->2121
On edge 1924-->2121
On edge 2411-->2121
[SelectDef] On node: ValVar ID: 2411
   %31 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2411
[SelectDef] On node: ValVar ID: 2317
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2318-->2317
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2317
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2306-->2317
[SelectDef] On node: ValVar ID: 2306
 %struct.sxml_t* %state { 0th arg parse_attributes_instrumented  }
On edge 1123-->2306
On edge 1368-->2306
[SelectDef] On node: ValVar ID: 1368
   %33 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1368
[SelectDef] On node: ValVar ID: 1281
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1282-->1281
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1281
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1282 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1270-->1281
[SelectDef] On node: ValVar ID: 1270
 %struct.sxml_t* %state { 0th arg parse_start_instrumented  }
On edge 687-->1270
On edge 687-->1270
Node 687 already visited
[SelectDef] On node: ValVar ID: 687
   %temp_instrumented = alloca %struct.sxml_t, align 4 
On edge 688-->687
[SelectDefs] Adding node: FIObjVar ID: 688 (base object)
   %temp_instrumented = alloca %struct.sxml_t, align 4 
[SelectDef] On node: ValVar ID: 1123
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1123
[SelectDef] On node: ValVar ID: 1038
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1039-->1038
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1038
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1039 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1027-->1038
[SelectDef] On node: ValVar ID: 1027
 %struct.sxml_t* %state { 0th arg parse_instruction_instrumented  }
On edge 687-->1027
Node 687 already visited
On edge 687-->1027
Node 687 already visited
[SelectDef] On node: ValVar ID: 1924
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1864-->1924
[SelectDef] On node: ValVar ID: 1864
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1865-->1864
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1864
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1865 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1853-->1864
[SelectDef] On node: ValVar ID: 1853
 %struct.sxml_t* %state { 0th arg parse_cdata_instrumented  }
On edge 687-->1853
Node 687 already visited
[SelectDef] On node: ValVar ID: 1832
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1772-->1832
[SelectDef] On node: ValVar ID: 1772
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1773-->1772
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1772
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1773 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1761-->1772
[SelectDef] On node: ValVar ID: 1761
 %struct.sxml_t* %state { 0th arg parse_comment_instrumented  }
On edge 687-->1761
Node 687 already visited
[SelectDef] On node: ValVar ID: 1741
   %32 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1655-->1741
[SelectDef] On node: ValVar ID: 1655
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1656-->1655
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1655
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1656 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1644-->1655
[SelectDef] On node: ValVar ID: 1644
 %struct.sxml_t* %state { 0th arg parse_end_instrumented  }
On edge 687-->1644
Node 687 already visited
[SelectDef] On node: ValVar ID: 1625
   %41 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1625
[SelectDef] On node: ValVar ID: 1523
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1524-->1523
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1523
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1524 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1510-->1523
[SelectDef] On node: ValVar ID: 1510
 %struct.sxml_t* %state { 0th arg parse_characters_instrumented  }
On edge 687-->1510
Node 687 already visited
On edge 2618-->1510
[SelectDef] On node: ValVar ID: 2618
   %9 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2595-->2618
[SelectDef] On node: ValVar ID: 2595
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2596-->2595
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2595
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 2582-->2595
[SelectDef] On node: ValVar ID: 2582
 %struct.sxml_t* %state { 0th arg parse_attrvalue_instrumented  }
On edge 2463-->2582
[SelectDef] On node: ValVar ID: 2463
   %53 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 2317-->2463
Node 2317 already visited
[SelectDef] On node: ValVar ID: 1575
   %20 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1523-->1575
Node 1523 already visited
[SelectDef] On node: ValVar ID: 1396
   %45 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1396
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1359
   %26 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1281-->1359
Node 1281 already visited
[SelectDef] On node: ValVar ID: 1249
   %23 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1186-->1249
[SelectDef] On node: ValVar ID: 1186
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1187-->1186
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1186
	-  %state.addr_instrumented = alloca %struct.sxml_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1187 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
On edge 1175-->1186
[SelectDef] On node: ValVar ID: 1175
 %struct.sxml_t* %state { 0th arg parse_doctype_instrumented  }
On edge 687-->1175
Node 687 already visited
[SelectDef] On node: ValVar ID: 1111
   %25 = load %struct.sxml_t*, %struct.sxml_t** %state.addr_instrumented, align 4 
On edge 1038-->1111
Node 1038 already visited
Found:
	- NodeId: 1524 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 688 Instr:   %temp_instrumented = alloca %struct.sxml_t, align 4
	- NodeId: 1039 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1187 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1282 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1656 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1773 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 1865 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2138 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2318 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
	- NodeId: 2596 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2135
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2136
[SelectDef] On node: FIObjVar ID: 2136 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2136 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2136 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %38, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %38, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_find_notalnum_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2255
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2256
[SelectDef] On node: FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2256 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2256 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2257
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2258
[SelectDef] On node: FIObjVar ID: 2258 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2258 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2258 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %it_instrumented, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2259
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2260
[SelectDef] On node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2260 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2259
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2260
[SelectDef] On node: FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2260 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2260 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %20, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %20, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_attributes_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 2317
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 2318
[SelectDef] On node: FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2318 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 2318 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 2319
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 2320
[SelectDef] On node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 is   %start_instrumented = alloca i8*, align 4 with PAG id 2321
Checking PagEdge node associated to:   %start_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2322
[SelectDef] On node: FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2322 (base object)
   %start_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2322 Instr:   %start_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 2323
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2324
[SelectDef] On node: FIObjVar ID: 2324 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2324 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2324 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call_instrumented, i8** %name_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 2325
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2326
[SelectDef] On node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2326 Instr:   %name_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %15, i32* %ntokens_instrumented, align 4
Target of   store i32 %15, i32* %ntokens_instrumented, align 4 is   %ntokens_instrumented = alloca i32, align 4 with PAG id 2327
Checking PagEdge node associated to:   %ntokens_instrumented = alloca i32, align 4
Visist starts at PAGNode 2328
[SelectDef] On node: FIObjVar ID: 2328 (base object)
   %ntokens_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2328 (base object)
   %ntokens_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2328 Instr:   %ntokens_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call6_instrumented, i8** %eq_instrumented, align 4
Target of   store i8* %call6_instrumented, i8** %eq_instrumented, align 4 is   %eq_instrumented = alloca i8*, align 4 with PAG id 2329
Checking PagEdge node associated to:   %eq_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2330
[SelectDef] On node: FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2330 (base object)
   %eq_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2330 Instr:   %eq_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call11_instrumented, i8** %space_instrumented, align 4
Target of   store i8* %call11_instrumented, i8** %space_instrumented, align 4 is   %space_instrumented = alloca i8*, align 4 with PAG id 2331
Checking PagEdge node associated to:   %space_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2332
[SelectDef] On node: FIObjVar ID: 2332 (base object)
   %space_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2332 (base object)
   %space_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2332 Instr:   %space_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call14_instrumented, i8** %quot_instrumented, align 4
Target of   store i8* %call14_instrumented, i8** %quot_instrumented, align 4 is   %quot_instrumented = alloca i8*, align 4 with PAG id 2333
Checking PagEdge node associated to:   %quot_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2334
[SelectDef] On node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2334 Instr:   %quot_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 -1, i32* %retval_instrumented, align 4
Target of   store i32 -1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr28_instrumented, i8** %value_instrumented, align 4
Target of   store i8* %add.ptr28_instrumented, i8** %value_instrumented, align 4 is   %value_instrumented = alloca i8*, align 4 with PAG id 2335
Checking PagEdge node associated to:   %value_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2336
[SelectDef] On node: FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2336 (base object)
   %value_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2336 Instr:   %value_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %call30_instrumented, i8** %quot_instrumented, align 4
Target of   store i8* %call30_instrumented, i8** %quot_instrumented, align 4 is   %quot_instrumented = alloca i8*, align 4 with PAG id 2333
Checking PagEdge node associated to:   %quot_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2334
[SelectDef] On node: FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2334 (base object)
   %quot_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2334 Instr:   %quot_instrumented = alloca i8*, align 4
Finding defs for:   store i32 1, i32* %retval_instrumented, align 4
Target of   store i32 1, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 %call36_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call36_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 2337
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 2338
[SelectDef] On node: FIObjVar ID: 2338 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2338 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2338 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %57, i32* %retval_instrumented, align 4
Target of   store i32 %57, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call42_instrumented, i8** %name_instrumented, align 4
Target of   store i8* %call42_instrumented, i8** %name_instrumented, align 4 is   %name_instrumented = alloca i8*, align 4 with PAG id 2325
Checking PagEdge node associated to:   %name_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2326
[SelectDef] On node: FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2326 (base object)
   %name_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2326 Instr:   %name_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %add.ptr43_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %add.ptr43_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2339
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2340
[SelectDef] On node: FIObjVar ID: 2340 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2340 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2340 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i16 %conv46_instrumented, i16* %size_instrumented, align 2
Target of   store i16 %conv46_instrumented, i16* %size_instrumented, align 2 is   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %66, i32 0, i32 1 with PAG id 2496
Checking PagEdge node associated to:   %size_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %66, i32 0, i32 1
Visist starts at PAGNode 2495
[SelectDef] On node: ValVar ID: 2495
   %66 = load %struct.sxmltok_t*, %struct.sxmltok_t** %token_instrumented, align 4 
On edge 2339-->2495
[SelectDef] On node: ValVar ID: 2339
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2340-->2339
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2339
	-  %token_instrumented = alloca %struct.sxmltok_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2340 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
On edge 2487-->2339
[SelectDef] On node: ValVar ID: 2487
   %add.ptr43_instrumented = getelementptr inbounds %struct.sxmltok_t, %struct.sxmltok_t* %61, i32 %sub_instrumented 
On edge 2484-->2487
[SelectDef] On node: ValVar ID: 2484
   %61 = load %struct.sxmltok_t*, %struct.sxmltok_t** %tokens_instrumented, align 4 
On edge 2483-->2484
[SelectDef] On node: ValVar ID: 2483
   %tokens_instrumented = getelementptr inbounds %struct.sxml_args_t, %struct.sxml_args_t* %60, i32 0, i32 2 
On edge 2482-->2483
[SelectDef] On node: ValVar ID: 2482
   %60 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 2319-->2482
[SelectDef] On node: ValVar ID: 2319
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2320-->2319
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2319
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2320 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 2307-->2319
[SelectDef] On node: ValVar ID: 2307
 %struct.sxml_args_t* %args { 1st arg parse_attributes_instrumented  }
On edge 1124-->2307
On edge 1369-->2307
[SelectDef] On node: ValVar ID: 1369
   %34 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1283-->1369
[SelectDef] On node: ValVar ID: 1283
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1284-->1283
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1283
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1284 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1271-->1283
[SelectDef] On node: ValVar ID: 1271
 %struct.sxml_args_t* %args { 1st arg parse_start_instrumented  }
On edge 691-->1271
On edge 691-->1271
Node 691 already visited
[SelectDef] On node: ValVar ID: 691
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
On edge 692-->691
[SelectDefs] Adding node: FIObjVar ID: 692 (base object)
   %args_instrumented = alloca %struct.sxml_args_t, align 4 
[SelectDef] On node: ValVar ID: 1124
   %33 = load %struct.sxml_args_t*, %struct.sxml_args_t** %args.addr_instrumented, align 4 
On edge 1040-->1124
[SelectDef] On node: ValVar ID: 1040
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1041-->1040
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 1040
	-  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
[SelectDefs] Adding node: FIObjVar ID: 1041 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
On edge 1028-->1040
[SelectDef] On node: ValVar ID: 1028
 %struct.sxml_args_t* %args { 1st arg parse_instruction_instrumented  }
On edge 691-->1028
Node 691 already visited
On edge 691-->1028
Node 691 already visited
Found:
	- NodeId: 692 Instr:   %args_instrumented = alloca %struct.sxml_args_t, align 4
	- NodeId: 1041 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 1284 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2320 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
	- NodeId: 2340 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %call47_instrumented, i32* %retval_instrumented, align 4
Target of   store i32 %call47_instrumented, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2315
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2316
[SelectDef] On node: FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2316 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2316 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %74, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %74, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function str_rtrim_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %start, i8** %start.addr_instrumented, align 4
Target of   store i8* %start, i8** %start.addr_instrumented, align 4 is   %start.addr_instrumented = alloca i8*, align 4 with PAG id 2523
Checking PagEdge node associated to:   %start.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2524
[SelectDef] On node: FIObjVar ID: 2524 (base object)
   %start.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2524 (base object)
   %start.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2524 Instr:   %start.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2525
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2526
[SelectDef] On node: FIObjVar ID: 2526 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2526 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2526 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %9, i8** %it_instrumented, align 4
Target of   store i8* %9, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2527
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2528
[SelectDef] On node: FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2528 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4 is   %prev_instrumented = alloca i8*, align 4 with PAG id 2529
Checking PagEdge node associated to:   %prev_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2530
[SelectDef] On node: FIObjVar ID: 2530 (base object)
   %prev_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2530 (base object)
   %prev_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2530 Instr:   %prev_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %15, i8** %retval_instrumented, align 4
Target of   store i8* %15, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2521
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2522
[SelectDef] On node: FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2522 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %16, i8** %it_instrumented, align 4
Target of   store i8* %16, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2527
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2528
[SelectDef] On node: FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2528 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2528 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %17, i8** %retval_instrumented, align 4
Target of   store i8* %17, i8** %retval_instrumented, align 4 is   %retval_instrumented = alloca i8*, align 4 with PAG id 2521
Checking PagEdge node associated to:   %retval_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2522
[SelectDef] On node: FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2522 (base object)
   %retval_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2522 Instr:   %retval_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %22, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %22, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function parse_attrvalue_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4
Target of   store %struct.sxml_t* %state, %struct.sxml_t** %state.addr_instrumented, align 4 is   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 with PAG id 2595
Checking PagEdge node associated to:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Visist starts at PAGNode 2596
[SelectDef] On node: FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2596 (base object)
   %state.addr_instrumented = alloca %struct.sxml_t*, align 4  to result
Found:
	- NodeId: 2596 Instr:   %state.addr_instrumented = alloca %struct.sxml_t*, align 4
Finding defs for:   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4
Target of   store %struct.sxml_args_t* %args, %struct.sxml_args_t** %args.addr_instrumented, align 4 is   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 with PAG id 2597
Checking PagEdge node associated to:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Visist starts at PAGNode 2598
[SelectDef] On node: FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2598 (base object)
   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4  to result
Found:
	- NodeId: 2598 Instr:   %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4
Finding defs for:   store i8* %end, i8** %end.addr_instrumented, align 4
Target of   store i8* %end, i8** %end.addr_instrumented, align 4 is   %end.addr_instrumented = alloca i8*, align 4 with PAG id 2599
Checking PagEdge node associated to:   %end.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2600
[SelectDef] On node: FIObjVar ID: 2600 (base object)
   %end.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2600 (base object)
   %end.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2600 Instr:   %end.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %call_instrumented, i32* %err_instrumented, align 4
Target of   store i32 %call_instrumented, i32* %err_instrumented, align 4 is   %err_instrumented = alloca i32, align 4 with PAG id 2601
Checking PagEdge node associated to:   %err_instrumented = alloca i32, align 4
Visist starts at PAGNode 2602
[SelectDef] On node: FIObjVar ID: 2602 (base object)
   %err_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2602 (base object)
   %err_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2602 Instr:   %err_instrumented = alloca i32, align 4
Finding defs for:   store i32 %13, i32* %retval_instrumented, align 4
Target of   store i32 %13, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2593
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2594
[SelectDef] On node: FIObjVar ID: 2594 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2594 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2594 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %retval_instrumented, align 4
Target of   store i32 0, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2593
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2594
[SelectDef] On node: FIObjVar ID: 2594 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2594 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2594 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %18, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %18, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function print_prettyxml_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2653
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2654
[SelectDef] On node: FIObjVar ID: 2654 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2654 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2654 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4 is   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2655
Checking PagEdge node associated to:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2656
[SelectDef] On node: FIObjVar ID: 2656 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2656 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2656 Instr:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4
Target of   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4 is   %num_tokens.addr_instrumented = alloca i32, align 4 with PAG id 2657
Checking PagEdge node associated to:   %num_tokens.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2658
[SelectDef] On node: FIObjVar ID: 2658 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2658 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2658 Instr:   %num_tokens.addr_instrumented = alloca i32, align 4
Finding defs for:   store i32* %indentlevel, i32** %indentlevel.addr_instrumented, align 4
Target of   store i32* %indentlevel, i32** %indentlevel.addr_instrumented, align 4 is   %indentlevel.addr_instrumented = alloca i32*, align 4 with PAG id 2659
Checking PagEdge node associated to:   %indentlevel.addr_instrumented = alloca i32*, align 4
Visist starts at PAGNode 2660
[SelectDef] On node: FIObjVar ID: 2660 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4 
Start node is a Def already, adding FIObjVar ID: 2660 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4  to result
Found:
	- NodeId: 2660 Instr:   %indentlevel.addr_instrumented = alloca i32*, align 4
Finding defs for:   store i32 0, i32* %i_instrumented, align 4
Target of   store i32 0, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2661
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2662
[SelectDef] On node: FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2662 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2663
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2664
[SelectDef] On node: FIObjVar ID: 2664 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2664 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2664 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %10, align 4
Target of   store i32 %inc_instrumented, i32* %10, align 4 is   %10 = load i32*, i32** %indentlevel.addr_instrumented, align 4 with PAG id 2687
Checking PagEdge node associated to:   %10 = load i32*, i32** %indentlevel.addr_instrumented, align 4
Visist starts at PAGNode 2659
[SelectDef] On node: ValVar ID: 2659
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2660-->2659
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2659
	-  %indentlevel.addr_instrumented = alloca i32*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2660 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2644-->2659
[SelectDef] On node: ValVar ID: 2644
 i32* %indentlevel { 3rd arg print_prettyxml_instrumented  }
On edge 332-->2644
On edge 332-->2644
Node 332 already visited
On edge 332-->2644
Node 332 already visited
[SelectDef] On node: ValVar ID: 332
   %indent = alloca i32, align 4 
On edge 333-->332
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 332
	-  %indent = alloca i32, align 4
[SelectDefs] Adding node: FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4 
On edge 228-->332
[SelectDef] On node: ValVar ID: 228
 i32 0 { constant data }
On edge 3-->228
Discarding edge
Found:
	- NodeId: 333 Instr:   %indent = alloca i32, align 4
	- NodeId: 2660 Instr:   %indentlevel.addr_instrumented = alloca i32*, align 4
Finding defs for:   store i32 0, i32* %j_instrumented, align 4
Target of   store i32 0, i32* %j_instrumented, align 4 is   %j_instrumented = alloca i32, align 4 with PAG id 2665
Checking PagEdge node associated to:   %j_instrumented = alloca i32, align 4
Visist starts at PAGNode 2666
[SelectDef] On node: FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2666 Instr:   %j_instrumented = alloca i32, align 4
Finding defs for:   store i32 %add14_instrumented, i32* %j_instrumented, align 4
Target of   store i32 %add14_instrumented, i32* %j_instrumented, align 4 is   %j_instrumented = alloca i32, align 4 with PAG id 2665
Checking PagEdge node associated to:   %j_instrumented = alloca i32, align 4
Visist starts at PAGNode 2666
[SelectDef] On node: FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2666 Instr:   %j_instrumented = alloca i32, align 4
Finding defs for:   store i32 %inc16_instrumented, i32* %j_instrumented, align 4
Target of   store i32 %inc16_instrumented, i32* %j_instrumented, align 4 is   %j_instrumented = alloca i32, align 4 with PAG id 2665
Checking PagEdge node associated to:   %j_instrumented = alloca i32, align 4
Visist starts at PAGNode 2666
[SelectDef] On node: FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2666 (base object)
   %j_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2666 Instr:   %j_instrumented = alloca i32, align 4
Finding defs for:   store i32 %dec_instrumented, i32* %33, align 4
Target of   store i32 %dec_instrumented, i32* %33, align 4 is   %33 = load i32*, i32** %indentlevel.addr_instrumented, align 4 with PAG id 2749
Checking PagEdge node associated to:   %33 = load i32*, i32** %indentlevel.addr_instrumented, align 4
Visist starts at PAGNode 2659
[SelectDef] On node: ValVar ID: 2659
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2660-->2659
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 2659
	-  %indentlevel.addr_instrumented = alloca i32*, align 4
[SelectDefs] Adding node: FIObjVar ID: 2660 (base object)
   %indentlevel.addr_instrumented = alloca i32*, align 4 
On edge 2644-->2659
[SelectDef] On node: ValVar ID: 2644
 i32* %indentlevel { 3rd arg print_prettyxml_instrumented  }
On edge 332-->2644
On edge 332-->2644
Node 332 already visited
On edge 332-->2644
Node 332 already visited
[SelectDef] On node: ValVar ID: 332
   %indent = alloca i32, align 4 
On edge 333-->332
[SelectDefs] Found AddrEdge with other incoming edges, probably a dominator:
	- 332
	-  %indent = alloca i32, align 4
[SelectDefs] Adding node: FIObjVar ID: 333 (base object)
   %indent = alloca i32, align 4 
On edge 228-->332
[SelectDef] On node: ValVar ID: 228
 i32 0 { constant data }
On edge 3-->228
Discarding edge
Found:
	- NodeId: 333 Instr:   %indent = alloca i32, align 4
	- NodeId: 2660 Instr:   %indentlevel.addr_instrumented = alloca i32*, align 4
Finding defs for:   store i32 %add23_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %add23_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2661
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2662
[SelectDef] On node: FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2662 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i32 %inc25_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %inc25_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2661
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2662
[SelectDef] On node: FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2662 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2662 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i16 %46, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %46, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function count_lines_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2791
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2792
[SelectDef] On node: FIObjVar ID: 2792 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2792 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2792 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4
Target of   store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 is   %bufferlen.addr_instrumented = alloca i32, align 4 with PAG id 2793
Checking PagEdge node associated to:   %bufferlen.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2794
[SelectDef] On node: FIObjVar ID: 2794 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2794 (base object)
   %bufferlen.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2794 Instr:   %bufferlen.addr_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4
Target of   store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 is   %end_instrumented = alloca i8*, align 4 with PAG id 2795
Checking PagEdge node associated to:   %end_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2796
[SelectDef] On node: FIObjVar ID: 2796 (base object)
   %end_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2796 (base object)
   %end_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2796 Instr:   %end_instrumented = alloca i8*, align 4
Finding defs for:   store i8* %6, i8** %it_instrumented, align 4
Target of   store i8* %6, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2797
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2798
[SelectDef] On node: FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2798 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i32 0, i32* %i_instrumented, align 4
Target of   store i32 0, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2799
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2800
[SelectDef] On node: FIObjVar ID: 2800 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2800 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2800 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i8* %call_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %call_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2797
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2798
[SelectDef] On node: FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2798 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i16 %15, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %15, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4
Target of   store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 is   %it_instrumented = alloca i8*, align 4 with PAG id 2797
Checking PagEdge node associated to:   %it_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2798
[SelectDef] On node: FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2798 (base object)
   %it_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2798 Instr:   %it_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %inc_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2799
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2800
[SelectDef] On node: FIObjVar ID: 2800 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2800 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2800 Instr:   %i_instrumented = alloca i32, align 4
Checking function print_tokenvalue_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2850
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2851
[SelectDef] On node: FIObjVar ID: 2851 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2851 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2851 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %token, %struct.sxmltok_t** %token.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %token, %struct.sxmltok_t** %token.addr_instrumented, align 4 is   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2852
Checking PagEdge node associated to:   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2853
[SelectDef] On node: FIObjVar ID: 2853 (base object)
   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2853 (base object)
   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2853 Instr:   %token.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i16 %15, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %15, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Checking function print_chartokens_instrumented
Finding defs for:   store i16 %3, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %3, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
Finding defs for:   store i8* %buffer, i8** %buffer.addr_instrumented, align 4
Target of   store i8* %buffer, i8** %buffer.addr_instrumented, align 4 is   %buffer.addr_instrumented = alloca i8*, align 4 with PAG id 2894
Checking PagEdge node associated to:   %buffer.addr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2895
[SelectDef] On node: FIObjVar ID: 2895 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2895 (base object)
   %buffer.addr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2895 Instr:   %buffer.addr_instrumented = alloca i8*, align 4
Finding defs for:   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4
Target of   store %struct.sxmltok_t* %tokens, %struct.sxmltok_t** %tokens.addr_instrumented, align 4 is   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2896
Checking PagEdge node associated to:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2897
[SelectDef] On node: FIObjVar ID: 2897 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2897 (base object)
   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2897 Instr:   %tokens.addr_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4
Target of   store i32 %num_tokens, i32* %num_tokens.addr_instrumented, align 4 is   %num_tokens.addr_instrumented = alloca i32, align 4 with PAG id 2898
Checking PagEdge node associated to:   %num_tokens.addr_instrumented = alloca i32, align 4
Visist starts at PAGNode 2899
[SelectDef] On node: FIObjVar ID: 2899 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2899 (base object)
   %num_tokens.addr_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2899 Instr:   %num_tokens.addr_instrumented = alloca i32, align 4
Finding defs for:   store i32 0, i32* %i_instrumented, align 4
Target of   store i32 0, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2900
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2901
[SelectDef] On node: FIObjVar ID: 2901 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2901 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2901 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4
Target of   store %struct.sxmltok_t* %add.ptr_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 is   %token_instrumented = alloca %struct.sxmltok_t*, align 4 with PAG id 2904
Checking PagEdge node associated to:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Visist starts at PAGNode 2905
[SelectDef] On node: FIObjVar ID: 2905 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4 
Start node is a Def already, adding FIObjVar ID: 2905 (base object)
   %token_instrumented = alloca %struct.sxmltok_t*, align 4  to result
Found:
	- NodeId: 2905 Instr:   %token_instrumented = alloca %struct.sxmltok_t*, align 4
Finding defs for:   store i32 %10, i32* %retval_instrumented, align 4
Target of   store i32 %10, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2892
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2893
[SelectDef] On node: FIObjVar ID: 2893 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2893 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2893 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i8* %add.ptr3_instrumented, i8** %ampr_instrumented, align 4
Target of   store i8* %add.ptr3_instrumented, i8** %ampr_instrumented, align 4 is   %ampr_instrumented = alloca i8*, align 4 with PAG id 2902
Checking PagEdge node associated to:   %ampr_instrumented = alloca i8*, align 4
Visist starts at PAGNode 2903
[SelectDef] On node: FIObjVar ID: 2903 (base object)
   %ampr_instrumented = alloca i8*, align 4 
Start node is a Def already, adding FIObjVar ID: 2903 (base object)
   %ampr_instrumented = alloca i8*, align 4  to result
Found:
	- NodeId: 2903 Instr:   %ampr_instrumented = alloca i8*, align 4
Finding defs for:   store i32 %inc_instrumented, i32* %i_instrumented, align 4
Target of   store i32 %inc_instrumented, i32* %i_instrumented, align 4 is   %i_instrumented = alloca i32, align 4 with PAG id 2900
Checking PagEdge node associated to:   %i_instrumented = alloca i32, align 4
Visist starts at PAGNode 2901
[SelectDef] On node: FIObjVar ID: 2901 (base object)
   %i_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2901 (base object)
   %i_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2901 Instr:   %i_instrumented = alloca i32, align 4
Finding defs for:   store i32 %39, i32* %retval_instrumented, align 4
Target of   store i32 %39, i32* %retval_instrumented, align 4 is   %retval_instrumented = alloca i32, align 4 with PAG id 2892
Checking PagEdge node associated to:   %retval_instrumented = alloca i32, align 4
Visist starts at PAGNode 2893
[SelectDef] On node: FIObjVar ID: 2893 (base object)
   %retval_instrumented = alloca i32, align 4 
Start node is a Def already, adding FIObjVar ID: 2893 (base object)
   %retval_instrumented = alloca i32, align 4  to result
Found:
	- NodeId: 2893 Instr:   %retval_instrumented = alloca i32, align 4
Finding defs for:   store i16 %44, i16* @zbouncer_recursion_counter, align 2
Target of   store i16 %44, i16* @zbouncer_recursion_counter, align 2 is @zbouncer_recursion_counter = common global i16 0, align 2 with PAG id 102
Checking PagEdge node associated to: @zbouncer_recursion_counter = common global i16 0, align 2
Visist starts at PAGNode 104
[SelectDef] On node: FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  }
Start node is a Def already, adding FIObjVar ID: 104 (base object)
 @zbouncer_recursion_counter = common global i16 0, align 2 { Glob  } to result
Found:
	- NodeId: 104 Instr: @zbouncer_recursion_counter = common global i16 0, align 2
0;IN;-1;CallICFGNode175 {fun: main}
	1;ADEF;0;BASE;8128;FIObjVar ID: 327 (base object)    %buffer = alloca [8128 x i8], align 1 
	2;SUSE;0;state_pushtoken_instrumented;StoreVFGNode ID: 1755 StoreStmt: [Var2182 <-- Var2180]	    store i16 %conv_instrumented, i16* %type2_instrumented, align 4 
		3;ADEF;2;DOMINATOR;4;FIObjVar ID: 1526 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		4;SDEF;2;BASE;4;0;[0];FIObjVar ID: 692 (base object)    %args_instrumented = alloca %struct.sxml_args_t, align 4 
		5;ADEF;2;DOMINATOR;4;FIObjVar ID: 1041 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		6;ADEF;2;DOMINATOR;4;FIObjVar ID: 1189 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		7;ADEF;2;DOMINATOR;4;FIObjVar ID: 1284 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		8;ADEF;2;DOMINATOR;4;FIObjVar ID: 1658 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		9;ADEF;2;DOMINATOR;4;FIObjVar ID: 1775 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		10;ADEF;2;DOMINATOR;4;FIObjVar ID: 1867 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		11;ADEF;2;DOMINATOR;4;FIObjVar ID: 2140 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		12;ADEF;2;DOMINATOR;4;FIObjVar ID: 2148 (base object)    %token_instrumented = alloca %struct.sxmltok_t*, align 4 
		13;ADEF;2;DOMINATOR;4;FIObjVar ID: 2320 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		14;ADEF;2;DOMINATOR;4;FIObjVar ID: 2598 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
	15;SUSE;0;state_pushtoken_instrumented;StoreVFGNode ID: 1754 StoreStmt: [Var2147 <-- Var2177]	    store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 
		12;ADEF;15;DOMINATOR;4;FIObjVar ID: 2148 (base object)    %token_instrumented = alloca %struct.sxmltok_t*, align 4 
	16;SUSE;0;sxml_parse_instrumented;StoreVFGNode ID: 1570 StoreStmt: [Var681 <-- Var664]	    store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 
		17;ADEF;16;DOMINATOR;4;FIObjVar ID: 682 (base object)    %bufferlen.addr_instrumented = alloca i32, align 4 
	18;SUSE;0;str_rtrim_instrumented;StoreVFGNode ID: 1799 StoreStmt: [Var2521 <-- Var2571]	    store i8* %17, i8** %retval_instrumented, align 4 
		19;ADEF;18;DOMINATOR;4;FIObjVar ID: 2522 (base object)    %retval_instrumented = alloca i8*, align 4 
	20;SUSE;0;str_rtrim_instrumented;StoreVFGNode ID: 1796 StoreStmt: [Var2529 <-- Var2554]	    store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4 
		21;ADEF;20;DOMINATOR;4;FIObjVar ID: 2530 (base object)    %prev_instrumented = alloca i8*, align 4 
	22;SUSE;0;str_rtrim_instrumented;StoreVFGNode ID: 1793 StoreStmt: [Var2523 <-- Var2512]	    store i8* %start, i8** %start.addr_instrumented, align 4 
		23;ADEF;22;DOMINATOR;4;FIObjVar ID: 2524 (base object)    %start.addr_instrumented = alloca i8*, align 4 
	24;SUSE;0;NameChar;StoreVFGNode ID: 1527 StoreStmt: [Var222 <-- Var216]	    store i32 %c, i32* %c.addr, align 4 
		25;ADEF;24;DOMINATOR;4;FIObjVar ID: 223 (base object)    %c.addr = alloca i32, align 4 
	26;SUSE;0;str_findchr_instrumented;StoreVFGNode ID: 1673 StoreStmt: [Var1449 <-- Var1437]	    store i32 %c, i32* %c.addr_instrumented, align 4 
		27;ADEF;26;DOMINATOR;4;FIObjVar ID: 1450 (base object)    %c.addr_instrumented = alloca i32, align 4 
	28;SUSE;0;str_rtrim_instrumented;StoreVFGNode ID: 1798 StoreStmt: [Var2527 <-- Var2568]	    store i8* %16, i8** %it_instrumented, align 4 
		29;ADEF;28;DOMINATOR;4;FIObjVar ID: 2528 (base object)    %it_instrumented = alloca i8*, align 4 
	30;SUSE;0;NameStartChar;StoreVFGNode ID: 1524 StoreStmt: [Var160 <-- Var203]	    store i32 %lor.ext, i32* %retval, align 4 
		31;ADEF;30;DOMINATOR;4;FIObjVar ID: 161 (base object)    %retval = alloca i32, align 4 
	32;SUSE;0;parse_instruction_instrumented;StoreVFGNode ID: 1636 StoreStmt: [Var1044 <-- Var1141]	    store i8* %add.ptr18_instrumented, i8** %quest_instrumented, align 4 
		33;ADEF;32;DOMINATOR;4;FIObjVar ID: 1045 (base object)    %quest_instrumented = alloca i8*, align 4 
	34;SUSE;0;state_pushtoken_instrumented;StoreVFGNode ID: 1756 StoreStmt: [Var2192 <-- Var2190]	    store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4 
		3;ADEF;34;DOMINATOR;4;FIObjVar ID: 1526 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		4;SDEF;34;BASE;4;0;[0];FIObjVar ID: 692 (base object)    %args_instrumented = alloca %struct.sxml_args_t, align 4 
		4;SDEF;34;BASE;4;0;[0];FIObjVar ID: 692 (base object)    %args_instrumented = alloca %struct.sxml_args_t, align 4 
		5;ADEF;34;DOMINATOR;4;FIObjVar ID: 1041 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		6;ADEF;34;DOMINATOR;4;FIObjVar ID: 1189 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		7;ADEF;34;DOMINATOR;4;FIObjVar ID: 1284 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		8;ADEF;34;DOMINATOR;4;FIObjVar ID: 1658 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		9;ADEF;34;DOMINATOR;4;FIObjVar ID: 1775 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		10;ADEF;34;DOMINATOR;4;FIObjVar ID: 1867 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		11;ADEF;34;DOMINATOR;4;FIObjVar ID: 2140 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		12;ADEF;34;DOMINATOR;4;FIObjVar ID: 2148 (base object)    %token_instrumented = alloca %struct.sxmltok_t*, align 4 
		13;ADEF;34;DOMINATOR;4;FIObjVar ID: 2320 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		14;ADEF;34;DOMINATOR;4;FIObjVar ID: 2598 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
	35;SUSE;0;parse_characters_instrumented;StoreVFGNode ID: 1679 StoreStmt: [Var1527 <-- Var1512]	    store i8* %end, i8** %end.addr_instrumented, align 4 
		36;ADEF;35;DOMINATOR;4;FIObjVar ID: 1528 (base object)    %end.addr_instrumented = alloca i8*, align 4 
	37;SUSE;0;parse_attributes_instrumented;StoreVFGNode ID: 1787 StoreStmt: [Var2325 <-- Var2479]	    store i8* %call42_instrumented, i8** %name_instrumented, align 4 
		38;ADEF;37;DOMINATOR;4;FIObjVar ID: 2326 (base object)    %name_instrumented = alloca i8*, align 4 
	39;SUSE;0;parse_attributes_instrumented;StoreVFGNode ID: 1779 StoreStmt: [Var2333 <-- Var2419]	    store i8* %call14_instrumented, i8** %quot_instrumented, align 4 
		40;ADEF;39;DOMINATOR;4;FIObjVar ID: 2334 (base object)    %quot_instrumented = alloca i8*, align 4 
	41;SUSE;0;count_lines_instrumented;StoreVFGNode ID: 1825 StoreStmt: [Var2791 <-- Var2783]	    store i8* %buffer, i8** %buffer.addr_instrumented, align 4 
		42;ADEF;41;DOMINATOR;4;FIObjVar ID: 2792 (base object)    %buffer.addr_instrumented = alloca i8*, align 4 
	43;SUSE;0;str_findstr_instrumented;StoreVFGNode ID: 1736 StoreStmt: [Var2025 <-- Var2011]	    store i8* %end, i8** %end.addr_instrumented, align 4 
		44;ADEF;43;DOMINATOR;4;FIObjVar ID: 2026 (base object)    %end.addr_instrumented = alloca i8*, align 4 
	45;SUSE;0;WhiteSpace;StoreVFGNode ID: 1530 StoreStmt: [Var289 <-- Var281]	    store i32 %c, i32* %c.addr, align 4 
		46;ADEF;45;DOMINATOR;4;FIObjVar ID: 290 (base object)    %c.addr = alloca i32, align 4 
	47;SUSE;0;parse_start_instrumented;StoreVFGNode ID: 1656 StoreStmt: [Var1293 <-- Var1305]	    store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 
		48;ADEF;47;DOMINATOR;4;FIObjVar ID: 1294 (base object)    %start_instrumented = alloca i8*, align 4 
	49;SUSE;0;parse_attributes_instrumented;StoreVFGNode ID: 1773 StoreStmt: [Var2323 <-- Var2357]	    store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 
		50;ADEF;49;DOMINATOR;4;FIObjVar ID: 2324 (base object)    %end_instrumented = alloca i8*, align 4 
	51;SUSE;0;parse_cdata_instrumented;StoreVFGNode ID: 1718 StoreStmt: [Var1872 <-- Var1890]	    store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 
		52;ADEF;51;DOMINATOR;4;FIObjVar ID: 1873 (base object)    %end_instrumented = alloca i8*, align 4 
	53;SUSE;0;parse_attributes_instrumented;StoreVFGNode ID: 1783 StoreStmt: [Var2333 <-- Var2451]	    store i8* %call30_instrumented, i8** %quot_instrumented, align 4 
		40;ADEF;53;DOMINATOR;4;FIObjVar ID: 2334 (base object)    %quot_instrumented = alloca i8*, align 4 
	54;SUSE;0;str_findchr_instrumented;StoreVFGNode ID: 1671 StoreStmt: [Var1445 <-- Var1435]	    store i8* %start, i8** %start.addr_instrumented, align 4 
		55;ADEF;54;DOMINATOR;4;FIObjVar ID: 1446 (base object)    %start.addr_instrumented = alloca i8*, align 4 
	56;SUSE;0;str_ltrim_instrumented;StoreVFGNode ID: 1614 StoreStmt: [Var929 <-- Var920]	    store i8* %start, i8** %start.addr_instrumented, align 4 
		57;ADEF;56;DOMINATOR;4;FIObjVar ID: 930 (base object)    %start.addr_instrumented = alloca i8*, align 4 
	58;SUSE;0;count_lines_instrumented;StoreVFGNode ID: 1828 StoreStmt: [Var2797 <-- Var2807]	    store i8* %6, i8** %it_instrumented, align 4 
		59;ADEF;58;DOMINATOR;4;FIObjVar ID: 2798 (base object)    %it_instrumented = alloca i8*, align 4 
	60;SUSE;0;count_lines_instrumented;StoreVFGNode ID: 1832 StoreStmt: [Var2797 <-- Var2832]	    store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 
		59;ADEF;60;DOMINATOR;4;FIObjVar ID: 2798 (base object)    %it_instrumented = alloca i8*, align 4 
	61;SUSE;0;parse_characters_instrumented;StoreVFGNode ID: 1686 StoreStmt: [Var1529 <-- Var1623]	    store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4 
		62;ADEF;61;DOMINATOR;4;FIObjVar ID: 1530 (base object)    %start_instrumented = alloca i8*, align 4 
	63;SUSE;0;str_findstr_instrumented;StoreVFGNode ID: 1742 StoreStmt: [Var2023 <-- Var2106]	    store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4 
		64;ADEF;63;DOMINATOR;4;FIObjVar ID: 2024 (base object)    %start.addr_instrumented = alloca i8*, align 4 
	65;SUSE;0;parse_comment_instrumented;StoreVFGNode ID: 1706 StoreStmt: [Var1780 <-- Var1798]	    store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 
		66;ADEF;65;DOMINATOR;4;FIObjVar ID: 1781 (base object)    %end_instrumented = alloca i8*, align 4 
	67;SUSE;0;parse_doctype_instrumented;StoreVFGNode ID: 1645 StoreStmt: [Var1194 <-- Var1212]	    store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 
		68;ADEF;67;DOMINATOR;4;FIObjVar ID: 1195 (base object)    %end_instrumented = alloca i8*, align 4 
	69;SUSE;0;parse_end_instrumented;StoreVFGNode ID: 1693 StoreStmt: [Var1665 <-- Var1683]	    store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 
		70;ADEF;69;DOMINATOR;4;FIObjVar ID: 1666 (base object)    %end_instrumented = alloca i8*, align 4 
	71;SUSE;0;parse_end_instrumented;StoreVFGNode ID: 1692 StoreStmt: [Var1663 <-- Var1675]	    store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 
		72;ADEF;71;DOMINATOR;4;FIObjVar ID: 1664 (base object)    %start_instrumented = alloca i8*, align 4 
	73;SUSE;0;count_lines_instrumented;StoreVFGNode ID: 1827 StoreStmt: [Var2795 <-- Var2805]	    store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 
		74;ADEF;73;DOMINATOR;4;FIObjVar ID: 2796 (base object)    %end_instrumented = alloca i8*, align 4 
	75;SUSE;0;str_rtrim_instrumented;StoreVFGNode ID: 1795 StoreStmt: [Var2527 <-- Var2545]	    store i8* %9, i8** %it_instrumented, align 4 
		29;ADEF;75;DOMINATOR;4;FIObjVar ID: 2528 (base object)    %it_instrumented = alloca i8*, align 4 
	76;SUSE;0;parse_attributes_instrumented;StoreVFGNode ID: 1776 StoreStmt: [Var2329 <-- Var2395]	    store i8* %call6_instrumented, i8** %eq_instrumented, align 4 
		77;ADEF;76;DOMINATOR;4;FIObjVar ID: 2330 (base object)    %eq_instrumented = alloca i8*, align 4 
	78;SUSE;0;parse_end_instrumented;StoreVFGNode ID: 1696 StoreStmt: [Var1659 <-- Var1721]	    store i8* %call8_instrumented, i8** %gt_instrumented, align 4 
		79;ADEF;78;DOMINATOR;4;FIObjVar ID: 1660 (base object)    %gt_instrumented = alloca i8*, align 4 
	80;SUSE;0;parse_comment_instrumented;StoreVFGNode ID: 1705 StoreStmt: [Var1778 <-- Var1790]	    store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 
		81;ADEF;80;DOMINATOR;4;FIObjVar ID: 1779 (base object)    %start_instrumented = alloca i8*, align 4 
	82;SUSE;0;print_tokenvalue_instrumented;StoreVFGNode ID: 1835 StoreStmt: [Var2850 <-- Var2841]	    store i8* %buffer, i8** %buffer.addr_instrumented, align 4 
		83;ADEF;82;DOMINATOR;4;FIObjVar ID: 2851 (base object)    %buffer.addr_instrumented = alloca i8*, align 4 
	84;SUSE;0;sxml_parse_instrumented;StoreVFGNode ID: 1576 StoreStmt: [Var689 <-- Var719]	    store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 
		85;ADEF;84;DOMINATOR;4;FIObjVar ID: 690 (base object)    %end_instrumented = alloca i8*, align 4 
	86;SUSE;0;str_ltrim_instrumented;StoreVFGNode ID: 1615 StoreStmt: [Var931 <-- Var921]	    store i8* %end, i8** %end.addr_instrumented, align 4 
		87;ADEF;86;DOMINATOR;4;FIObjVar ID: 932 (base object)    %end.addr_instrumented = alloca i8*, align 4 
	88;SUSE;0;parse_end_instrumented;StoreVFGNode ID: 1695 StoreStmt: [Var1663 <-- Var1717]	    store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4 
		72;ADEF;88;DOMINATOR;4;FIObjVar ID: 1664 (base object)    %start_instrumented = alloca i8*, align 4 
	89;SUSE;0;str_ltrim_instrumented;StoreVFGNode ID: 1616 StoreStmt: [Var933 <-- Var949]	    store i8* %9, i8** %it_instrumented, align 4 
		90;ADEF;89;DOMINATOR;4;FIObjVar ID: 934 (base object)    %it_instrumented = alloca i8*, align 4 
	91;SUSE;0;parse_characters_instrumented;StoreVFGNode ID: 1684 StoreStmt: [Var1533 <-- Var1608]	    store i8* %call14_instrumented, i8** %colon_instrumented, align 4 
		92;ADEF;91;DOMINATOR;4;FIObjVar ID: 1534 (base object)    %colon_instrumented = alloca i8*, align 4 
	93;SUSE;0;state_pushtoken_instrumented;StoreVFGNode ID: 1758 StoreStmt: [Var2205 <-- Var103]	    store i16 0, i16* %size_instrumented, align 2 
		3;ADEF;93;DOMINATOR;4;FIObjVar ID: 1526 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		4;SDEF;93;BASE;4;0;[0];FIObjVar ID: 692 (base object)    %args_instrumented = alloca %struct.sxml_args_t, align 4 
		5;ADEF;93;DOMINATOR;4;FIObjVar ID: 1041 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		6;ADEF;93;DOMINATOR;4;FIObjVar ID: 1189 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		7;ADEF;93;DOMINATOR;4;FIObjVar ID: 1284 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		8;ADEF;93;DOMINATOR;4;FIObjVar ID: 1658 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		9;ADEF;93;DOMINATOR;4;FIObjVar ID: 1775 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		10;ADEF;93;DOMINATOR;4;FIObjVar ID: 1867 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		11;ADEF;93;DOMINATOR;4;FIObjVar ID: 2140 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		12;ADEF;93;DOMINATOR;4;FIObjVar ID: 2148 (base object)    %token_instrumented = alloca %struct.sxmltok_t*, align 4 
		13;ADEF;93;DOMINATOR;4;FIObjVar ID: 2320 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		14;ADEF;93;DOMINATOR;4;FIObjVar ID: 2598 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
	94;SUSE;0;print_chartokens_instrumented;StoreVFGNode ID: 1845 StoreStmt: [Var2902 <-- Var2934]	    store i8* %add.ptr3_instrumented, i8** %ampr_instrumented, align 4 
		95;ADEF;94;DOMINATOR;4;FIObjVar ID: 2903 (base object)    %ampr_instrumented = alloca i8*, align 4 
	96;SUSE;0;sxml_parse_instrumented;StoreVFGNode ID: 1595 StoreStmt: [Var701 <-- Var821]	    store i8* %add.ptr32_instrumented, i8** %start29_instrumented, align 4 
		97;ADEF;96;DOMINATOR;4;FIObjVar ID: 702 (base object)    %start29_instrumented = alloca i8*, align 4 
	98;SUSE;0;print_prettyxml_instrumented;StoreVFGNode ID: 1810 StoreStmt: [Var2653 <-- Var2641]	    store i8* %buffer, i8** %buffer.addr_instrumented, align 4 
		99;ADEF;98;DOMINATOR;4;FIObjVar ID: 2654 (base object)    %buffer.addr_instrumented = alloca i8*, align 4 
	100;SUSE;0;sxml_parse_instrumented;StoreVFGNode ID: 1581 StoreStmt: [Var695 <-- Var744]	    store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4 
		101;ADEF;100;DOMINATOR;4;FIObjVar ID: 696 (base object)    %start_instrumented = alloca i8*, align 4 
	102;SUSE;0;str_startswith_instrumented;StoreVFGNode ID: 1728 StoreStmt: [Var1959 <-- Var1945]	    store i8* %end, i8** %end.addr_instrumented, align 4 
		103;ADEF;102;DOMINATOR;4;FIObjVar ID: 1960 (base object)    %end.addr_instrumented = alloca i8*, align 4 
	104;SUSE;0;str_rtrim_instrumented;StoreVFGNode ID: 1797 StoreStmt: [Var2521 <-- Var2562]	    store i8* %15, i8** %retval_instrumented, align 4 
		19;ADEF;104;DOMINATOR;4;FIObjVar ID: 2522 (base object)    %retval_instrumented = alloca i8*, align 4 
	105;SUSE;0;parse_doctype_instrumented;StoreVFGNode ID: 1644 StoreStmt: [Var1192 <-- Var1204]	    store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 
		106;ADEF;105;DOMINATOR;4;FIObjVar ID: 1193 (base object)    %start_instrumented = alloca i8*, align 4 
	107;SUSE;0;parse_start_instrumented;StoreVFGNode ID: 1665 StoreStmt: [Var1287 <-- Var1402]	    store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4 
		108;ADEF;107;DOMINATOR;4;FIObjVar ID: 1288 (base object)    %gt_instrumented = alloca i8*, align 4 
	109;SUSE;0;sxml_parse_instrumented;StoreVFGNode ID: 1577 StoreStmt: [Var722 <-- Var721]	    store i8* %9, i8** %buffer1_instrumented, align 4 
		4;SDEF;109;BASE;4;0;[0];FIObjVar ID: 692 (base object)    %args_instrumented = alloca %struct.sxml_args_t, align 4 
	110;SUSE;0;parse_comment_instrumented;StoreVFGNode ID: 1709 StoreStmt: [Var1778 <-- Var1819]	    store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 
		81;ADEF;110;DOMINATOR;4;FIObjVar ID: 1779 (base object)    %start_instrumented = alloca i8*, align 4 
	111;SUSE;0;parse_start_instrumented;StoreVFGNode ID: 1659 StoreStmt: [Var1289 <-- Var1347]	    store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4 
		112;ADEF;111;DOMINATOR;4;FIObjVar ID: 1290 (base object)    %name_instrumented = alloca i8*, align 4 
	113;SUSE;0;parse_attributes_instrumented;StoreVFGNode ID: 1774 StoreStmt: [Var2325 <-- Var2361]	    store i8* %call_instrumented, i8** %name_instrumented, align 4 
		38;ADEF;113;DOMINATOR;4;FIObjVar ID: 2326 (base object)    %name_instrumented = alloca i8*, align 4 
	114;SUSE;0;str_findstr_instrumented;StoreVFGNode ID: 1743 StoreStmt: [Var2021 <-- Var2109]	    store i8* %30, i8** %retval_instrumented, align 4 
		115;ADEF;114;DOMINATOR;4;FIObjVar ID: 2022 (base object)    %retval_instrumented = alloca i8*, align 4 
	116;SUSE;0;parse_instruction_instrumented;StoreVFGNode ID: 1631 StoreStmt: [Var1048 <-- Var1097]	    store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 
		117;ADEF;116;DOMINATOR;4;FIObjVar ID: 1049 (base object)    %start_instrumented = alloca i8*, align 4 
	118;SUSE;0;parse_start_instrumented;StoreVFGNode ID: 1657 StoreStmt: [Var1295 <-- Var1313]	    store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 
		119;ADEF;118;DOMINATOR;4;FIObjVar ID: 1296 (base object)    %end_instrumented = alloca i8*, align 4 
	120;SUSE;0;sxml_parse_instrumented;StoreVFGNode ID: 1569 StoreStmt: [Var679 <-- Var663]	    store i8* %buffer, i8** %buffer.addr_instrumented, align 4 
		121;ADEF;120;DOMINATOR;4;FIObjVar ID: 680 (base object)    %buffer.addr_instrumented = alloca i8*, align 4 
	122;SUSE;0;str_findchr_instrumented;StoreVFGNode ID: 1672 StoreStmt: [Var1447 <-- Var1436]	    store i8* %end, i8** %end.addr_instrumented, align 4 
		123;ADEF;122;DOMINATOR;4;FIObjVar ID: 1448 (base object)    %end.addr_instrumented = alloca i8*, align 4 
	124;SUSE;0;parse_instruction_instrumented;StoreVFGNode ID: 1628 StoreStmt: [Var1048 <-- Var1060]	    store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 
		117;ADEF;124;DOMINATOR;4;FIObjVar ID: 1049 (base object)    %start_instrumented = alloca i8*, align 4 
	125;SUSE;0;parse_doctype_instrumented;StoreVFGNode ID: 1648 StoreStmt: [Var1192 <-- Var1234]	    store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 
		106;ADEF;125;DOMINATOR;4;FIObjVar ID: 1193 (base object)    %start_instrumented = alloca i8*, align 4 
	126;SUSE;0;str_startswith_instrumented;StoreVFGNode ID: 1727 StoreStmt: [Var1957 <-- Var1944]	    store i8* %start, i8** %start.addr_instrumented, align 4 
		127;ADEF;126;DOMINATOR;4;FIObjVar ID: 1958 (base object)    %start.addr_instrumented = alloca i8*, align 4 
	128;SUSE;0;str_find_notalnum_instrumented;StoreVFGNode ID: 1765 StoreStmt: [Var2257 <-- Var2247]	    store i8* %end, i8** %end.addr_instrumented, align 4 
		129;ADEF;128;DOMINATOR;4;FIObjVar ID: 2258 (base object)    %end.addr_instrumented = alloca i8*, align 4 
	130;SUSE;0;state_setpos_instrumented;StoreVFGNode ID: 1622 StoreStmt: [Var995 <-- Var982]	    store i8* %ptr, i8** %ptr.addr_instrumented, align 4 
		131;ADEF;130;DOMINATOR;4;FIObjVar ID: 996 (base object)    %ptr.addr_instrumented = alloca i8*, align 4 
	132;SUSE;0;parse_instruction_instrumented;StoreVFGNode ID: 1629 StoreStmt: [Var1050 <-- Var1068]	    store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 
		133;ADEF;132;DOMINATOR;4;FIObjVar ID: 1051 (base object)    %end_instrumented = alloca i8*, align 4 
	134;SUSE;0;parse_attrvalue_instrumented;StoreVFGNode ID: 1804 StoreStmt: [Var2599 <-- Var2584]	    store i8* %end, i8** %end.addr_instrumented, align 4 
		135;ADEF;134;DOMINATOR;4;FIObjVar ID: 2600 (base object)    %end.addr_instrumented = alloca i8*, align 4 
	136;SUSE;0;state_pushtoken_instrumented;StoreVFGNode ID: 1749 StoreStmt: [Var2143 <-- Var2124]	    store i8* %start, i8** %start.addr_instrumented, align 4 
		137;ADEF;136;DOMINATOR;4;FIObjVar ID: 2144 (base object)    %start.addr_instrumented = alloca i8*, align 4 
	138;SUSE;0;main;StoreVFGNode ID: 1549 StoreStmt: [Var328 <-- Var470]	    store i32 %add30, i32* %bufferlen, align 4 
		139;ADEF;138;DOMINATOR;4;FIObjVar ID: 329 (base object)    %bufferlen = alloca i32, align 4 
	140;SUSE;0;str_findchr_instrumented;StoreVFGNode ID: 1674 StoreStmt: [Var1451 <-- Var1491]	    store i8* %call_instrumented, i8** %it_instrumented, align 4 
		141;ADEF;140;DOMINATOR;4;FIObjVar ID: 1452 (base object)    %it_instrumented = alloca i8*, align 4 
	142;SUSE;0;state_pushtoken_instrumented;StoreVFGNode ID: 1757 StoreStmt: [Var2202 <-- Var2200]	    store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4 
		3;ADEF;142;DOMINATOR;4;FIObjVar ID: 1526 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		4;SDEF;142;BASE;4;0;[0];FIObjVar ID: 692 (base object)    %args_instrumented = alloca %struct.sxml_args_t, align 4 
		4;SDEF;142;BASE;4;0;[0];FIObjVar ID: 692 (base object)    %args_instrumented = alloca %struct.sxml_args_t, align 4 
		5;ADEF;142;DOMINATOR;4;FIObjVar ID: 1041 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		6;ADEF;142;DOMINATOR;4;FIObjVar ID: 1189 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		7;ADEF;142;DOMINATOR;4;FIObjVar ID: 1284 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		8;ADEF;142;DOMINATOR;4;FIObjVar ID: 1658 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		9;ADEF;142;DOMINATOR;4;FIObjVar ID: 1775 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		10;ADEF;142;DOMINATOR;4;FIObjVar ID: 1867 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		11;ADEF;142;DOMINATOR;4;FIObjVar ID: 2140 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		12;ADEF;142;DOMINATOR;4;FIObjVar ID: 2148 (base object)    %token_instrumented = alloca %struct.sxmltok_t*, align 4 
		13;ADEF;142;DOMINATOR;4;FIObjVar ID: 2320 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
		14;ADEF;142;DOMINATOR;4;FIObjVar ID: 2598 (base object)    %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 
	143;SUSE;0;str_find_notalnum_instrumented;StoreVFGNode ID: 1764 StoreStmt: [Var2255 <-- Var2246]	    store i8* %start, i8** %start.addr_instrumented, align 4 
		144;ADEF;143;DOMINATOR;4;FIObjVar ID: 2256 (base object)    %start.addr_instrumented = alloca i8*, align 4 
	145;SUSE;0;parse_attributes_instrumented;StoreVFGNode ID: 1778 StoreStmt: [Var2331 <-- Var2407]	    store i8* %call11_instrumented, i8** %space_instrumented, align 4 
		146;ADEF;145;DOMINATOR;4;FIObjVar ID: 2332 (base object)    %space_instrumented = alloca i8*, align 4 
	147;SUSE;0;state_pushtoken_instrumented;StoreVFGNode ID: 1750 StoreStmt: [Var2145 <-- Var2125]	    store i8* %end, i8** %end.addr_instrumented, align 4 
		148;ADEF;147;DOMINATOR;4;FIObjVar ID: 2146 (base object)    %end.addr_instrumented = alloca i8*, align 4 
	149;SUSE;0;sxml_parse_instrumented;StoreVFGNode ID: 1578 StoreStmt: [Var725 <-- Var724]	    store i32 %10, i32* %bufferlen2_instrumented, align 4 
		4;SDEF;149;BASE;4;0;[0];FIObjVar ID: 692 (base object)    %args_instrumented = alloca %struct.sxml_args_t, align 4 
		150;SDEF;149;BASE;4;4;[1];FIObjVar ID: 692 (base object)    %args_instrumented = alloca %struct.sxml_args_t, align 4 
	151;SUSE;0;str_findstr_instrumented;StoreVFGNode ID: 1735 StoreStmt: [Var2023 <-- Var2010]	    store i8* %start, i8** %start.addr_instrumented, align 4 
		64;ADEF;151;DOMINATOR;4;FIObjVar ID: 2024 (base object)    %start.addr_instrumented = alloca i8*, align 4 
	152;SUSE;0;parse_cdata_instrumented;StoreVFGNode ID: 1717 StoreStmt: [Var1870 <-- Var1882]	    store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 
		153;ADEF;152;DOMINATOR;4;FIObjVar ID: 1871 (base object)    %start_instrumented = alloca i8*, align 4 
	154;SUSE;0;sxml_parse_instrumented;StoreVFGNode ID: 1596 StoreStmt: [Var703 <-- Var825]	    store i8* %call34_instrumented, i8** %lt33_instrumented, align 4 
		155;ADEF;154;DOMINATOR;4;FIObjVar ID: 704 (base object)    %lt33_instrumented = alloca i8*, align 4 
	156;SUSE;0;parse_characters_instrumented;StoreVFGNode ID: 1681 StoreStmt: [Var1535 <-- Var1550]	    store i8* %call_instrumented, i8** %ampr_instrumented, align 4 
		157;ADEF;156;DOMINATOR;4;FIObjVar ID: 1536 (base object)    %ampr_instrumented = alloca i8*, align 4 
	158;SUSE;0;str_ltrim_instrumented;StoreVFGNode ID: 1617 StoreStmt: [Var933 <-- Var969]	    store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 
		90;ADEF;158;DOMINATOR;4;FIObjVar ID: 934 (base object)    %it_instrumented = alloca i8*, align 4 
	159;SUSE;0;parse_attributes_instrumented;StoreVFGNode ID: 1772 StoreStmt: [Var2321 <-- Var2349]	    store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 
		160;ADEF;159;DOMINATOR;4;FIObjVar ID: 2322 (base object)    %start_instrumented = alloca i8*, align 4 
	161;SUSE;0;NameStartChar;StoreVFGNode ID: 1522 StoreStmt: [Var162 <-- Var154]	    store i32 %c, i32* %c.addr, align 4 
		162;ADEF;161;DOMINATOR;4;FIObjVar ID: 163 (base object)    %c.addr = alloca i32, align 4 
	163;SUSE;0;parse_cdata_instrumented;StoreVFGNode ID: 1722 StoreStmt: [Var1868 <-- Var1916]	    store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 
		164;ADEF;163;DOMINATOR;4;FIObjVar ID: 1869 (base object)    %bracket_instrumented = alloca i8*, align 4 
	165;SUSE;0;state_setpos_instrumented;StoreVFGNode ID: 1623 StoreStmt: [Var1008 <-- Var1006]	    store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4, !ziuse !3 
		166;ADEF;165;DOMINATOR;4;FIObjVar ID: 1524 (base object)    %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
		167;SDEF;165;BASE;4;0;[0];FIObjVar ID: 688 (base object)    %temp_instrumented = alloca %struct.sxml_t, align 4 
		167;SDEF;165;BASE;4;0;[0];FIObjVar ID: 688 (base object)    %temp_instrumented = alloca %struct.sxml_t, align 4 
		168;ADEF;165;DOMINATOR;4;FIObjVar ID: 992 (base object)    %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
		169;ADEF;165;DOMINATOR;4;FIObjVar ID: 1039 (base object)    %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
		170;ADEF;165;DOMINATOR;4;FIObjVar ID: 1187 (base object)    %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
		171;ADEF;165;DOMINATOR;4;FIObjVar ID: 1282 (base object)    %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
		172;ADEF;165;DOMINATOR;4;FIObjVar ID: 1656 (base object)    %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
		173;ADEF;165;DOMINATOR;4;FIObjVar ID: 1773 (base object)    %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
		174;ADEF;165;DOMINATOR;4;FIObjVar ID: 1865 (base object)    %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
		175;ADEF;165;DOMINATOR;4;FIObjVar ID: 2318 (base object)    %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
		176;ADEF;165;DOMINATOR;4;FIObjVar ID: 2596 (base object)    %state.addr_instrumented = alloca %struct.sxml_t*, align 4 
	177;SUSE;0;str_find_notalnum_instrumented;StoreVFGNode ID: 1766 StoreStmt: [Var2259 <-- Var2275]	    store i8* %9, i8** %it_instrumented, align 4 
		178;ADEF;177;DOMINATOR;4;FIObjVar ID: 2260 (base object)    %it_instrumented = alloca i8*, align 4 
	179;SUSE;0;parse_start_instrumented;StoreVFGNode ID: 1664 StoreStmt: [Var1287 <-- Var1384]	    store i8* %add.ptr24_instrumented, i8** %gt_instrumented, align 4 
		108;ADEF;179;DOMINATOR;4;FIObjVar ID: 1288 (base object)    %gt_instrumented = alloca i8*, align 4 
	180;SUSE;0;parse_cdata_instrumented;StoreVFGNode ID: 1721 StoreStmt: [Var1870 <-- Var1911]	    store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 
		153;ADEF;180;DOMINATOR;4;FIObjVar ID: 1871 (base object)    %start_instrumented = alloca i8*, align 4 
	181;SUSE;0;parse_characters_instrumented;StoreVFGNode ID: 1680 StoreStmt: [Var1529 <-- Var1546]	    store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 
		62;ADEF;181;DOMINATOR;4;FIObjVar ID: 1530 (base object)    %start_instrumented = alloca i8*, align 4 
	182;SUSE;0;str_findstr_instrumented;StoreVFGNode ID: 1740 StoreStmt: [Var2033 <-- Var2088]	    store i8* %call8_instrumented, i8** %it_instrumented, align 4 
		183;ADEF;182;DOMINATOR;4;FIObjVar ID: 2034 (base object)    %it_instrumented = alloca i8*, align 4 
	184;SUSE;0;parse_instruction_instrumented;StoreVFGNode ID: 1632 StoreStmt: [Var1046 <-- Var1101]	    store i8* %call6_instrumented, i8** %space_instrumented, align 4 
		185;ADEF;184;DOMINATOR;4;FIObjVar ID: 1047 (base object)    %space_instrumented = alloca i8*, align 4 
	186;SUSE;0;str_find_notalnum_instrumented;StoreVFGNode ID: 1767 StoreStmt: [Var2259 <-- Var2295]	    store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 
		178;ADEF;186;DOMINATOR;4;FIObjVar ID: 2260 (base object)    %it_instrumented = alloca i8*, align 4 
	187;SUSE;0;main;StoreVFGNode ID: 1550 StoreStmt: [Var472 <-- Var228]	    store i32 0, i32* %bufferpos31, align 4 
		188;SDEF;187;BASE;4;0;[0];FIObjVar ID: 341 (base object)    %parser = alloca %struct.sxml_t, align 4 
		188;SDEF;187;BASE;4;0;[0];FIObjVar ID: 341 (base object)    %parser = alloca %struct.sxml_t, align 4 
	189;SUSE;0;parse_characters_instrumented;StoreVFGNode ID: 1683 StoreStmt: [Var1531 <-- Var1604]	    store i8* %cond_instrumented, i8** %limit_instrumented, align 4 
		190;ADEF;189;DOMINATOR;4;FIObjVar ID: 1532 (base object)    %limit_instrumented = alloca i8*, align 4 
	191;SUSE;0;str_rtrim_instrumented;StoreVFGNode ID: 1794 StoreStmt: [Var2525 <-- Var2513]	    store i8* %end, i8** %end.addr_instrumented, align 4 
		192;ADEF;191;DOMINATOR;4;FIObjVar ID: 2526 (base object)    %end.addr_instrumented = alloca i8*, align 4 
	193;SUSE;0;parse_start_instrumented;StoreVFGNode ID: 1660 StoreStmt: [Var1291 <-- Var1351]	    store i8* %call10_instrumented, i8** %space_instrumented, align 4 
		194;ADEF;193;DOMINATOR;4;FIObjVar ID: 1292 (base object)    %space_instrumented = alloca i8*, align 4 
	195;SUSE;0;sxml_parse_instrumented;StoreVFGNode ID: 1582 StoreStmt: [Var697 <-- Var748]	    store i8* %call_instrumented, i8** %lt_instrumented, align 4 
		196;ADEF;195;DOMINATOR;4;FIObjVar ID: 698 (base object)    %lt_instrumented = alloca i8*, align 4 
	197;SUSE;0;count_lines_instrumented;StoreVFGNode ID: 1826 StoreStmt: [Var2793 <-- Var2784]	    store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 
		198;ADEF;197;DOMINATOR;4;FIObjVar ID: 2794 (base object)    %bufferlen.addr_instrumented = alloca i32, align 4 
	199;SUSE;0;parse_attributes_instrumented;StoreVFGNode ID: 1782 StoreStmt: [Var2335 <-- Var2444]	    store i8* %add.ptr28_instrumented, i8** %value_instrumented, align 4 
		200;ADEF;199;DOMINATOR;4;FIObjVar ID: 2336 (base object)    %value_instrumented = alloca i8*, align 4 
	201;SUSE;0;str_findstr_instrumented;StoreVFGNode ID: 1741 StoreStmt: [Var2021 <-- Var2101]	    store i8* %28, i8** %retval_instrumented, align 4 
		115;ADEF;201;DOMINATOR;4;FIObjVar ID: 2022 (base object)    %retval_instrumented = alloca i8*, align 4 
	202;SUSE;0;main;StoreVFGNode ID: 1546 StoreStmt: [Var328 <-- Var423]	    store i32 %sub, i32* %bufferlen, align 4 
		139;ADEF;202;DOMINATOR;4;FIObjVar ID: 329 (base object)    %bufferlen = alloca i32, align 4 
	203;SUSE;0;print_chartokens_instrumented;StoreVFGNode ID: 1839 StoreStmt: [Var2894 <-- Var2882]	    store i8* %buffer, i8** %buffer.addr_instrumented, align 4 
		204;ADEF;203;DOMINATOR;4;FIObjVar ID: 2895 (base object)    %buffer.addr_instrumented = alloca i8*, align 4 
	205;SUSE;0;parse_doctype_instrumented;StoreVFGNode ID: 1649 StoreStmt: [Var1190 <-- Var1239]	    store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 
		206;ADEF;205;DOMINATOR;4;FIObjVar ID: 1191 (base object)    %bracket_instrumented = alloca i8*, align 4 
	207;SUSE;0;count_lines_instrumented;StoreVFGNode ID: 1830 StoreStmt: [Var2797 <-- Var2818]	    store i8* %call_instrumented, i8** %it_instrumented, align 4 
		59;ADEF;207;DOMINATOR;4;FIObjVar ID: 2798 (base object)    %it_instrumented = alloca i8*, align 4 
	208;SUSE;0;parse_comment_instrumented;StoreVFGNode ID: 1710 StoreStmt: [Var1776 <-- Var1824]	    store i8* %call6_instrumented, i8** %dash_instrumented, align 4 
		209;ADEF;208;DOMINATOR;4;FIObjVar ID: 1777 (base object)    %dash_instrumented = alloca i8*, align 4 
	210;SUSE;0;parse_end_instrumented;StoreVFGNode ID: 1698 StoreStmt: [Var1661 <-- Var1731]	    store i8* %call13_instrumented, i8** %space_instrumented, align 4 
		211;ADEF;210;DOMINATOR;4;FIObjVar ID: 1662 (base object)    %space_instrumented = alloca i8*, align 4 
212;IN;-1;CallICFGNode178 {fun: main}
	213;LUSE;212;main;CallICFGNode178 {fun: main}
		1;ADEF;213;BASE;8128;FIObjVar ID: 327 (base object)    %buffer = alloca [8128 x i8], align 1 
356;ADEF;-1;BASE;1536;FIObjVar ID: 331 (base object)    %tokens = alloca [128 x %struct.sxmltok_t], align 4 
  store i32 %c, i32* %c.addr, align 4 | defStr:  | storeStr: 24 | libStr: 
  %c.addr = alloca i32, align 4 | defStr: 25 | storeStr:  | libStr: 
  store i32 %c, i32* %c.addr_instrumented, align 4 | defStr:  | storeStr: 26 | libStr: 
  %c.addr_instrumented = alloca i32, align 4 | defStr: 27 | storeStr:  | libStr: 
  store i8* %16, i8** %it_instrumented, align 4 | defStr:  | storeStr: 28 | libStr: 
  %it_instrumented = alloca i8*, align 4 | defStr: 29 | storeStr:  | libStr: 
  store i32 %lor.ext, i32* %retval, align 4 | defStr:  | storeStr: 30 | libStr: 
  %retval = alloca i32, align 4 | defStr: 31 | storeStr:  | libStr: 
  store i8* %add.ptr18_instrumented, i8** %quest_instrumented, align 4 | defStr:  | storeStr: 32 | libStr: 
  %quest_instrumented = alloca i8*, align 4 | defStr: 33 | storeStr:  | libStr: 
  store i32 %sub.ptr.sub_instrumented, i32* %startpos_instrumented, align 4 | defStr:  | storeStr: 34 | libStr: 
  store i8* %end, i8** %end.addr_instrumented, align 4 | defStr:  | storeStr: 35 | libStr: 
  store i8* %call42_instrumented, i8** %name_instrumented, align 4 | defStr:  | storeStr: 37 | libStr: 
  %name_instrumented = alloca i8*, align 4 | defStr: 38 | storeStr:  | libStr: 
  %quot_instrumented = alloca i8*, align 4 | defStr: 40 | storeStr:  | libStr: 
  %end.addr_instrumented = alloca i8*, align 4 | defStr: 36 | storeStr:  | libStr: 
  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 | defStr: 3 | storeStr:  | libStr: 
  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 | defStr: 7 | storeStr:  | libStr: 
  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 | defStr: 5 | storeStr:  | libStr: 
  %retval_instrumented = alloca i8*, align 4 | defStr: 19 | storeStr:  | libStr: 
  %bufferlen.addr_instrumented = alloca i32, align 4 | defStr: 17 | storeStr:  | libStr: 
  store i8* %17, i8** %retval_instrumented, align 4 | defStr:  | storeStr: 18 | libStr: 
  store i8* %add.ptr_instrumented, i8** %prev_instrumented, align 4 | defStr:  | storeStr: 20 | libStr: 
  %prev_instrumented = alloca i8*, align 4 | defStr: 21 | storeStr:  | libStr: 
  store i8* %start, i8** %start.addr_instrumented, align 4 | defStr:  | storeStr: 22 | libStr: 
  %start.addr_instrumented = alloca i8*, align 4 | defStr: 23 | storeStr:  | libStr: 
  store %struct.sxmltok_t* %arrayidx_instrumented, %struct.sxmltok_t** %token_instrumented, align 4 | defStr:  | storeStr: 15 | libStr: 
  store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 | defStr:  | storeStr: 16 | libStr: 
  %args_instrumented = alloca %struct.sxml_args_t, align 4 | defStr: 4 | storeStr:  | libStr: 
  %start29_instrumented = alloca i8*, align 4 | defStr: 97 | storeStr:  | libStr: 
  %buffer.addr_instrumented = alloca i8*, align 4 | defStr: 99 | storeStr:  | libStr: 
  %ampr_instrumented = alloca i8*, align 4 | defStr: 95 | storeStr:  | libStr: 
  store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 | defStr:  | storeStr: 47 | libStr: 
  store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 | defStr:  | storeStr: 49 | libStr: 
  %end_instrumented = alloca i8*, align 4 | defStr: 50 | storeStr:  | libStr: 
  store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 | defStr:  | storeStr: 51 | libStr: 
  %end_instrumented = alloca i8*, align 4 | defStr: 52 | storeStr:  | libStr: 
  store i8* %call30_instrumented, i8** %quot_instrumented, align 4 | defStr:  | storeStr: 53 | libStr: 
  %start.addr_instrumented = alloca i8*, align 4 | defStr: 55 | storeStr:  | libStr: 
  store i8* %start, i8** %start.addr_instrumented, align 4 | defStr:  | storeStr: 54 | libStr: 
  store i8* %start, i8** %start.addr_instrumented, align 4 | defStr:  | storeStr: 56 | libStr: 
  %start.addr_instrumented = alloca i8*, align 4 | defStr: 57 | storeStr:  | libStr: 
  store i8* %6, i8** %it_instrumented, align 4 | defStr:  | storeStr: 58 | libStr: 
  %it_instrumented = alloca i8*, align 4 | defStr: 59 | storeStr:  | libStr: 
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 | defStr:  | storeStr: 60 | libStr: 
  %start_instrumented = alloca i8*, align 4 | defStr: 62 | storeStr:  | libStr: 
  store i8* %add.ptr20_instrumented, i8** %start_instrumented, align 4 | defStr:  | storeStr: 61 | libStr: 
  store i8* %add.ptr18_instrumented, i8** %start.addr_instrumented, align 4 | defStr:  | storeStr: 63 | libStr: 
  %start.addr_instrumented = alloca i8*, align 4 | defStr: 64 | storeStr:  | libStr: 
  store i8* %call14_instrumented, i8** %quot_instrumented, align 4 | defStr:  | storeStr: 39 | libStr: 
  store i8* %buffer, i8** %buffer.addr_instrumented, align 4 | defStr:  | storeStr: 41 | libStr: 
  %buffer.addr_instrumented = alloca i8*, align 4 | defStr: 42 | storeStr:  | libStr: 
  store i8* %end, i8** %end.addr_instrumented, align 4 | defStr:  | storeStr: 43 | libStr: 
  %end.addr_instrumented = alloca i8*, align 4 | defStr: 44 | storeStr:  | libStr: 
  store i32 %c, i32* %c.addr, align 4 | defStr:  | storeStr: 45 | libStr: 
  %c.addr = alloca i32, align 4 | defStr: 46 | storeStr:  | libStr: 
  %start_instrumented = alloca i8*, align 4 | defStr: 48 | storeStr:  | libStr: 
  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 | defStr: 8 | storeStr:  | libStr: 
  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 | defStr: 6 | storeStr:  | libStr: 
  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 | defStr: 9 | storeStr:  | libStr: 
  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 | defStr: 10 | storeStr:  | libStr: 
  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 | defStr: 11 | storeStr:  | libStr: 
  %token_instrumented = alloca %struct.sxmltok_t*, align 4 | defStr: 12 | storeStr:  | libStr: 
  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 | defStr: 13 | storeStr:  | libStr: 
  %args.addr_instrumented = alloca %struct.sxml_args_t*, align 4 | defStr: 14 | storeStr:  | libStr: 
  %colon_instrumented = alloca i8*, align 4 | defStr: 92 | storeStr:  | libStr: 
  store i16 0, i16* %size_instrumented, align 2 | defStr:  | storeStr: 93 | libStr: 
  store i8* %add.ptr3_instrumented, i8** %ampr_instrumented, align 4 | defStr:  | storeStr: 94 | libStr: 
  store i8* %add.ptr32_instrumented, i8** %start29_instrumented, align 4 | defStr:  | storeStr: 96 | libStr: 
  %start_instrumented = alloca i8*, align 4 | defStr: 101 | storeStr:  | libStr: 
  store i8* %end, i8** %end.addr_instrumented, align 4 | defStr:  | storeStr: 102 | libStr: 
  %end.addr_instrumented = alloca i8*, align 4 | defStr: 103 | storeStr:  | libStr: 
  store i8* %15, i8** %retval_instrumented, align 4 | defStr:  | storeStr: 104 | libStr: 
  %start_instrumented = alloca i8*, align 4 | defStr: 106 | storeStr:  | libStr: 
  store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 | defStr:  | storeStr: 105 | libStr: 
  store i8* %incdec.ptr_instrumented, i8** %gt_instrumented, align 4 | defStr:  | storeStr: 107 | libStr: 
  store i8* %buffer, i8** %buffer.addr_instrumented, align 4 | defStr:  | storeStr: 98 | libStr: 
  store i8* %add.ptr6_instrumented, i8** %start_instrumented, align 4 | defStr:  | storeStr: 100 | libStr: 
  %buffer = alloca [8128 x i8], align 1 | defStr: 1 | storeStr:  | libStr: 
  store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 | defStr:  | storeStr: 65 | libStr: 
  %end_instrumented = alloca i8*, align 4 | defStr: 66 | storeStr:  | libStr: 
  store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 | defStr:  | storeStr: 67 | libStr: 
  %end_instrumented = alloca i8*, align 4 | defStr: 68 | storeStr:  | libStr: 
  store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 | defStr:  | storeStr: 69 | libStr: 
  %end_instrumented = alloca i8*, align 4 | defStr: 70 | storeStr:  | libStr: 
  store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 | defStr:  | storeStr: 71 | libStr: 
  %start_instrumented = alloca i8*, align 4 | defStr: 72 | storeStr:  | libStr: 
  store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 | defStr:  | storeStr: 73 | libStr: 
  %end_instrumented = alloca i8*, align 4 | defStr: 74 | storeStr:  | libStr: 
  store i8* %9, i8** %it_instrumented, align 4 | defStr:  | storeStr: 75 | libStr: 
  %eq_instrumented = alloca i8*, align 4 | defStr: 77 | storeStr:  | libStr: 
  store i8* %call6_instrumented, i8** %eq_instrumented, align 4 | defStr:  | storeStr: 76 | libStr: 
  store i8* %call8_instrumented, i8** %gt_instrumented, align 4 | defStr:  | storeStr: 78 | libStr: 
  %gt_instrumented = alloca i8*, align 4 | defStr: 79 | storeStr:  | libStr: 
  store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 | defStr:  | storeStr: 80 | libStr: 
  %start_instrumented = alloca i8*, align 4 | defStr: 81 | storeStr:  | libStr: 
  store i8* %buffer, i8** %buffer.addr_instrumented, align 4 | defStr:  | storeStr: 82 | libStr: 
  %buffer.addr_instrumented = alloca i8*, align 4 | defStr: 83 | storeStr:  | libStr: 
  store i8* %add.ptr_instrumented, i8** %end_instrumented, align 4 | defStr:  | storeStr: 84 | libStr: 
  %end_instrumented = alloca i8*, align 4 | defStr: 85 | storeStr:  | libStr: 
  store i8* %end, i8** %end.addr_instrumented, align 4 | defStr:  | storeStr: 86 | libStr: 
  %end.addr_instrumented = alloca i8*, align 4 | defStr: 87 | storeStr:  | libStr: 
  store i8* %add.ptr7_instrumented, i8** %start_instrumented, align 4 | defStr:  | storeStr: 88 | libStr: 
  %it_instrumented = alloca i8*, align 4 | defStr: 90 | storeStr:  | libStr: 
  store i8* %9, i8** %it_instrumented, align 4 | defStr:  | storeStr: 89 | libStr: 
  store i8* %call14_instrumented, i8** %colon_instrumented, align 4 | defStr:  | storeStr: 91 | libStr: 
  store i16 %conv_instrumented, i16* %type2_instrumented, align 4 | defStr:  | storeStr: 2 | libStr: 
  %gt_instrumented = alloca i8*, align 4 | defStr: 108 | storeStr:  | libStr: 
  store i8* %9, i8** %buffer1_instrumented, align 4 | defStr:  | storeStr: 109 | libStr: 
  store i8* %add.ptr9_instrumented, i8** %name_instrumented, align 4 | defStr:  | storeStr: 111 | libStr: 
  store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 | defStr:  | storeStr: 110 | libStr: 
  %retval_instrumented = alloca i8*, align 4 | defStr: 115 | storeStr:  | libStr: 
  %name_instrumented = alloca i8*, align 4 | defStr: 112 | storeStr:  | libStr: 
  store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 | defStr:  | storeStr: 116 | libStr: 
  %start_instrumented = alloca i8*, align 4 | defStr: 117 | storeStr:  | libStr: 
  store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 | defStr:  | storeStr: 118 | libStr: 
  %end_instrumented = alloca i8*, align 4 | defStr: 119 | storeStr:  | libStr: 
  store i8* %buffer, i8** %buffer.addr_instrumented, align 4 | defStr:  | storeStr: 120 | libStr: 
  %buffer.addr_instrumented = alloca i8*, align 4 | defStr: 121 | storeStr:  | libStr: 
  store i8* %end, i8** %end.addr_instrumented, align 4 | defStr:  | storeStr: 122 | libStr: 
  %end.addr_instrumented = alloca i8*, align 4 | defStr: 123 | storeStr:  | libStr: 
  store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 | defStr:  | storeStr: 124 | libStr: 
  %start.addr_instrumented = alloca i8*, align 4 | defStr: 127 | storeStr:  | libStr: 
  store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 | defStr:  | storeStr: 125 | libStr: 
  store i8* %call_instrumented, i8** %name_instrumented, align 4 | defStr:  | storeStr: 113 | libStr: 
  store i8* %30, i8** %retval_instrumented, align 4 | defStr:  | storeStr: 114 | libStr: 
  store i8* %start, i8** %start.addr_instrumented, align 4 | defStr:  | storeStr: 126 | libStr: 
  store i8* %end, i8** %end.addr_instrumented, align 4 | defStr:  | storeStr: 128 | libStr: 
  %end.addr_instrumented = alloca i8*, align 4 | defStr: 129 | storeStr:  | libStr: 
  store i8* %ptr, i8** %ptr.addr_instrumented, align 4 | defStr:  | storeStr: 130 | libStr: 
  %ptr.addr_instrumented = alloca i8*, align 4 | defStr: 131 | storeStr:  | libStr: 
  store i8* %add.ptr2_instrumented, i8** %end_instrumented, align 4 | defStr:  | storeStr: 132 | libStr: 
  %end_instrumented = alloca i8*, align 4 | defStr: 133 | storeStr:  | libStr: 
  store i8* %end, i8** %end.addr_instrumented, align 4 | defStr:  | storeStr: 134 | libStr: 
  %end.addr_instrumented = alloca i8*, align 4 | defStr: 135 | storeStr:  | libStr: 
  store i8* %start, i8** %start.addr_instrumented, align 4 | defStr:  | storeStr: 136 | libStr: 
  %start.addr_instrumented = alloca i8*, align 4 | defStr: 137 | storeStr:  | libStr: 
  store i32 %add30, i32* %bufferlen, align 4 | defStr:  | storeStr: 138 | libStr: 
  %bufferlen = alloca i32, align 4 | defStr: 139 | storeStr:  | libStr: 
  store i8* %call_instrumented, i8** %it_instrumented, align 4 | defStr:  | storeStr: 140 | libStr: 
  %it_instrumented = alloca i8*, align 4 | defStr: 141 | storeStr:  | libStr: 
  store i32 %sub.ptr.sub6_instrumented, i32* %endpos_instrumented, align 4 | defStr:  | storeStr: 142 | libStr: 
  store i8* %start, i8** %start.addr_instrumented, align 4 | defStr:  | storeStr: 143 | libStr: 
  store i8* %call11_instrumented, i8** %space_instrumented, align 4 | defStr:  | storeStr: 145 | libStr: 
  %args_instrumented = alloca %struct.sxml_args_t, align 4, !zdef !6 | defStr: 150 | storeStr:  | libStr: 
  %space_instrumented = alloca i8*, align 4 | defStr: 146 | storeStr:  | libStr: 
  %end.addr_instrumented = alloca i8*, align 4 | defStr: 148 | storeStr:  | libStr: 
  %start.addr_instrumented = alloca i8*, align 4 | defStr: 144 | storeStr:  | libStr: 
  store i8* %end, i8** %end.addr_instrumented, align 4 | defStr:  | storeStr: 147 | libStr: 
  store i32 %10, i32* %bufferlen2_instrumented, align 4 | defStr:  | storeStr: 149 | libStr: 
  store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 | defStr:  | storeStr: 152 | libStr: 
  store i8* %start, i8** %start.addr_instrumented, align 4 | defStr:  | storeStr: 151 | libStr: 
  %lt33_instrumented = alloca i8*, align 4 | defStr: 155 | storeStr:  | libStr: 
  %start_instrumented = alloca i8*, align 4 | defStr: 153 | storeStr:  | libStr: 
  store i8* %call_instrumented, i8** %ampr_instrumented, align 4 | defStr:  | storeStr: 156 | libStr: 
  %ampr_instrumented = alloca i8*, align 4 | defStr: 157 | storeStr:  | libStr: 
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 | defStr:  | storeStr: 158 | libStr: 
  %start_instrumented = alloca i8*, align 4 | defStr: 160 | storeStr:  | libStr: 
  store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 | defStr:  | storeStr: 159 | libStr: 
  store i8* %call34_instrumented, i8** %lt33_instrumented, align 4 | defStr:  | storeStr: 154 | libStr: 
  store i32 %c, i32* %c.addr, align 4 | defStr:  | storeStr: 161 | libStr: 
  %c.addr = alloca i32, align 4 | defStr: 162 | storeStr:  | libStr: 
  store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 | defStr:  | storeStr: 163 | libStr: 
  %bracket_instrumented = alloca i8*, align 4 | defStr: 164 | storeStr:  | libStr: 
  store i32 %sub.ptr.sub_instrumented, i32* %bufferpos_instrumented, align 4, !ziuse !5 | defStr:  | storeStr: 165 | libStr: 
  %temp_instrumented = alloca %struct.sxml_t, align 4 | defStr: 167 | storeStr:  | libStr: 
  %state.addr_instrumented = alloca %struct.sxml_t*, align 4 | defStr: 168 | storeStr:  | libStr: 
  %state.addr_instrumented = alloca %struct.sxml_t*, align 4 | defStr: 166 | storeStr:  | libStr: 
  %state.addr_instrumented = alloca %struct.sxml_t*, align 4 | defStr: 170 | storeStr:  | libStr: 
  %state.addr_instrumented = alloca %struct.sxml_t*, align 4 | defStr: 169 | storeStr:  | libStr: 
  %state.addr_instrumented = alloca %struct.sxml_t*, align 4 | defStr: 171 | storeStr:  | libStr: 
  %state.addr_instrumented = alloca %struct.sxml_t*, align 4 | defStr: 172 | storeStr:  | libStr: 
  %state.addr_instrumented = alloca %struct.sxml_t*, align 4 | defStr: 173 | storeStr:  | libStr: 
  %state.addr_instrumented = alloca %struct.sxml_t*, align 4 | defStr: 174 | storeStr:  | libStr: 
  %state.addr_instrumented = alloca %struct.sxml_t*, align 4 | defStr: 175 | storeStr:  | libStr: 
  %state.addr_instrumented = alloca %struct.sxml_t*, align 4 | defStr: 176 | storeStr:  | libStr: 
  store i8* %9, i8** %it_instrumented, align 4 | defStr:  | storeStr: 177 | libStr: 
  %it_instrumented = alloca i8*, align 4 | defStr: 178 | storeStr:  | libStr: 
  store i8* %add.ptr24_instrumented, i8** %gt_instrumented, align 4 | defStr:  | storeStr: 179 | libStr: 
  %it_instrumented = alloca i8*, align 4 | defStr: 183 | storeStr:  | libStr: 
  store i8* %add.ptr5_instrumented, i8** %start_instrumented, align 4 | defStr:  | storeStr: 180 | libStr: 
  store i8* %add.ptr_instrumented, i8** %start_instrumented, align 4 | defStr:  | storeStr: 181 | libStr: 
  store i8* %call8_instrumented, i8** %it_instrumented, align 4 | defStr:  | storeStr: 182 | libStr: 
  store i8* %call6_instrumented, i8** %space_instrumented, align 4 | defStr:  | storeStr: 184 | libStr: 
  %space_instrumented = alloca i8*, align 4 | defStr: 185 | storeStr:  | libStr: 
  store i8* %incdec.ptr_instrumented, i8** %it_instrumented, align 4 | defStr:  | storeStr: 186 | libStr: 
  store i32 0, i32* %bufferpos31, align 4 | defStr:  | storeStr: 187 | libStr: 
  %parser = alloca %struct.sxml_t, align 4 | defStr: 188 | storeStr:  | libStr: 
  store i8* %cond_instrumented, i8** %limit_instrumented, align 4 | defStr:  | storeStr: 189 | libStr: 
  %end.addr_instrumented = alloca i8*, align 4 | defStr: 192 | storeStr:  | libStr: 
  %limit_instrumented = alloca i8*, align 4 | defStr: 190 | storeStr:  | libStr: 
  store i8* %end, i8** %end.addr_instrumented, align 4 | defStr:  | storeStr: 191 | libStr: 
  store i8* %call10_instrumented, i8** %space_instrumented, align 4 | defStr:  | storeStr: 193 | libStr: 
  %space_instrumented = alloca i8*, align 4 | defStr: 194 | storeStr:  | libStr: 
  store i8* %call_instrumented, i8** %lt_instrumented, align 4 | defStr:  | storeStr: 195 | libStr: 
  %lt_instrumented = alloca i8*, align 4 | defStr: 196 | storeStr:  | libStr: 
  store i32 %bufferlen, i32* %bufferlen.addr_instrumented, align 4 | defStr:  | storeStr: 197 | libStr: 
  %bufferlen.addr_instrumented = alloca i32, align 4 | defStr: 198 | storeStr:  | libStr: 
  store i8* %add.ptr28_instrumented, i8** %value_instrumented, align 4 | defStr:  | storeStr: 199 | libStr: 
  %value_instrumented = alloca i8*, align 4 | defStr: 200 | storeStr:  | libStr: 
  store i8* %28, i8** %retval_instrumented, align 4 | defStr:  | storeStr: 201 | libStr: 
  %buffer.addr_instrumented = alloca i8*, align 4 | defStr: 204 | storeStr:  | libStr: 
  store i32 %sub, i32* %bufferlen, align 4 | defStr:  | storeStr: 202 | libStr: 
  store i8* %buffer, i8** %buffer.addr_instrumented, align 4 | defStr:  | storeStr: 203 | libStr: 
  store i8* %call6_instrumented, i8** %bracket_instrumented, align 4 | defStr:  | storeStr: 205 | libStr: 
  %bracket_instrumented = alloca i8*, align 4 | defStr: 206 | storeStr:  | libStr: 
  store i8* %call_instrumented, i8** %it_instrumented, align 4 | defStr:  | storeStr: 207 | libStr: 
  %dash_instrumented = alloca i8*, align 4 | defStr: 209 | storeStr:  | libStr: 
  store i8* %call6_instrumented, i8** %dash_instrumented, align 4 | defStr:  | storeStr: 208 | libStr: 
  store i8* %call13_instrumented, i8** %space_instrumented, align 4 | defStr:  | storeStr: 210 | libStr: 
  %space_instrumented = alloca i8*, align 4 | defStr: 211 | storeStr:  | libStr: 
  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* %7, i8* %arraydecay) | defStr:  | storeStr:  | libStr: 213
  %tokens = alloca [128 x %struct.sxmltok_t], align 4 | defStr: 356 | storeStr:  | libStr: 
---------------------------------------------------
Writing '/home/laser/Desktop/zbouncer/test/../test/xml-parser/graph/pag.dot'...
Writing '/home/laser/Desktop/zbouncer/test/../test/xml-parser/graph/svfg.dot'...
Writing '/home/laser/Desktop/zbouncer/test/../test/xml-parser/graph/icfg.dot'...
